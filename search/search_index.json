{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bienvenue en Base de donn\u00e9es 2","text":""},{"location":"examen/epreuve_finale/formatif_part01/","title":"\u00c9preuve finale - partie 1 - Formatif","text":""},{"location":"examen/epreuve_finale/formatif_part01/#consignes","title":"Consignes","text":"<ul> <li>Vous avez droit \u00e0 toutes vos notes et Internet.</li> <li>Aucune communication n'est permise (messagerie, courriel, etc.). Un \u00e9l\u00e8ve pris en flagrant d\u00e9lit se verra attribuer la note de 0 pour plagiat.</li> <li>La dur\u00e9e de l'examen est de 1h50.</li> <li>Une fois l\u2019examen termin\u00e9, vous devez me remettre les fichiers suivants dans un dossier compress\u00e9 nomm\u00e9 au format suivant : NomPrenom_ExamenFinalPartie1. </li> <li>Un diagramme de classe en format image.</li> <li>Un script SQL de cr\u00e9ation de la base de donn\u00e9es et des tables.</li> <li>Un script SQL de cr\u00e9ation des d\u00e9clencheurs.</li> <li>Un script SQL de cr\u00e9ation d'un usager.</li> <li>Le dossier compress\u00e9 doit \u00eatre remis sur Teams dans le devoir de l'examen.</li> <li>Il est de votre devoir de vous assurer que tous les fichiers sont inclus dans la remise. Aucun fichier ne sera accept\u00e9 une fois que vous aurez quitt\u00e9 le lieu de l'examen. </li> </ul>"},{"location":"examen/epreuve_finale/formatif_part01/#mise-en-situation","title":"Mise en situation","text":"<p>L'entreprise qui vous emploie d\u00e9veloppe une application qui permet de cr\u00e9er des questionnaires et vous \u00eates en charge de cr\u00e9er la base de donn\u00e9es qui contiendra ces questionnaires. Vous avez re\u00e7u de votre charg\u00e9 de projet les \u00e9crans suivants pour vous aider dans votre travail.</p> <p></p> <p>Ce premier \u00e9cran repr\u00e9sente une vue du questionnaire dans son ensemble. Pour chaque questionnaire on doit obligatoirement d\u00e9finir un titre et on a l'option d'ajouter un court texte descriptif. On peut ensuite ajouter une ou plusieurs questions qui peuvent \u00eatre de deux types : \u00e0 choix de r\u00e9ponse ou bien au format texte. Chaque type \u00e0 ses propres particularit\u00e9s. </p> <p>Le questionnaire \u00e0 une colonne qu'on ne voit pas \u00e0 l'\u00e9cran et qui contient le pointage cumul\u00e9 de toutes les questions.</p>"},{"location":"examen/epreuve_finale/formatif_part01/#questions-a-choix-de-reponse","title":"Questions \u00e0 choix de r\u00e9ponse.","text":"<p>Voici une capture d'\u00e9cran des options d'une question \u00e0 choix de r\u00e9ponse.</p> <p></p> <ul> <li>La question peut avoir plusieurs choix, mais seulement un de ces choix est la bonne r\u00e9ponse. </li> <li>On peut ajouter un pointage ou pas \u00e0 la question. </li> <li>La question peut \u00eatre obligatoire ou non.</li> </ul>"},{"location":"examen/epreuve_finale/formatif_part01/#questions-au-format-texte","title":"Questions au format texte","text":"<p>Voici une capture d'\u00e9cran d'une question au format texte.</p> <p> - Pour ce type de question, l'usager doit saisir sa r\u00e9ponse en texte. On peut avoir une ou plusieurs bonnes r\u00e9ponses.  - On peut ajouter un pointage ou pas \u00e0 la question. - La question peut \u00eatre obligatoire ou non.</p>"},{"location":"examen/epreuve_finale/formatif_part01/#directives","title":"Directives","text":""},{"location":"examen/epreuve_finale/formatif_part01/#question-1","title":"Question #1","text":"<p>Vous devez cr\u00e9er un mod\u00e8le de la base de donn\u00e9es qui permettra de reproduire des questionnaires selon les sp\u00e9cifications de la mise en situation plus haut. Le mod\u00e8le doit seulement permettre de sauvegarder les informations de cr\u00e9ation du questionnaire, vous ne devez pas \u00e0 g\u00e9rer les r\u00e9ponses des participants.</p> <p>Votre mod\u00e8le doit \u00eatre sous la forme d'un diagramme de classes et r\u00e9pondre aux points suivants : </p> <ul> <li>Votre diagramme doit r\u00e9pondre \u00e0 la convention de nomenclature telle que d\u00e9crite dans les notes de cours \"Analyse et mod\u00e9lisation de syst\u00e8mes\".</li> <li>Pour chaque colonne de chaque table du diagramme, vous devez sp\u00e9cifier un type de donn\u00e9es ad\u00e9quat, si elle est une cl\u00e9 primaire (PK) ou \u00e9trang\u00e8re (FK). Si la colonne est ni une cl\u00e9 primaire ou \u00e9trang\u00e8re, mais qu'elle ne peut \u00eatre nulle, vous devez aussi l'indiquer (NOT NULL).</li> <li>ex. #1 -&gt; id INT PK</li> <li>ex. #2 -&gt; code_usager VARCHAR(50) NOT NULL </li> <li>Pour les relations entre les tables, vous devez m'indiquer le type de relation en utilisant la notation 1&lt;---&gt;1 pour une relation d'un \u00e0 un et 1&lt;---&gt;n ou n&lt;---&gt;1 pour une relation d'un \u00e0 plusieurs</li> <li>Votre mod\u00e9lisation doit r\u00e9pondre aux r\u00e8gles de la troisi\u00e8me forme normale.</li> </ul> <p>Vous devez me fournir votre diagramme de classes dans un format image (jpg, png) et le nommer NomPrenom_diagramme</p>"},{"location":"examen/epreuve_finale/formatif_part01/#question-2","title":"Question #2","text":"<p>Cr\u00e9ez un script SQL qui va cr\u00e9er la base de donn\u00e9es ainsi que toutes les tables repr\u00e9sent\u00e9es dans votre diagramme de classes.</p> <ul> <li>La base de donn\u00e9es doit se nommer ExamenFinal_NomPrenom</li> <li>Dans la cr\u00e9ation des tables, vous devez inclure la cr\u00e9ation des cl\u00e9s primaires et \u00e9trang\u00e8res s'il y a lieu.</li> <li>Le script doit pouvoir \u00eatre lanc\u00e9 plus d'une fois sans provoquer d'erreurs.</li> <li>Chaque lancement du script doit r\u00e9g\u00e9n\u00e9rer la base de donn\u00e9es ainsi que les tables.</li> </ul> <p>Le script SQL \u00e0 remettre doit se nommer NomPrenom_ceationBD.sql.</p>"},{"location":"examen/epreuve_finale/formatif_part01/#question-3","title":"Question #3","text":"<p>Cr\u00e9ez un script SQL qui va ajouter des d\u00e9clencheurs (Triggers) qui permettront de recalculer la colonne du pointage cumul\u00e9 du questionnaire \u00e0 chaque fois que vous allez ajouter, modifier ou supprimer une question.</p> <ul> <li>Pour chacune des op\u00e9rations (ajout, modification et suppression), choisissez le bon moment pour placer le d\u00e9clencheur.</li> <li>Si la question n'a pas de pointage, vous ne devez pas faire la mise \u00e0 jour de la colonne.</li> <li>Le script doit pouvoir \u00eatre lanc\u00e9 plus d'une fois sans provoquer d'erreurs.</li> <li>Chaque lancement du script doit recr\u00e9er les triggers.</li> </ul> <p>Le script SQL \u00e0 remettre doit se nommer NomPrenom_creationTrigger.sql.</p>"},{"location":"examen/epreuve_finale/formatif_part01/#question-4","title":"Question #4","text":"<p>Cr\u00e9ez un script SQL qui fera la cr\u00e9ation d'un usager et lui donnera des permissions selon les informations suivantes: </p> <p>a) Informations de l'usager : </p> <ul> <li>nom : correcteur</li> <li>mot de passe : !3ct3Ur</li> <li>h\u00f4te accept\u00e9 : localhost</li> </ul> <p>b) Permission de l'usager : </p> <ul> <li>Il peut faire des requ\u00eates SELECT et UPDATE sur toutes les colonnes de la table qui contient les informations g\u00e9n\u00e9rales du questionnaire de votre base de donn\u00e9es sauf la colonne du pointage calcul\u00e9.</li> <li>Pour toutes les autres tables de la base de donn\u00e9es, il peut faire des requ\u00eates SELECT et UPDATE.</li> </ul> <p>Le script doit pouvoir \u00eatre lanc\u00e9 plus d'une fois sans provoquer d'erreurs et chaque lancement du script doit recr\u00e9er les triggers.</p> <p>Le script SQL \u00e0 remettre doit se nommer NomPrenom_creationUsager.sql.</p>"},{"location":"examen/epreuve_finale/formatif_part01/#grille-de-correction","title":"Grille de correction","text":"\u00c9l\u00e9ments Points Tous les scripts SQL peuvent \u00eatre ex\u00e9cut\u00e9s plus d'une fois sans provoquer d'erreurs /6 Question #1 /40 La convention de nomenclature est respect\u00e9e. 2 Les types de donn\u00e9es utilis\u00e9s sont exacts et pertinents. 6 Les relations entre les tables sont justes. 10 La mod\u00e9lisation r\u00e9pond aux r\u00e8gles de la troisi\u00e8me forme normale. 2 Le diagramme de classes r\u00e9pond aux besoins  de la mise en situation. 20 Question #2 /20 La base de donn\u00e9es est cr\u00e9\u00e9e et porte le nom requis 5 Toutes les tables sont cr\u00e9\u00e9es ainsi que les cl\u00e9s primaires et \u00e9trang\u00e8res 15 Question #3 /24 Un d\u00e9clencheur est lanc\u00e9 au bon moment lors de l'ajout d'une question et met \u00e0 jour le pointage calcul\u00e9 au besoin. 8 Un d\u00e9clencheur est lanc\u00e9 au bon moment lors de la modification d'une question et met \u00e0 jour le pointage calcul\u00e9 au besoin. 8 Un d\u00e9clencheur est lanc\u00e9 au bon moment lors de la suppression d'une question et met \u00e0 jour le pointage calcul\u00e9 au besoin. 8 Question #4 /10 L'usager est cr\u00e9\u00e9 selon les informations donn\u00e9es. 5 Les permissions requises sont accord\u00e9es \u00e0 l'usager. 5 Total /100"},{"location":"examen/epreuve_finale/formatif_part01/#corrige","title":"Corrig\u00e9","text":"<ul> <li>Question #1 : VersionCorrige_diagramme</li> <li>Question #2 : VersionCorrige_creationBD</li> <li>Question #3 : VersionCorrige_creationTrigger</li> <li>Question #4 : VersionCorrige_creationUsager</li> </ul>"},{"location":"examen/epreuve_finale/formatif_part02/","title":"\u00c9preuve finale - partie 2 - Formatif","text":""},{"location":"examen/epreuve_finale/formatif_part02/#consignes","title":"Consignes","text":"<ul> <li>Vous avez droit \u00e0 toutes vos notes et Internet.</li> <li>Aucune communication n'est permise (messagerie, courriel, etc.). Un \u00e9l\u00e8ve pris en flagrant d\u00e9lit se verra attribuer la note de 0 pour plagiat.</li> <li>La dur\u00e9e de l'examen est de 1h50.</li> <li>Une fois l\u2019examen termin\u00e9, vous devez faire un commit avec le message \"Remise   finale\" et faire un push de votre d\u00e9p\u00f4t pour le synchroniser avec GitHub.</li> <li>Il est de votre devoir de vous assurer que votre fichier est inclus dans la remise. Aucun fichier ne sera accept\u00e9 une fois que vous aurez quitt\u00e9 le lieu de l'examen. </li> </ul>"},{"location":"examen/epreuve_finale/formatif_part02/#directives","title":"Directives","text":"<ul> <li>Clonez le d\u00e9p\u00f4t GitHub suivant : https://github.com/Base-de-donnee-2/epreuvefinal-formatif2.git</li> <li>Importez le script SQL create_bd.sql pr\u00e9sent dans le r\u00e9pertoire ressources du d\u00e9p\u00f4t Git clon\u00e9.</li> <li>N'oubliez pas dans le script Python d'ajuster les informations de connexion \u00e0 la base de donn\u00e9es.</li> </ul> <p>Diagramme de classe de la base de donn\u00e9es import\u00e9e</p> <p></p> <p>Menu principale du script questionnaire.py</p> <p></p>"},{"location":"examen/epreuve_finale/formatif_part02/#question-1","title":"Question #1","text":"<p>Compl\u00e9tez la section afficher une question du script questionnaire.py.</p> <ul> <li>Vous devez demander \u00e0 l'usager le id de la question.</li> <li>Si le id est valide et que la question existe, afficher les informations suivantes : </li> <li>Sur la premi\u00e8re ligne, le texte de la question, un ast\u00e9risque si la question est obligatoire et le pointage de la question entre parenth\u00e8ses. Ex: \"Quelle est la capitale du Botswana * (5 points)\"</li> <li>Sur la deuxi\u00e8me ligne, le type de la question. \"Question \u00e0 choix\"</li> <li>Sur les lignes suivantes, si c'est une question \u00e0 choix de r\u00e9ponse, afficher un choix par ligne et entre parenth\u00e8ses \"(bonne r\u00e9ponse)\" \u00e0 la suite de la ligne avec le choix de la bonne r\u00e9ponse.</li> <li>Si c'est une question texte, afficher sur une troisi\u00e8me ligne \"Bonne r\u00e9ponse : \" et la liste des r\u00e9ponses de la table question_texte_reponse s\u00e9par\u00e9es par des virgules. Ex : \"Bonne r\u00e9ponse : Anglais, Tswana\" </li> </ul> <p>Exemple de r\u00e9sultat pour une question \u00e0 choix</p> <p></p> <p>Exemple de r\u00e9sultat pour une question texte</p> <p></p>"},{"location":"examen/epreuve_finale/formatif_part02/#question-2","title":"Question #2","text":"<p>Compl\u00e9tez la section ajouter une r\u00e9ponse du script questionnaire.py.</p> <ul> <li>Vous devez demander \u00e0 l'usager le id de la question.</li> <li>Demandez le texte de la r\u00e9ponse \u00e0 ajouter.</li> <li>Si la question est \u00e0 choix de r\u00e9ponse</li> <li>Vous devez demander si c'est la bonne r\u00e9ponse. Ex \"Est-ce la bonne r\u00e9ponse (o/n)\"</li> <li>Vous devez demander l'ordre du choix. (Vous n'\u00eates pas oblig\u00e9 de valider si le nombre est d\u00e9j\u00e0 utilis\u00e9 pour cette question)</li> <li>Faites ensuite la requ\u00eate d'ajout de ces informations dans la bonne table selon le type de question (question_choix ou question_texte_reponse).</li> </ul>"},{"location":"examen/epreuve_finale/formatif_part02/#question-3","title":"Question #3","text":"<p>Compl\u00e9tez la section supprimer une question du script questionnaire.py.</p> <ul> <li>Cr\u00e9ez une proc\u00e9dure stock\u00e9e nomm\u00e9e suppressionQuestion et qui prendra en param\u00e8tre le id de la question.</li> <li>Dans votre proc\u00e9dure stock\u00e9e, faites la suppression de la question ainsi que les choix de r\u00e9ponse de la table question_choix ou les bonnes r\u00e9ponses de la table question_texte_reponse.</li> <li>Les requ\u00eates de suppression doivent \u00eatre comprise dans une transaction et elle sera approuv\u00e9 que si toutes les requ\u00eates ont r\u00e9ussi. (Voir les notes de cours ou notre bon ami Google).</li> <li>Lancez la proc\u00e9dure stock\u00e9e quand vous s\u00e9lectionnez l'option supprimer une question du menu principale.</li> <li>Ajoutez un script sql nomm\u00e9 create_suppressionQuestion.sql dans le r\u00e9pertoire ressources du projet qui permettra de recr\u00e9er votre proc\u00e9dure stock\u00e9e.</li> </ul>"},{"location":"examen/epreuve_finale/formatif_part02/#grille-de-correction","title":"Grille de correction","text":"\u00c9l\u00e9ments Points Question #1 /25 Les informations requises de la question sont affich\u00e9es \u00e0 l'\u00e9cran selon les directives. 10 Les choix de r\u00e9ponses ou la liste de bonne r\u00e9ponse sont affich\u00e9es \u00e0 l'\u00e9cran. 15 Question #2 /25 La r\u00e9ponse est ajout\u00e9 avec toutes les informations requises dans la bonne table. 25 Question #3 /50 Une proc\u00e9dure stock\u00e9e est cr\u00e9\u00e9 et permet de supprimer une question et ses choix de r\u00e9ponses ou bonnes r\u00e9ponses. 20 La proc\u00e9dure stock\u00e9e est lanc\u00e9 depuis l'option Supprimer une question du menu principal. 10 Les requ\u00eates de suppression de la proc\u00e9dure stock\u00e9e sont comprise dans une transaction. 5 La transaction \u00e9choue si une des requ\u00eates provoque une erreur. 10 Un script SQL est pr\u00e9sent dans le r\u00e9pertoire ressources et permet de recr\u00e9er la proc\u00e9dure stock\u00e9e 5 Total /100"},{"location":"examen/epreuve_finale/formatif_part02/#corrige","title":"Corrig\u00e9","text":"<ul> <li>Script python ainsi que le script SQL de la cr\u00e9ation de la proc\u00e9dure stock\u00e9e : exfinal_partie2_formatif.zip</li> </ul>"},{"location":"examen/intra/examen_intra/","title":"Examen intra - Dune","text":""},{"location":"examen/intra/examen_intra/#consignes","title":"Consignes","text":"<ul> <li>Vous avez droit \u00e0 toutes vos notes et Internet.</li> <li>Aucune communication n'est permise (messagerie, courriel, etc.). Un \u00e9l\u00e8ve pris en flagrant d\u00e9lit se verra attribuer la note de 0 pour plagiat.</li> <li>La dur\u00e9e de l'examen est de 1h50.</li> <li>Une fois l\u2019examen termin\u00e9, vous devez me remettre un fichier image de votre diagramme de classes via   le devoir de l\u2019examen sur Teams. Le fichier doit \u00eatre nomm\u00e9 au format suivant : NomPrenom_Examen1. </li> <li>Il est de votre devoir de vous assurer que votre fichier est inclus dans la remise. Aucun fichier ne sera accept\u00e9 une fois que vous aurez quitt\u00e9 le lieu de l'examen. </li> </ul>"},{"location":"examen/intra/examen_intra/#mise-en-situation","title":"Mise en situation","text":"<p>La maison des Atreides fait appel \u00e0 vos services pour informatiser leur op\u00e9ration d'extraction de l'\u00c9pice sur la plan\u00e8te Arrakis. </p> <p>L'\u00c9pice se retrouve naturellement dans les d\u00e9serts de sable qui recouvrent la plan\u00e8te, concentr\u00e9e dans des endroits bien d\u00e9finis qu'on nomme champ. Pour chaque champ, on attribue un code alphanum\u00e9rique de 5 caract\u00e8res et un nom. Ex. un champ nomm\u00e9 \"petit erg austral\" portant le code ea012. Les champs peuvent parfois \u00eatre immenses et l'on d\u00e9finit des zones d'extractions dans chaque champ o\u00f9 la r\u00e9colte d'\u00c9pice se fera. Une zone d'extraction a aussi un code alphanum\u00e9rique de 5 caract\u00e8res. On doit aussi conna\u00eetre sa localisation par sa latitude, longitude et son altitude. La latitude est un nombre variant entre 90 et -90 degr\u00e9s avec une pr\u00e9cision de 6 d\u00e9cimales. La longitude varie entre 180 et -180 degr\u00e9s avec elle aussi une pr\u00e9cision de 6 d\u00e9cimales. Finalement, l'altitude est une valeur enti\u00e8re en m\u00e8tres qui peut \u00eatre n\u00e9gative. Ex : Latitude : 46.059537 | Longitude : -71.94353 | Altitude : 140. On effectue r\u00e9guli\u00e8rement des estimations pour chaque zone du nombre de lingots d'\u00c9pice (lge) qu'on pourrait extraire. Pour chaque estimation, on veut savoir la date de l'estimation ainsi que le nombre de lge estim\u00e9 qui est une valeur num\u00e9rique enti\u00e8re.</p> <p>Parlons maintenant des op\u00e9rations d'extractions. Les extractions se font \u00e0 l'aide de \"moissonneuse\", un v\u00e9hicule adapt\u00e9 pour ce travail. Pour l'instant, la seule information \u00e0 conna\u00eetre sur nos moissonneuses est son num\u00e9ro de s\u00e9rie, un code alphanum\u00e9rique de 20 caract\u00e8res. Ensuite, pour chaque op\u00e9ration, il y a qu'une moissonneuse d'impliqu\u00e9e, mais chaque moissonneuse va participer \u00e0 plusieurs op\u00e9rations. L'op\u00e9ration est aussi reli\u00e9e \u00e0 une zone d'extraction. Bien s\u00fbr une zone d'extraction va \"subir\" plusieurs op\u00e9rations d'extraction. Les autres informations \u00e0 retenir pour l'op\u00e9ration sont la date de l'op\u00e9ration, le poids au d\u00e9part et \u00e0 l'arriv\u00e9e de la moissonneuse (une valeur num\u00e9rique enti\u00e8re), la quantit\u00e9 de lingots d'\u00c9pice r\u00e9colt\u00e9s ainsi que le niveau de risque de l'op\u00e9ration. Le niveau de risque est choisi parmi une liste de terme (\"Bas\", \"Mod\u00e9r\u00e9\", \"\u00c9lev\u00e9\", \"Est-ce que \u00e7a en vaut vraiment la peine\").</p> <p>Pour assurer la protection des op\u00e9rations, on engage un ou plusieurs groupes de mercenaires. Pour le groupe de mercenaire, on ne veut conna\u00eetre que le nom du groupe, la personne contact (on peut inscrire son nom et pr\u00e9nom dans la m\u00eame colonne \ud83d\ude1c ) et une cote de confiance. La cote de confiance est un pourcentage de 0 \u00e0 100% avec une pr\u00e9cision de 2 d\u00e9cimales (75.50%).</p> <p>On va aussi joindre \u00e0 chaque op\u00e9ration une ou plusieurs \u00e9quipes de travail. Les \u00e9quipes sont identifi\u00e9es par un code alphanum\u00e9rique de 5 caract\u00e8res. Ces \u00e9quipes sont form\u00e9es de plusieurs employ\u00e9s, mais un employ\u00e9 ne peut pas faire partie de plus d'une \u00e9quipe \u00e0 la fois. Pour chaque employ\u00e9 on doit conna\u00eetre son nom et pr\u00e9nom, sa date de naissance, sa plan\u00e8te d'origine, la maison \u00e0 laquelle il appartient (la maison est un peu comme son clan) et sa profession. L'employ\u00e9 ne peut avoir qu'une profession et appartenir qu'\u00e0 une maison. </p> <p>Notes aux puristes : Ok je sais que dans l'univers de Dune les ordinateurs comme nous les connaissons ont \u00e9t\u00e9 banni depuis longtemps mais bon on va dire qu'ils existent encore.</p>"},{"location":"examen/intra/examen_intra/#directives","title":"Directives","text":"<p>Vous devez cr\u00e9er un diagramme de classes qui r\u00e9pond aux besoins de la mise en situation en respectant les points suivants : </p> <ul> <li>Votre mod\u00e8le doit r\u00e9pondre \u00e0 la convention de nomenclature telle que d\u00e9crite dans les notes de cours \"Analyse et mod\u00e9lisation de syst\u00e8mes\".</li> <li>Vous devez sp\u00e9cifier un type de donn\u00e9es pertinent pour chaque colonne de chaque table du diagramme.</li> <li>Pour les relations entre les tables, vous devez m'indiquer le type de relation en utilisant la notation (1 -- 1..n).</li> <li>Votre mod\u00e9lisation doit r\u00e9pondre aux r\u00e8gles de la troisi\u00e8me forme normale.</li> </ul>"},{"location":"examen/intra/examen_intra/#grille-de-correction","title":"Grille de correction","text":"\u00c9l\u00e9ments points Total /100 La convention de nomenclature est respect\u00e9e 5 Les types de donn\u00e9es utilis\u00e9s sont exacte et pertinent 5 Les relations entrent les tables sont juste 30 La mod\u00e9lisation r\u00e9ponds aux r\u00e8gles de la troisi\u00e8me forme normale 10 Le diagramme de classes r\u00e9ponds aux besoins  de la mise en situation 50"},{"location":"examen/intra/intra_formatif_01/","title":"Examen intra formatif 01 - Voyage vers Mars","text":""},{"location":"examen/intra/intra_formatif_01/#mise-en-situation","title":"Mise en situation","text":"<p>Le projet de colonisation de la plan\u00e8te Mars est entr\u00e9 dans une nouvelle phase et le lancement du premier vol habit\u00e9 est pour bient\u00f4t. Vous  avez \u00e9t\u00e9 choisi pour \u00eatre responsable de la gestion des informations sur  l'\u00e9quipage. C'est une responsabilit\u00e9 tr\u00e8s importante, car une partie du succ\u00e8s  de la mission r\u00e9side dans l'\u00e9quilibre psychologique du personnel embarqu\u00e9 dans  le vaisseau. Voici une description de ce qu\u2019il est imp\u00e9ratif d'avoir comme  informations. </p> <p>Pour chaque membre de l'\u00e9quipage, on veut avoir leur nom, leur  genre, leur pays d'origine et leur \u00e9tat civil. Vous devez aussi dresser la liste des enfants de cette personne. Attention, on nous rapporte qu'il y a des parents qui  se sont port\u00e9s volontaires ensemble pour cette mission, alors deux membres d'\u00e9quipage  peuvent avoir le m\u00eame enfant. Pr\u00e9cision suppl\u00e9mentaire, les enfants ne font pas partie du voyage. Chaque passager se voit aussi attribuer un  matricule alphanum\u00e9rique de 10 \u00e0 20 caract\u00e8res. Finalement, on veut savoir si  cette personne a effectu\u00e9 son service militaire ou non. Pour les enfants de  l'\u00e9quipage, on n'a besoin que de leur nom et de pouvoir conna\u00eetre leur  \u00e2ge. </p> <p>L'\u00e9quipage a \u00e9t\u00e9 s\u00e9lectionn\u00e9 selon les expertises de chacun  qui ont \u00e9t\u00e9 jug\u00e9es utiles au bon d\u00e9roulement de la mission. Donc chaque membre  de l'\u00e9quipage a une ou plusieurs professions. Pour palier en d'\u00e9ventuelles  pertes humaines, nous avons s\u00e9lectionn\u00e9 plusieurs personnes ayant une m\u00eame  profession. Pour \u00e9tablir une sorte de hi\u00e9rarchie, chaque personne a un grade  d'attribuer pour chacune de ses professions. Le grade est un titre : Maitre,  second ou rempla\u00e7ant. Ex.: Arthur Dallas est un pilote de grade \"second\".  </p> <p>Derni\u00e8re chose \u00e0 retenir, chaque membre de l'\u00e9quipage devra  subir des \u00e9valuations psychologiques r\u00e9guli\u00e8rement. Il est primordial que vous  conserviez une trace de ces \u00e9valuations. Les \u00e9valuations se font de mani\u00e8re  individuelle. Pour chaque \u00e9valuation, vous devez conserver le membre d'\u00e9quipage  concern\u00e9 ainsi que le psychologue qui a men\u00e9 l'\u00e9valuation ( des passagers dont  la profession est psychologue seront charg\u00e9s de faire les \u00e9valuations). Vous  devez aussi conserver la date de l'\u00e9valuation ainsi que les notes et les  recommandations du psychologue traitant.</p>"},{"location":"examen/intra/intra_formatif_01/#directives","title":"Directives","text":"<p>Vous devez cr\u00e9er un diagramme de classes qui r\u00e9pond aux besoins de la mise en situation en respectant les points suivants : </p> <ul> <li>Votre mod\u00e8le doit r\u00e9pondre \u00e0 la convention de nomenclature telle que d\u00e9crite dans les notes de cours \"Analyse et mod\u00e9lisation de syst\u00e8mes\".</li> <li>Vous devez sp\u00e9cifier un type de donn\u00e9es pertinent pour chaque colonne de chaque table du diagramme.</li> <li>Pour les relations entre les tables, vous devez m'indiquer le type de relation en utilisant la notation (1 -- 1..n).</li> <li>Votre mod\u00e9lisation doit r\u00e9pondre aux r\u00e8gles de la troisi\u00e8me forme normale.</li> <li>Sur le diagramme, ajoutez le titre \"Examen Intra - Formatif\" ainsi que votre nom. </li> </ul> <p>La remise du diagramme se fera sous forme d'un fichier image nomm\u00e9 \"NomPr\u00e9nom - Examen Intra Formatif\" dans le devoir associ\u00e9 sur Teams.</p>"},{"location":"examen/intra/intra_formatif_01/#corrige","title":"Corrig\u00e9","text":"<p>Si \u00e7a vous int\u00e9resse j'ai cr\u00e9\u00e9 un script SQL pour g\u00e9n\u00e9rer les tables du diagramme et y ins\u00e9rer des donn\u00e9es. Il est disponible ici.</p> <p>Ma version du diagramme </p>"},{"location":"examen/intra/intra_formatif_02/","title":"Examen intra formatif 02 - xLabs","text":""},{"location":"examen/intra/intra_formatif_02/#consignes","title":"Consignes","text":"<ul> <li>Vous avez droit \u00e0 toutes vos notes et Internet.</li> <li>Aucune communication n'est permise (messagerie, courriel, etc.). Un \u00e9l\u00e8ve pris en flagrant d\u00e9lit se verra attribuer la note de 0 pour plagiat.</li> <li>La dur\u00e9e de l'examen est de 1h50.</li> <li>Une fois l\u2019examen termin\u00e9, vous devez me remettre un fichier image de votre diagramme de classes via   le devoir de l\u2019examen sur Teams. Le fichier doit \u00eatre nomm\u00e9 au format suivant : NomPrenom_Examen1. </li> <li>Il est de votre devoir de vous assurer que votre fichier est inclus dans la remise. Aucun fichier ne sera accept\u00e9 une fois que vous aurez quitt\u00e9 le lieu de l'examen. </li> </ul>"},{"location":"examen/intra/intra_formatif_02/#mise-en-situation","title":"Mise en situation","text":"<p>Le centre de recherche xLabs se sp\u00e9cialise dans des recherches dites marginales. Elle emploie une pl\u00e9thore de cobayes pour ses diff\u00e9rents projets et pr\u00e9sentement il est difficile de garder une trace de l'\u00e9tat de tous ces \"volontaires\". La direction vous a donn\u00e9 le mandat de mod\u00e9liser leur op\u00e9ration.</p> <p>Pour chaque cobaye, on veut connaitre sa date de naissance, la date \u00e0 laquelle il a commenc\u00e9 sa premi\u00e8re exp\u00e9rience et aussi sa date de d\u00e9c\u00e8s s'il y a lieu, car chez xlabs on est cobaye \u00e0 vie. Un num\u00e9ro d'identification unique est attribu\u00e9 aux cobayes. Par contre ce num\u00e9ro peut \u00eatre r\u00e9utilis\u00e9 \u00e0 la mort du cobaye. Le centre utilise une grande vari\u00e9t\u00e9 d'animaux pour ses recherches et l'on vous demande aussi de sauvegarder les informations de classification suivante : le nom de l'esp\u00e8ce, sa classe, son ordre et sa famille. </p> <p>Les cobayes peuvent participer \u00e0 plus d'une exp\u00e9rience \u00e0 la fois. On veut connaitre la date de d\u00e9but et de fin de la participation de chaque cobaye \u00e0 chaque exp\u00e9rience. Chaque exp\u00e9rience \u00e0 un titre, un niveau de s\u00e9curit\u00e9 qui se situe entre 0 et 10 et une courte description qui d\u00e9fini le sujet de l'exp\u00e9rience. Un ou plusieurs chercheurs peuvent \u00eatre associ\u00e9s \u00e0 une exp\u00e9rience et un chercheur peut participer \u00e0 plus d'une exp\u00e9rience \u00e0 la fois. Parmi les chercheurs impliqu\u00e9s, un r\u00f4le est attribu\u00e9 \u00e0 chacun. Il y a pr\u00e9sentement trois r\u00f4les disponible (directeur de recherche, assistant, appariteur) mais il n'est pas impossible que \u00e7a change dans l'avenir. Le r\u00f4le d'un chercheur peut aussi varier d'une exp\u00e9rience \u00e0 l'autre. Au niveau des chercheurs, on veut connaitre uniquement leur nom et leur num\u00e9ro d'identification personnelle. </p> <p>Durant le temps que dure une exp\u00e9rience, les chercheurs vont faire des observations. Pour chaque observation, il y a un chercheur impliqu\u00e9, un cobaye, une exp\u00e9rience, une date d'observation et les notes de l'observation. </p> <p>Afin de s'assurer de la bonne rentabilit\u00e9 des cobayes, un chercheur effectue chaque jour une \u00e9valuation g\u00e9n\u00e9rale de ceux-ci. L'\u00e9valuation consiste uniquement en une prise de notes. On veut donc conserver pour chaque \u00e9valuation le cobaye \u00e9valu\u00e9, le chercheur impliqu\u00e9, la date de l'\u00e9valuation ainsi que les notes prises. </p>"},{"location":"examen/intra/intra_formatif_02/#directives","title":"Directives","text":"<p>Vous devez cr\u00e9er un diagramme de classes qui r\u00e9pond aux besoins de la mise en situation en respectant les points suivants : </p> <ul> <li>Votre mod\u00e8le doit r\u00e9pondre \u00e0 la convention de nomenclature telle que d\u00e9crite dans les notes de cours \"Analyse et mod\u00e9lisation de syst\u00e8mes\".</li> <li>Vous devez sp\u00e9cifier un type de donn\u00e9es pertinent pour chaque colonne de chaque table du diagramme.</li> <li>Pour les relations entre les tables, vous devez m'indiquer le type de relation en utilisant la notation (1 -- 1..n).</li> <li>Votre mod\u00e9lisation doit r\u00e9pondre aux r\u00e8gles de la troisi\u00e8me forme normale.</li> <li>Sur le diagramme, ajoutez le titre \"Confidentiel - xLabs industries\" ainsi que votre nom. </li> </ul>"},{"location":"examen/intra/intra_formatif_02/#grille-de-correction","title":"Grille de correction","text":"\u00c9l\u00e9ments points Total /100 La convention de nomenclature est respect\u00e9e 5 Les types de donn\u00e9es utilis\u00e9s sont exacte et pertinent 5 Les relations entrent les tables sont juste 30 La mod\u00e9lisation r\u00e9ponds aux r\u00e8gles de la troisi\u00e8me forme normale 10 Le diagramme de classes r\u00e9ponds aux besoins  de la mise en situation 50"},{"location":"examen/intra/intra_formatif_02/#corrige","title":"Corrig\u00e9","text":"<p>Ma version du diagramme </p>"},{"location":"exercices/ex01_enonce/","title":"Exercice 1 - R\u00e9vision","text":"<p>Question de se remettre en mode \"BD\", voici un petit exercice de r\u00e9vision des concepts vus durant le cours de Base de donn\u00e9es 1. Inscrivez-moi dans un fichier SQL les commandes et requ\u00eates que vous avez utilis\u00e9es pour compl\u00e9ter les questions de la section Manipulation des donn\u00e9es. Le fichier est \u00e0 remettre dans le devoir Teams correspondant. </p> <p>La base de donn\u00e9es contient une liste de sorts pour le jeu Donjons et Dragons 5e \u00e9dition. Chaque sort appartient \u00e0 une seule \u00e9cole de magie, mais il peut \u00eatre utilis\u00e9 par plus d'une classe de personnage. Il y a aussi une liste d'usagers qui peuvent cr\u00e9er une liste de leurs sorts favoris.</p> <p>Voici le diagramme de classes de la base de donn\u00e9es</p> <p></p>"},{"location":"exercices/ex01_enonce/#creation-dune-base-de-donnees-et-execution-dun-script-sql","title":"Cr\u00e9ation d'une base de donn\u00e9es et ex\u00e9cution d'un script SQL","text":"<ul> <li>Cr\u00e9ez une nouvelle base de donn\u00e9es et nommez la bd2_01</li> <li>T\u00e9l\u00e9chargez le fichier ex01_create_tables.sql. </li> <li>Lancez le script pour cr\u00e9er les tables et ajouter les donn\u00e9es.</li> <li>Allez-y en ligne de commande ou avec DBeaver</li> </ul>"},{"location":"exercices/ex01_enonce/#manipulation-des-donnees","title":"Manipulation des donn\u00e9es","text":"<p>Pour chacune des questions, j'ai ajout\u00e9 une image du r\u00e9sultat attendu avec le nom des colonnes d\u00e9sir\u00e9.</p> <ol> <li> <p>S\u00e9lectionnez le nom de toutes les classes tri\u00e9 en ordre alphab\u00e9tique invers\u00e9. </p> </li> <li> <p>Comptez le nombre de sorts qui appartient \u00e0 l'\u00e9cole Conjuration. </p> </li> <li> <p>Comptez le nombre de sorts de chacune des \u00e9coles. (ecole | nb_sorts) </p> </li> <li> <p>S\u00e9lectionnez la liste des sorts de la classe Bard de niveau 0, triez en ordre alphab\u00e9tique de nom de sort. </p> </li> <li> <p>S\u00e9lectionnez la liste de tous les sorts qui contiennent le mot fire dans leur nom. </p> </li> <li> <p>Trouvez les trois \u00e9coles de magie qui comptent le plus de sorts faisant partie des sorts favoris des usagers. Triez les \u00e9coles en commen\u00e7ant par la plus populaire. </p> </li> <li> <p>S\u00e9lectionnez la liste des sorts qui ont le composant verbal mais pas somatic et material et qui ont une dur\u00e9e d'une heure OU qu'ils n'ont pas le composant verbal et qui ont une port\u00e9e de Touch </p> </li> <li> <p>S\u00e9lectionnez le nombre de sorts pour chaque classe. </p> </li> <li> <p>En vous aidant de la requ\u00eate pr\u00e9c\u00e9dente, affichez la moyenne de sort par classe de personnage. Essayez d'utiliser une sous-requ\u00eate et la fonction SQL AVG </p> </li> <li> <p>S\u00e9lectionnez tous les sorts d'une classe donn\u00e9e et d'un niveau donn\u00e9e. Pour chaque sort affichez le id et le nom du sort ainsi qu'une colonne composante qui sera g\u00e9n\u00e9r\u00e9 comme suit. Pour les champs verbal, somatic et material, affichez respectivement un V, S ou M si la valeur est \u00e9gale \u00e0 1, sinon n'affichez rien. Chaque lettre doit \u00eatre s\u00e9par\u00e9e par une virgule. Finalement affichez la valeur du champ material_cost. Vous pouvez vous aider des fonctions IF() et CONCAT(). Dans mon exemple j'affiche tous les sorts de la classe Bard du niveau 0. </p> </li> </ol>"},{"location":"exercices/ex02_enonce/","title":"Exercice 02 - Syst\u00e8me de saisie d'absence","text":"<p>On veut reproduire le syst\u00e8me de saisie d'absence en cours. Analysez le fonctionnement \u00e0 l'aide du texte qui suit et des images et cr\u00e9ez le sch\u00e9ma conceptuel de votre solution.</p>"},{"location":"exercices/ex02_enonce/#fonctionnement","title":"Fonctionnement","text":"<p>L'usager commence par saisir un cours et ensuite la date de ce cours.</p> <p></p> <p>Ensuite dans un tableau on a la liste de tous les \u00e9l\u00e8ves inscrit \u00e0 ce cours. On peut saisir le nombre d'heure par un nombre entier positif. Une fois la saisie termin\u00e9e l'usager clique sur Sauvegarder les modifications</p> <p></p> <p>Finalement l'usager peut aussi sortir un rapport cumulatif des absences des \u00e9l\u00e8ves pour un cours donn\u00e9.</p> <p></p>"},{"location":"exercices/ex03_enonce/","title":"Exercice 03 - Analyse du syst\u00e8me de stationnement du c\u00e9gep","text":"<p>Pour notre deuxi\u00e8me cas, on va analyser le syst\u00e8me de droit de stationnement du c\u00e9gep. Vous devez analyser le syst\u00e8me et ensuite cr\u00e9er les deux diagrammes suivants a l'aide d'un logiciel appropri\u00e9 : </p> <ul> <li>un sch\u00e9ma conceptuel selon le mod\u00e8le entit\u00e9-association.</li> <li>un diagramme de classe UML</li> </ul> <p>Une fois termin\u00e9, me le remettre sur Teams dans la section devoir.</p>"},{"location":"exercices/ex03_enonce/#mise-en-situation","title":"Mise en situation","text":"<p>On doit tout d'abord se cr\u00e9er un usager avec un courriel et un mot de passe. Ensuite l'usager cr\u00e9\u00e9 peut effectuer une commande qui d\u00e9terminera la dur\u00e9e du droit de stationnement et les v\u00e9hicules autoris\u00e9s selon leur plaque d'immatriculation. </p> <ul> <li>L'usager \u00e0 le choix entre trois type de droit : <ul> <li>30 jours</li> <li>1 session</li> <li>annuelle</li> </ul> </li> <li>Il peut entrer un maximum de 4 plaques d'immatriculation par commande.</li> <li>Un compte peut contenir plus de 4 plaque d'immatriculation, mais chaque plaque est associ\u00e9 \u00e0 une commande, un droit de stationnement.</li> <li>Pour les autres informations, r\u00e9f\u00e9rez-vous aux images suivantes : </li> </ul> <p></p> <p></p> <p>Dans la section Informations personnelles on retrouve le num\u00e9ro de DA ou d'employ\u00e9, le nom complet, le courriel et le num\u00e9ro de t\u00e9l\u00e9phone.</p> <p></p> <p></p> <p></p> <p></p>"},{"location":"exercices/ex03/ex03_enonce/","title":"Exercice 03 - Mod\u00e9lisation d'un livre de recettes","text":""},{"location":"exercices/ex03/ex03_enonce/#consignes","title":"Consignes","text":"<p>En \u00e9quipe de 4 vous devez analyser et mod\u00e9liser un livre de recettes. Les deux images qui suivent vous indique ce qui doit \u00eatre inclus dans la base de donn\u00e9es. Toutes les informations pr\u00e9sentent doivent \u00eatre sauvegard\u00e9es.</p> <p>Pr\u00e9cision sur les pictogrammes dans les recettes : </p> <ul> <li>Le bol repr\u00e9sente le temps de pr\u00e9paration de la recette</li> <li>La flamme est le temps de cuisson</li> <li>La main est un temps de pr\u00e9paration autre</li> </ul> <p>Vous devez me produire et remettre : </p> <ul> <li>Le mod\u00e8le entit\u00e9-association fait sur papier en classe. ( ou une photo de votre oeuvre d'art sur le tableau)</li> <li>Un diagramme des classes complet, avec les types de donn\u00e9es, les relations et qui respecte les trois premi\u00e8res formes normale. Vous pouvez me remettre le diagramme sous la forme que vous voulez.</li> <li>Un script sql de g\u00e9n\u00e9ration de la base de donn\u00e9es</li> <li>Vous devez respecter les trois premi\u00e8re forme normale et la convention de nommage qui est d\u00e9crite dans les notes de cours.</li> </ul>"},{"location":"exercices/ex03/ex03_enonce/#images","title":"Images","text":""},{"location":"exercices/ex03/ex03_enonce/#recette-1","title":"Recette 1","text":""},{"location":"exercices/ex03/ex03_enonce/#recette-2","title":"Recette 2","text":""},{"location":"exercices/ex04/ex04_enonce/","title":"Exercice 4 - INSERT","text":"<p>\u00c0 partir de la base de donn\u00e9es athl\u00e8te de l'exercice 01, (le script sql de g\u00e9n\u00e9ration est disponible ici), r\u00e9alisez les requ\u00eates d'insertion suivante.</p> <ol> <li>Ins\u00e9rez-vous dans la table athl\u00e8te sans sp\u00e9cifier les noms de colonnes dans la requ\u00eate.</li> <li>Ins\u00e9rez un autre athl\u00e8te fictif mais en sp\u00e9cifiant seulement son nom, pr\u00e9nom et la date de naissance.</li> <li>R\u00e9cup\u00e9rez le id qui a \u00e9t\u00e9 g\u00e9n\u00e9r\u00e9 automatiquement lors de la requ\u00eate pr\u00e9c\u00e9dente et faites afficher avec une requ\u00eate SELECT le message suivant : \"L'athl\u00e8te [prenom] [nom] a \u00e9t\u00e9 ajout\u00e9 avec succ\u00e8s!\". Utilisez le id r\u00e9cup\u00e9r\u00e9 dans la clause WHERE de votre requ\u00eate.</li> <li>Cr\u00e9ez une nouvelle table appel\u00e9 athlete_quebec avec les colonnes suivante ( id cl\u00e9 primaire auto-incr\u00e9ment\u00e9, nom, pr\u00e9nom, ville )</li> <li>Ins\u00e9rez dans cette table tous les athl\u00e8tes qui proviennent de la province du Qu\u00e9bec \u00e0 l'aide d'une requ\u00eate select.</li> </ol> <p>Je veux que vous me remettiez les requ\u00eates dans un script SQL avec pour chaque requ\u00eate d'insertion une requ\u00eate select qui va valider que les donn\u00e9es ont bien \u00e9t\u00e9 ajout\u00e9.</p>"},{"location":"exercices/ex04/ex04_enonce/#corrige","title":"Corrig\u00e9","text":"<pre><code>-- 1. Ins\u00e9rez-vous dans la table athl\u00e8te sans sp\u00e9cifier les noms de colonnes \n--    dans la requ\u00eate.\nINSERT INTO athlete VALUES (501,\n'Fr\u00e9chette',\n'Mathieu',\n'1980-01-01', '1 rue Street', 'Princeville', 'Qu\u00e9bec', 'Canada', 'math.frechette@gmail.com');\nSELECT * FROM athlete WHERE id = 501; -- 2. Ins\u00e9rez un autre athl\u00e8te fictif mais en sp\u00e9cifiant seulement son nom, \n--    pr\u00e9nom et la date de naissance.\nINSERT INTO athlete (nom, prenom, date_naissance) VALUES ('Fr\u00e9chette','Mathieu 2','1980-01-01');\nSELECT * FROM athlete WHERE id = LAST_INSERT_ID() ;\n-- 3. R\u00e9cup\u00e9rez le id qui a \u00e9t\u00e9 g\u00e9n\u00e9r\u00e9 automatiquement lors de la requ\u00eate \n--    pr\u00e9c\u00e9dente et faites afficher avec une requ\u00eate SELECT le message \n--    suivant : \"L'athl\u00e8te [prenom] [nom] a \u00e9t\u00e9 ajout\u00e9 avec succ\u00e8s!\". Utilisez \n--    le id r\u00e9cup\u00e9r\u00e9 dans la clause WHERE de votre requ\u00eate.\nSELECT CONCAT(\"L'athl\u00e8te \", a.prenom, \" \", a.nom, \" a \u00e9t\u00e9 ajout\u00e9 avec succ\u00e8s!\")\nFROM athlete a WHERE a.id = LAST_INSERT_ID();\n-- 4. Cr\u00e9ez une nouvelle table appel\u00e9 athlete_quebec avec les colonnes \n--    suivante ( id cl\u00e9 primaire auto-incr\u00e9ment\u00e9, nom, pr\u00e9nom, ville )\nCREATE TABLE IF NOT EXISTS athlete_quebec (\nid INT AUTO_INCREMENT NOT NULL,\nnom VARCHAR(50),\nprenom VARCHAR(50),\nville VARCHAR(50),\nCONSTRAINT PRIMARY KEY (id)\n);\n-- 5. Ins\u00e9rez dans cette table tous les athl\u00e8tes qui proviennent de la \n--    province du Qu\u00e9bec \u00e0 l'aide d'une requ\u00eate select.\nINSERT INTO athlete_quebec (nom, prenom, ville)\nSELECT a.nom, a.prenom, a.ville FROM athlete a\nWHERE a.province = \"Qu\u00e9bec\"; SELECT * FROM athlete_quebec;\n</code></pre>"},{"location":"exercices/ex05/ex05_enonce/","title":"Exercice 5 - VIEW","text":"<p>\u00c0 partir de la base de donn\u00e9es athl\u00e8te de l'exercice 01, (le script sql de g\u00e9n\u00e9ration est disponible ici), creez les views suivantes : </p> <ol> <li>Cr\u00e9ez une view nomm\u00e9e resultat_hhmmss qui affiche le r\u00e9sultat format\u00e9 en heures, minutes, secondes (hh:mm:ss). Les colonnes de la view doivent \u00eatre les m\u00eames que la table resultat mais en ajoutant une colonne nomm\u00e9e resultat_hhmmss dans laquelle le calcul sera fait (id, athlete_id, epreuve_id, date_resultat, resultat_ms, resultat_hhmmss).</li> <li>Cr\u00e9ez une view nomm\u00e9e athlete_complet qui, en combinant les tables n\u00e9cessaires, affiche les athl\u00e8tes avec les colonnes suivantes, (id, nom pr\u00e9nom concat, date_epreuve, nom_epreuve, r\u00e9sultat). Attention, je veux que les noms de colonnes de la view soit identique \u00e0 ce que je demande entre parenth\u00e8se)</li> <li>\u00c0 partir de la view pr\u00e9c\u00e9dente, athlete_complet, s\u00e9lectionn\u00e9 les informations des athl\u00e8tes qui ont particip\u00e9 \u00e0 un marathon. </li> <li>Cr\u00e9ez une view nomm\u00e9e resultat_21juillet2020 qui va contenir toutes les informations de la table r\u00e9sultat mais uniquement pour la date du 21 juillet 2020.</li> <li>Modifier la view resultat_21juillet2020 pour qu'elle affiche les r\u00e9sultats du 14 juillet 2019. Modifier aussi son nom pour resultat_14juillet2019</li> <li>Supprimer la view resultat_14juillet2019</li> </ol> <p>Je veux que vous me remettiez les requ\u00eates dans un script SQL.</p>"},{"location":"exercices/ex05/ex05_enonce/#corrige","title":"Corrig\u00e9","text":"<pre><code>-- #1\nCREATE OR REPLACE VIEW resultat_hhmmss\nAS SELECT r.id,\nr.athlete_id,\nr.epreuve_id,\nr.date_resultat,\nr.resultat_ms,\nTIME_FORMAT(SEC_TO_TIME(r.resultat_ms / 1000), '%H:%i:%s') AS resultat_hhmmss FROM resultat r;\n-- #2\nCREATE OR REPLACE VIEW athlete_complet (id, nom, date_epreuve, nom_epreuve, resultat)\nAS SELECT a.id,\nCONCAT(a.prenom, ' ', a.nom),\nrh.date_resultat,\ne.description,\nrh.resultat_hhmmss FROM athlete a INNER JOIN resultat_hhmmss rh ON rh.athlete_id = a.id INNER JOIN epreuve e ON e.id = rh.epreuve_id;\n-- J'ai r\u00e9utiliser ici la view cr\u00e9\u00e9 au num\u00e9ro 1 pour vous montrer \n-- qu'on peut tr\u00e8s bien utiliser une view dans une view\n-- #3\nSELECT *\nFROM athlete_complet ac WHERE ac.nom_epreuve = 'Marathon';\n-- #4\nCREATE OR REPLACE VIEW resultat_21juillet2020\nAS\nSELECT *\nFROM resultat r WHERE r.date_resultat = '2020-07-21';\n-- #5\nALTER VIEW resultat_21juillet2020\nAS\nSELECT *\nFROM resultat r WHERE r.date_resultat = '2019-07-14';\nRENAME TABLE resultat_21juillet2020 TO resultat_14juillet2019;\n-- #6\nDROP VIEW IF EXISTS resultat_14juillet2019;\n</code></pre>"},{"location":"exercices/ex06/ex06_corrige/","title":"Exercice 06 - Corrig\u00e9","text":""},{"location":"exercices/ex06/ex06_corrige/#1-fonction-calcul_credit","title":"1. Fonction calcul_credit()","text":"<pre><code>DROP FUNCTION IF EXISTS calcul_credit;\nDELIMITER $$\nCREATE FUNCTION calcul_credit (citoyen_id INT)\nRETURNS INT\nNOT DETERMINISTIC\nBEGIN\nDECLARE score_actuel INT DEFAULT 0;\nDECLARE score_min INT DEFAULT 0;\nDECLARE score_max INT DEFAULT 1000;\nDECLARE score_initial INT DEFAULT 0;\nDECLARE score_variation INT DEFAULT 0;\n-- R\u00e9cup\u00e9ration du score initial\nSELECT c.credit_initial INTO score_initial\nFROM citoyen c WHERE c.id = citoyen_id;\n-- Calcul de la variation de son score\nSELECT SUM(COALESCE(ce.score_ajustement, et.score_defaut, 0))\nINTO score_variation\nFROM citoyen c LEFT JOIN citoyen_evenement ce ON ce.citoyen_id = c.id LEFT JOIN evenement e ON e.id = ce.evenement_id LEFT JOIN evenement_type et ON et.id = e.type_evenement_id WHERE c.id = citoyen_id;\n-- Calcul du score actuel\nSET score_actuel = score_initial + score_variation;\n-- Ajustement du score \nIF score_actuel &lt; score_min THEN\nSET score_actuel = score_min;\nEND IF;\nIF score_actuel &gt; score_max THEN\nSET score_actuel = score_max;\nEND IF;\nRETURN (score_actuel);\nEND$$\nDELIMITER ;\n</code></pre>"},{"location":"exercices/ex06/ex06_corrige/#2-fonction-privilege_valide","title":"2. Fonction privilege_valide()","text":"<pre><code>DROP FUNCTION IF EXISTS privilege_valide;\nDELIMITER $$\nCREATE FUNCTION privilege_valide (_pin VARCHAR(100), _classe_id INT)\nRETURNS BIT\nNOT DETERMINISTIC\nBEGIN\nDECLARE is_valid BIT DEFAULT 0;\nSELECT (\nSELECT cl.credit_min FROM citoyen c INNER JOIN classe cl ON cl.id = c.classe_id WHERE c.pin = _pin\n)\n&gt;=\n(\nSELECT c.credit_min FROM classe c WHERE c.id = _classe_id\n)\nINTO is_valid;\nRETURN (is_valid);\nEND$$\nDELIMITER ;\n</code></pre>"},{"location":"exercices/ex06/ex06_corrige/#3-vue-citoyen_avec_credit","title":"3. Vue citoyen_avec_credit","text":"<pre><code>CREATE OR REPLACE VIEW citoyen_avec_credit\nAS\nSELECT c.id AS citoyen_id,\nCONCAT(c.nom,', ',c.prenom),\nc.pin,\ncl.titre,\ncalcul_credit(c.id) AS credit\nFROM citoyen c INNER JOIN classe cl ON cl.id = c.classe_id;\n</code></pre>"},{"location":"exercices/ex06/ex06_corrige/#4-procedure-stockee-liste_manifestant","title":"4. Proc\u00e9dure stock\u00e9e liste_manifestant","text":"<pre><code>DROP PROCEDURE IF EXISTS liste_manifestant;\nDELIMITER $$\nCREATE PROCEDURE liste_manifestant(\nIN _date_manifestation DATE\n)\nBEGIN\nSELECT c.id AS citoyen_id,\ne.id AS evenement_id,\nCONCAT(c.nom,', ',c.prenom) AS nom,\nc.pin,\ncl.titre AS classe,\ne.date_evenement,\ne.notes\nFROM citoyen c INNER JOIN classe cl ON cl.id = c.classe_id INNER JOIN citoyen_evenement ce ON ce.citoyen_id = c.id INNER JOIN evenement e ON e.id = ce.evenement_id  WHERE e.type_evenement_id = 4 -- Le id 4 correspont au type manifestation \nAND DATE_FORMAT(e.date_evenement, '%Y-%m-%d') = _date_manifestation\nORDER BY c.nom, c.prenom;\nEND $$\nDELIMITER ;\n</code></pre>"},{"location":"exercices/ex06/ex06_corrige/#5-procedure-stockee-update_classe","title":"5. Proc\u00e9dure stock\u00e9e update_classe","text":"<pre><code>DROP PROCEDURE IF EXISTS update_classe;\nDELIMITER $$\nCREATE PROCEDURE update_classe ()\nBEGIN\nDECLARE fin_enregistrement INT DEFAULT 0;\nDECLARE citoyen_id INT DEFAULT 0;\nDECLARE id_classe_calcule INT DEFAULT 0;\nDECLARE id_classe_actuel INT DEFAULT 0;\nDECLARE curseur_citoyen CURSOR FOR SELECT id\nFROM citoyen;\nDECLARE CONTINUE HANDLER FOR NOT FOUND SET fin_enregistrement = 1;\nOPEN curseur_citoyen;\nliste_citoyen:LOOP\nFETCH curseur_citoyen INTO citoyen_id;\nIF fin_enregistrement = 1 THEN\nLEAVE liste_citoyen;\nEND IF;\nSELECT classe_id\nINTO id_classe_actuel\nFROM citoyen\nWHERE id = citoyen_id;\nSELECT id\nINTO id_classe_calcule\nFROM classe c WHERE c.credit_min &lt;= calcul_credit(citoyen_id)\nORDER BY c.credit_min DESC LIMIT 1; IF id_classe_calcule &lt;&gt; id_classe_actuel THEN\n-- Mettre \u00e0 jour la classe du citoyen\nUPDATE citoyen SET classe_id = id_classe_calcule\nWHERE id = citoyen_id;\n-- Laisser une trace de l'op\u00e9ration\nINSERT INTO log_update_classe (date_update, citoyen_id, ancienne_classe_id, nouvelle_classe_id)\nVALUES (NOW(), citoyen_id, id_classe_actuel, id_classe_calcule);\nEND IF;\nEND LOOP liste_citoyen;\nCLOSE curseur_citoyen;\nEND $$\nDELIMITER ;\n</code></pre>"},{"location":"exercices/ex06/ex06_enonce/","title":"Exercice 06 - Cr\u00e9dit social","text":""},{"location":"exercices/ex06/ex06_enonce/#installation","title":"Installation","text":"<p>Les scripts sql de g\u00e9n\u00e9ration de la base de donn\u00e9es sont disponible sur Teams dans la section Fichiers &gt; Supports de cours &gt; Exercices &gt; Exercice06 - Cr\u00e9dit social.</p> <ol> <li>Cr\u00e9ez une nouvelle base de donn\u00e9es nomm\u00e9e credit_social</li> <li>Cr\u00e9ez les tables en ex\u00e9cutant le script sql 01_create_table.sql</li> <li>Ins\u00e9rez les donn\u00e9es en ex\u00e9cutant les scripts suivants (l'ordre est important). Certains scripts comportent beaucoup de ligne, 50 000 pour 04_insert_citoyen, c'est normale que le temps ex\u00e9cution soit long. </li> <li>Cr\u00e9ez un script SQL par num\u00e9ro. Une fois termin\u00e9 remettez moi les 5 scripts dans le devoir sur Teams.</li> </ol> <p>Liste des scripts \u00e0 ex\u00e9cuter</p> <ul> <li> <p>02_insert_classe</p> </li> <li> <p>03_insert_evenement_type</p> </li> <li> <p>04_insert_citoyen</p> </li> <li> <p>05_insert_evenement</p> </li> <li> <p>06_insert_citoyen_evenement</p> </li> </ul>"},{"location":"exercices/ex06/ex06_enonce/#diagramme-des-classes","title":"Diagramme des classes","text":""},{"location":"exercices/ex06/ex06_enonce/#descriptions","title":"Descriptions","text":"<p>La base de donn\u00e9es sert \u00e0 stocker des informations sur les citoyens pour \u00e9tablir leur score de cr\u00e9dit social, une note de bon comportement qui d\u00e9termine dans quel classe le citoyen est situ\u00e9. </p>"},{"location":"exercices/ex06/ex06_enonce/#calcul-du-credit-social","title":"Calcul du cr\u00e9dit social","text":"<p>En naissant, un citoyen se voit octroyer un cr\u00e9dit initial de 500 (par contre ce nombre pourrait \u00eatre modifi\u00e9 par le parti). Tout au long de sa vie, le total de ce cr\u00e9dit va fluctuer selon des \u00e9v\u00e9nements auquel le citoyen va participer. Donc le cr\u00e9dit social de chaque citoyen est la somme de son cr\u00e9dit initial et du score de tous les \u00e9v\u00e9nements auxquels il a particip\u00e9. Les \u00e9v\u00e9nements sont d\u00e9fini par un type et un score par d\u00e9faut (dans la table evenement_type, mais ce score peut \u00eatre ajust\u00e9 selon la nature de l'\u00e9v\u00e9nement (le champ score_ajustement de la table citoyen_evenement, s'il est \u00e0 null ne pas en tenir compte, sinon il outrepasse le score par d\u00e9faut de l'\u00e9v\u00e9nement). Le score de cr\u00e9dit social peut varier entre 0 et 1000.</p>"},{"location":"exercices/ex06/ex06_enonce/#calcul-de-la-classe-du-citoyen","title":"Calcul de la classe du citoyen","text":"<p>Chaque citoyen appartient \u00e0 une classe selon son score de cr\u00e9dit social. \u00c7a lui donne droit \u00e0 certain avantage de sa classe mais aussi aux avantages de toutes les classes inf\u00e9rieurs. Pour appartenir \u00e0 une classe, le score de cr\u00e9dit social du citoyen doit \u00eatre sup\u00e9rieur au cr\u00e9dit minimum de cette classe ( colonne credit_min de la table classe). La classe est recalcul\u00e9 chaque nuit selon son score actuel. Donc pour connaitre la classe d'un citoyen vous n'avez qu'\u00e0 utiliser le champ classe_id de la table citoyen.</p>"},{"location":"exercices/ex06/ex06_enonce/#exercices","title":"Exercices","text":""},{"location":"exercices/ex06/ex06_enonce/#1-fonction-calcul_credit","title":"1. Fonction calcul_credit()","text":"<p>Cr\u00e9ez une fonction nomm\u00e9e calcul_credit qui prends en param\u00e8tre le id d'un citoyen et retourne le total du calcul de son cr\u00e9dit social. </p> Param\u00eatres IN/OUT tYPE Valeur test id IN INT 20958 RETURNS OUT INT 365 <p>Ex. Le citoyen Harry Walsh, id 20958, pin 51d8fbc8-d473-45f5-991e-15aea899e8f9, a un score de cr\u00e9dit social de 365. </p> <pre><code>select calcul_credit(20958) as score_credit\n</code></pre>"},{"location":"exercices/ex06/ex06_enonce/#2-fonction-privilege_valide","title":"2. Fonction privilege_valide()","text":"<p>Cr\u00e9ez une fonction nomm\u00e9e privilege_valide qui prend en param\u00e8tre le code pin du citoyen ainsi que le id d'une classe. Si la classe du citoyen est \u00e9gale ou sup\u00e9rieur \u00e0 la classe pass\u00e9e en param\u00e8tre, retournez TRUE, sinon retournez FALSE. Pour d\u00e9termin\u00e9 si une classe est sup\u00e9rieur \u00e0 une autre, vous devez vous fiez \u00e0 la colonne credit_min de la table classe.</p> Param\u00eatres IN/OUT tYPE Valeur test pin IN VARCHAR(100) 51d8fbc8-d473-45f5-991e-15aea899e8f9 classe_id IN INT 4 RETURNS OUT BOOLEAN FALSE <p>Ex. Le citoyen Harry Walsh, id 20958, pin 51d8fbc8-d473-45f5-991e-15aea899e8f9 appartient \u00e0 la classe Delta. </p> <pre><code>-- Cette requ\u00eate retournera 1\nselect privilege_valide('51d8fbc8-d473-45f5-991e-15aea899e8f9',4) as valide\n-- Cette requ\u00eate retournera 0\nselect privilege_valide('51d8fbc8-d473-45f5-991e-15aea899e8f9',3) as valide\n</code></pre>"},{"location":"exercices/ex06/ex06_enonce/#3-vue-citoyen_avec_credit","title":"3. Vue citoyen_avec_credit","text":"<p>Cr\u00e9ez une vue nomm\u00e9e citoyen_avec_credit qui contiendra les champs suivants</p> Nom colonne table colonne citoyen_id citoyen id nom citoyen nom, prenom (\"Walsh, Harry\") pin citoyen pin classe classe titre credit calcul\u00e9 <p>Faites ensuite une requ\u00eate sur cette view pour afficher les informations du citoyen id 20958</p>"},{"location":"exercices/ex06/ex06_enonce/#4-procedure-stockee-liste_manifestant","title":"4. Proc\u00e9dure stock\u00e9e liste_manifestant","text":"<p>Cr\u00e9ez une proc\u00e9dure stock\u00e9e nomm\u00e9e liste_manifestant qui prend une date en param\u00e8tre et retourne une liste de manifestants qui \u00e9tait pr\u00e9sent. Assurez-vous que pour la date s\u00e9lectionn\u00e9e s'il y a un \u00e9v\u00e9nement il soit de type manifestation. Le r\u00e9sultat doit \u00eatre class\u00e9 en ordre alphab\u00e9tique de nom et pr\u00e9nom.</p> Nom colonne table colonne citoyen_id citoyen id evenement_id evenement id nom citoyen nom, prenom (\"Walsh, Harry\") pin citoyen pin classe classe titre date_evenement evenement date_evenement notes evenement notes <p>Faite ensuite une validation avec la date 2021-04-01, vous devriez avoir 17 enregistrements. Si vous essayer avec la date 2022-09-15 vous devriez en avoir aucun.</p>"},{"location":"exercices/ex06/ex06_enonce/#5-procedure-stockee-update_classe","title":"5. Proc\u00e9dure stock\u00e9e update_classe","text":"<p>Cr\u00e9ez une proc\u00e9dure stock\u00e9e nomm\u00e9e update_classe qui va updater la classe de chaque citoyen. Il vous faudra calculer le cr\u00e9dit social de chacun, ensuite d\u00e9terminer dans quelle classe il appartient selon le cr\u00e9dit minimum de chaque classe. </p> <ul> <li>Vous devez parcourir tous les enregistrements de la table citoyen en utilisant un curseur.</li> <li>Si vous d\u00e9tectez une diff\u00e9rence entre la classe du citoyen et votre calcul, vous devez \"logger\" le probl\u00e8me dans la table log_update_classe.</li> </ul> <p>Pour tester votre procedure, limitez la requ\u00eate SELECT qui alimente le curseur \u00e0 un seul citoyen et modifier la valeur du champs credit_initial de ce citoyen pour que la valeur du champs classe_id ne soit plus valide. Dans l'exemple plus bas j'ai modifi\u00e9 la valeur du cr\u00e9dit initial du citoyen 2 pour 850, ce qui lui donne une classe de 2 (Beta) au lieu de 4 (Delta).</p> <p> </p> <p>Apr\u00e8s avoir lancer ma proc\u00e9dure, on peut voir que la valeur de classe_id a bien \u00e9t\u00e9 modifi\u00e9 et que l'op\u00e9ration a \u00e9t\u00e9 enregistr\u00e9 dans la table log_update_classe.</p> <p></p> <p></p>"},{"location":"exercices/ex06/ex06_enonce/#corrige","title":"Corrig\u00e9","text":"<p>Le corrig\u00e9 est disponible ici</p>"},{"location":"exercices/ex07/ex07_corrige/","title":"Exercice 05 - Corrig\u00e9","text":""},{"location":"exercices/ex07/ex07_corrige/#in","title":"IN","text":""},{"location":"exercices/ex07/ex07_corrige/#question-1","title":"Question 1","text":"<pre><code>select * from citoyen where ville in ('Minneapolis', 'Philadelphia', 'Phoenix');\n</code></pre>"},{"location":"exercices/ex07/ex07_corrige/#question-2","title":"Question 2","text":"<pre><code>select *\nfrom evenement e where e.type_evenement_id in (4, 5);\n</code></pre>"},{"location":"exercices/ex07/ex07_corrige/#question-3","title":"Question 3","text":"<pre><code>select *\nfrom evenement e where e.type_evenement_id = 4 and month(e.date_evenement) in (3,4,5)\n</code></pre>"},{"location":"exercices/ex07/ex07_corrige/#question-4","title":"Question 4","text":"<pre><code>select *\nfrom citoyen c where c.id not in (\nselect ce.citoyen_id from evenement e inner join citoyen_evenement ce on ce.evenement_id = e.id where e.type_evenement_id = 1\n);\n</code></pre>"},{"location":"exercices/ex07/ex07_corrige/#question-5","title":"Question 5","text":"<pre><code>select *\nfrom citoyen c inner join classe cl on cl.id = c.classe_id where cl.titre = 'Alpha' and c.id in (\nselect ce.citoyen_id from evenement e inner join citoyen_evenement ce on ce.evenement_id = e.id where e.type_evenement_id = 4\n);\n</code></pre>"},{"location":"exercices/ex07/ex07_corrige/#like","title":"LIKE","text":""},{"location":"exercices/ex07/ex07_corrige/#question-1_1","title":"Question 1","text":"<pre><code>select *\nfrom citoyen\nwhere prenom like 'M%' and nom like 'F%'\n</code></pre>"},{"location":"exercices/ex07/ex07_corrige/#question-2_1","title":"Question 2","text":"<pre><code>select *\nfrom citoyen where prenom like '___';\n</code></pre>"},{"location":"exercices/ex07/ex07_corrige/#question-3_1","title":"Question 3","text":"<pre><code>select *\nfrom citoyen\nwhere pin like '%-6935-%';\n</code></pre>"},{"location":"exercices/ex07/ex07_corrige/#question-4_1","title":"Question 4","text":"<pre><code>select c.*\nfrom citoyen c inner join citoyen_evenement ce on ce.citoyen_id  = c.id inner join evenement e on e.id = ce.evenement_id where e.notes like '%math%';\n</code></pre>"},{"location":"exercices/ex07/ex07_corrige/#question-5_1","title":"Question 5","text":"<pre><code>select *\nfrom citoyen\nwhere pin like '__6c4b66%';\n</code></pre>"},{"location":"exercices/ex07/ex07_corrige/#group-by","title":"GROUP BY","text":""},{"location":"exercices/ex07/ex07_corrige/#question-1_2","title":"Question 1","text":"<pre><code>select cl.titre,\ncount(c.id) as nb_citoyen\nfrom citoyen c right join classe cl on cl.id = c.classe_id\ngroup by cl.titre;\n</code></pre>"},{"location":"exercices/ex07/ex07_corrige/#question-2_2","title":"Question 2","text":"<pre><code>select e.id as evenement_id,\ne.date_evenement,\ne.notes,\ncount(*) as nombre_arrestations\nfrom evenement e inner join evenement_type et on et.id = e.type_evenement_id inner join citoyen_evenement ce on ce.evenement_id = e.id\nwhere et.titre = \"Manifestation\"\ngroup by e.id\nhaving count(*) &gt; 5\norder by e.id;\n</code></pre>"},{"location":"exercices/ex07/ex07_corrige/#question-3_2","title":"Question 3","text":"<pre><code>select ce.evenement_id,\nceiling(avg(calcul_credit(ce.citoyen_id))) as moyenne_score\nfrom evenement e inner join evenement_type et on et.id = e.type_evenement_id inner join citoyen_evenement ce on ce.evenement_id = e.id where et.titre = \"Denonciation\"\ngroup by ce.evenement_id order by ce.evenement_id;\n</code></pre>"},{"location":"exercices/ex07/ex07_corrige/#question-4_2","title":"Question 4","text":"<p>Pour cette question ce n'\u00e9tait pas vraiment pertinent de le faire avec un group by.</p> <pre><code>select c.nom,\nc.prenom, calcul_credit(c.id) as score\nfrom citoyen c\nwhere calcul_credit(c.id) = (\nselect max(calcul_credit(c.id))\nfrom citoyen c where c.id &lt; 100\n)\nand c.id &lt; 100;\n</code></pre>"},{"location":"exercices/ex07/ex07_corrige/#question-5_2","title":"Question 5","text":"<pre><code>select date(e.date_evenement) as date_evenement,\nsum(calcul_credit(ce.citoyen_id)) as total_score\nfrom evenement e inner join citoyen_evenement ce on ce.evenement_id = e.id inner join evenement_type et on et.id = e.type_evenement_id where et.titre = \"Reunion du parti\"\nand date(e.date_evenement) = '2021-07-17'\ngroup by date(e.date_evenement);\n</code></pre>"},{"location":"exercices/ex07/ex07_corrige/#exists","title":"EXISTS","text":""},{"location":"exercices/ex07/ex07_corrige/#question-1_3","title":"Question 1","text":"<pre><code>select *\nfrom citoyen c1\nwhere exists (\nselect 1\nfrom citoyen c2\nwhere ville = 'Quebec' and c2.id = c1.id );\n</code></pre>"},{"location":"exercices/ex07/ex07_corrige/#question-2_3","title":"Question 2","text":"<pre><code>select *\nfrom citoyen c where exists (\nselect 1\nfrom evenement e inner join citoyen_evenement ce on ce.evenement_id = e.id where e.type_evenement_id = 3 and ce.citoyen_id = c.id\n)\norder by c.id;\n</code></pre>"},{"location":"exercices/ex07/ex07_corrige/#question-3_3","title":"Question 3","text":"<pre><code>select *\nfrom citoyen c where not exists (\nselect 1\nfrom citoyen_evenement ce\nwhere ce.citoyen_id = c.id\n);\n</code></pre>"},{"location":"exercices/ex07/ex07_corrige/#question-4_3","title":"Question 4","text":"<p>La difficult\u00e9 ici \u00e9tait qu'on ne peut pas faire de update avec dans le where une sous-requ\u00eate sur la m\u00eame table. Une fa\u00e7on de contourner le probl\u00e8me est de cr\u00e9er une table temporaire dans la sous-requ\u00eate.</p> <pre><code>update citoyen\nset pin = concat('x', right(citoyen.pin, length(citoyen.pin) - 1))\nwhere exists (\nselect 1\nfrom (select * from citoyen) c -- Cr\u00e9e une table temporaire\nwhere c.ville = \"Madrid\"\nand c.id = citoyen.id\n);\n</code></pre>"},{"location":"exercices/ex07/ex07_corrige/#question-5_3","title":"Question 5","text":"<pre><code>update citoyen_evenement ce\nset ce.score_ajustement = FLOOR(RAND()*(100-25+1))+25\nwhere exists (\nselect 1\nfrom evenement_type et inner join evenement e on e.type_evenement_id = et.id where et.titre = \"Denonciation\"\nand e.id = ce.evenement_id );\n</code></pre>"},{"location":"exercices/ex07/ex07_corrige/#procedures-stockees-et-fonctions","title":"Proc\u00e9dures stock\u00e9es et fonctions","text":""},{"location":"exercices/ex07/ex07_corrige/#question-1_4","title":"Question 1","text":"<pre><code>DROP PROCEDURE IF EXISTS credit_social.participation_evenement;\nDELIMITER $$\n$$\ncreate procedure credit_social.participation_evenement(_citoyen_id INT)\nbegin\ndeclare nb_reunion INT default 0;\ndeclare nb_denonciation INT default 0;\ndeclare nb_realignement INT default 0;\ndeclare nb_manifestation INT default 0;\ndeclare nb_idees INT default 0;\ndeclare nb_comportement INT default 0;\n-- Nombre de participation \u00e0 une r\u00e9union du parti\nselect count(*)\ninto nb_reunion\nfrom evenement e inner join citoyen_evenement ce on ce.evenement_id = e.id where e.type_evenement_id = 1 and ce.citoyen_id = _citoyen_id;\n-- Nombre de participation \u00e0 une d\u00e9nonciation\nselect count(*)\ninto nb_denonciation\nfrom evenement e inner join citoyen_evenement ce on ce.evenement_id = e.id where e.type_evenement_id = 2 and ce.citoyen_id = _citoyen_id;\n-- Nombre de participation \u00e0 un r\u00e9alignement sanitaire\nselect count(*)\ninto nb_realignement\nfrom evenement e inner join citoyen_evenement ce on ce.evenement_id = e.id where e.type_evenement_id = 3 and ce.citoyen_id = _citoyen_id;\n-- Nombre de participation \u00e0 une manifestation\nselect count(*)\ninto nb_manifestation\nfrom evenement e inner join citoyen_evenement ce on ce.evenement_id = e.id where e.type_evenement_id = 4 and ce.citoyen_id = _citoyen_id;\n-- Nombre d'arrestation pour idees dissidentes\nselect count(*)\ninto nb_idees\nfrom evenement e inner join citoyen_evenement ce on ce.evenement_id = e.id where e.type_evenement_id = 5 and ce.citoyen_id = _citoyen_id;\n-- Nombre d'arrestation pour comportement reprehensible\nselect count(*)\ninto nb_comportement\nfrom evenement e inner join citoyen_evenement ce on ce.evenement_id = e.id where e.type_evenement_id = 6 and ce.citoyen_id = _citoyen_id;\n-- Retour\nselect c.id as id_citoyen,\nc.nom, c.prenom,\nnb_reunion,\nnb_denonciation,\nnb_realignement,\nnb_manifestation,\nnb_idees,\nnb_comportement\nfrom citoyen c where c.id = _citoyen_id;\nend\n$$\nDELIMITER ;\n</code></pre>"},{"location":"exercices/ex07/ex07_corrige/#question-2_4","title":"Question 2","text":"<pre><code>DROP FUNCTION IF EXISTS credit_social.valide_pin;\nDELIMITER $$\n$$\nCREATE FUNCTION credit_social.valide_pin(_citoyen_id int)\nRETURNS INT\ndeterministic\nbegin\nreturn (select pin regexp('([a-zA-Z0-9]{8})([-]{1})([a-zA-Z0-9]{4})([-]{1})([a-zA-Z0-9]{4})([-]{1})([a-zA-Z0-9]{4})([-]{1})([a-zA-Z0-9]{12})')\nfrom citoyen where id = _citoyen_id);\nEND$$\nDELIMITER ;\n</code></pre>"},{"location":"exercices/ex07/ex07_enonce/","title":"Exercices 07 - Op\u00e9rateurs logiques","text":"<p>\u00c0 partir de la base de donn\u00e9es credit_social, r\u00e9alisez les requ\u00eates suivantes. Vous devez utiliser l'op\u00e9rateur de la \"section\"  dans votre solution.</p>"},{"location":"exercices/ex07/ex07_enonce/#in","title":"IN","text":"<ol> <li>S\u00e9lectionnez tous les citoyens qui habitent \u00e0 Minneapolis,  Philadelphia ou Phoenix</li> <li>S\u00e9lectionnez tous les \u00e9v\u00e9nements qui sont de type  Manifestation ou Idees dissidentes.</li> <li>S\u00e9lectionnez tous les \u00e9v\u00e9nements qui sont de type Manifestation et qui ont eu lieu durant les mois de mars, avril et mai, peu importe l'ann\u00e9e.</li> <li>\u00c0 l'aide d'une sous-requ\u00eate, s\u00e9lectionnez tous les citoyens qui n'ont jamais particip\u00e9 \u00e0 une r\u00e9union du parti.</li> <li>\u00c0 l'aide d'une sous-requ\u00eate, s\u00e9lectionnez tous les citoyens de classe Epsilon qui ont d\u00e9j\u00e0 particip\u00e9 \u00e0 une manifestation.</li> </ol>"},{"location":"exercices/ex07/ex07_enonce/#like","title":"LIKE","text":"<ol> <li>S\u00e9lectionnez tous les citoyens dont les initiales sont MF.</li> <li>S\u00e9lectionnez tous les citoyens dont le pr\u00e9nom est compos\u00e9 d'exactement 3 caract\u00e8res.</li> <li>S\u00e9lectionnez tous les citoyens qui ont la s\u00e9rie -6935- dans leur code PIN.</li> <li>S\u00e9lectionnez tous les citoyens qui ont particip\u00e9 \u00e0 un \u00e9v\u00e9nement et que dans la note de l'\u00e9v\u00e9nement on retrouve le mot math. </li> <li>S\u00e9lectionnez tous les citoyens dont le code PIN commence par deux caract\u00e8res, peut-importe lesquels, et ensuite contient les caract\u00e8res 6c4b66. Le reste du code peut \u00eatre n'importe quoi.</li> </ol>"},{"location":"exercices/ex07/ex07_enonce/#group-by","title":"GROUP BY","text":"<ol> <li>Calculez le nombre de citoyen par classe. Affichez comme r\u00e9sultat le titre de la classe et le nombre de citoyen. Si la classe \u00e0 aucun citoyen, afficher 0;</li> <li>S\u00e9lectionnez les manifestations qui avait plus de 5 participants qui furent arr\u00eat\u00e9. (Une entr\u00e9e a \u00e9t\u00e9 cr\u00e9\u00e9 dans la table \u00e9v\u00e9nement).</li> <li>Calculer la moyenne des scores de cr\u00e9dit social pour chaque d\u00e9nonciation.</li> <li>S\u00e9lectionnez citoyen qui a le plus haut score de cr\u00e9dit social. Le r\u00e9sultat doit contenir son nom, pr\u00e9nom et score. N'utilisez pas de GROUP BY pour cette requ\u00eate, allez-y avec ce que vous voulez.</li> <li>Calculer la somme des scores de cr\u00e9dit social pour tous les participants de la r\u00e9union du parti du 2021-07-17. Il y a eu plusieurs r\u00e9unions cette journ\u00e9e, soit vous en cibler qu'un avec aussi l'heure ou bien vous faite la somme de toutes les r\u00e9unions de cette journ\u00e9e.</li> </ol>"},{"location":"exercices/ex07/ex07_enonce/#exists","title":"EXISTS","text":"<ol> <li>S\u00e9lectionnez tous les citoyens qui r\u00e9sident au Qu\u00e9bec. (Ce n'est pas tr\u00e8s optimal comme requ\u00eate mais c'est pour pratiquer le exists).</li> <li>S\u00e9lectionnez tous les citoyens qui n'ont jamais eu de r\u00e9alignement sanitaire.</li> <li>S\u00e9lectionnez tous les citoyens qui n'ont jamais particip\u00e9 \u00e0 aucun \u00e9v\u00e9nement.</li> <li>Faites une mise \u00e0 jour du code pin de tous les citoyens de la ville de Madrid. Remplacer le premier caract\u00e8re par un x. Vous pouvez vous servir de la fonction concat() et right(). La difficult\u00e9 ici est qu'on ne peut pas faire de update avec dans le where une sous-requ\u00eate sur la m\u00eame table. </li> <li>Faites une mise \u00e0 jour de la colonne score_ajustement de la table citoyen_evenement pour tous les \u00e9v\u00e9nement de type d\u00e9nonciation. La valeur de score_ajustement devra \u00eatre un nombre g\u00e9n\u00e9r\u00e9 al\u00e9atoirement entre 25 et 100.</li> </ol>"},{"location":"exercices/ex07/ex07_enonce/#procedures-stockees-et-fonctions","title":"Proc\u00e9dures stock\u00e9es et fonctions","text":"<ol> <li>Cr\u00e9ez une proc\u00e9dure stock\u00e9e qui va s\u00e9lectionner, pour un citoyen (le id du citoyen sera re\u00e7u en param\u00e8tre) donn\u00e9, le nombre de fois qu'il a particip\u00e9 \u00e0 chacun des types d'\u00e9v\u00e9nements. Le r\u00e9sultat devra comporter le id du citoyen, son nom et pr\u00e9nom, et une colonne par \u00e9v\u00e9nement (elles peuvent \u00eatre \"hardcod\u00e9\").</li> <li>Cr\u00e9ez une fonction qui va valider le code PIN d'un citoyen. Le id du citoyen sera re\u00e7u en param\u00e8tre. La structure valide du code pin est AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA (A = caract\u00e8re alphanum\u00e9rique). Utilisez la fonction REGEX pour valider le PIN. La valeur de retour doit \u00eatre TRUE si le pin est valide, sinon FALSE.</li> </ol>"},{"location":"exercices/ex07/ex07_enonce/#corrige","title":"Corrig\u00e9","text":"<p>Le corrig\u00e9 est ici</p>"},{"location":"exercices/ex08/ex08_corrige/","title":"Exercice 08 - Exemple de programme","text":"<p>Le programme est divis\u00e9 en deux fichiers, un premier pour l'affichage et les interactions avec l'utilisateur et un second qui s'occupe uniquement des op\u00e9rations avec la base de donn\u00e9es</p> <p>py_crud.py</p> <pre><code>from db_citoyen import deleteCitoyen, getCitoyen, insertCitoyen, updateCitoyen\nimport os\n# Permet d'effacer la console\ndef cls():\nos.system('cls' if os.name=='nt' else 'clear')\ndef afficheTitre(texte):\ntitre = '=  {}  ='.format(texte)\nligne = '=' * len(titre)\nprint(ligne + '\\n' + titre + '\\n' + ligne + '\\n')\ndef retourMenu():\ninput(\"\\nAppuyez sur une touche pour revenir au menu...\")\ncls()\n# Affichage du menu et attente d'une option\ndef menu():\nchoix = 0\nafficheTitre('Cr\u00e9dit social')\ntry:\nchoix = int(input((\"\"\" \nMenu principal\n1- Ajouter un nouveau citoyen\n2- Obtenir les informations d'un citoyen\n3- Modifier un citoyen\n4- Supprimer un citoyen\n5- Quitter\nVeuillez choisir une option : \"\"\")))\ncls()\nexcept ValueError:\nprint(\"\\nLe choix est invalide\")\nreturn choix\n# 1- Ajouter un nouveau citoyen\ndef ajouteCitoyen():\nafficheTitre('Ajouter un nouveau citoyen')\nprint('\\nVeuillez nous donner les informations suivantes au sujet du nouveau citoyen')\nprenom = input('{0:14} : '.format('Pr\u00e9nom'))\nnom = input('{0:14} : '.format('Nom'))\nnoCivique = input('{0:14} : '.format('Num\u00e9ro civique'))\nadresse = input('{0:14} : '.format('Adresse'))\nville = input('{0:14} : '.format('Ville'))\npin = input('{0:14} : '.format('PIN'))\ncitoyenId = insertCitoyen(nom, prenom, noCivique, adresse, ville, pin)\nprint('Le citoyen {} {} - id [{}] a \u00e9t\u00e9 ajout\u00e9 avec succ\u00e8s'.format(prenom, nom, citoyenId))\nretourMenu()\n# 2- Obtenir les informations d'un citoyen\ndef selectCitoyen():\nafficheTitre('Obtenir les informations d\\'un citoyen')\ncitoyen_id = input(\"Entrez le id du citoyen : \")\nresultat = getCitoyen(citoyen_id)\nif resultat is None:\nprint(\"Le citoyen n'existe pas/plus\")\nelse:\nnom, classe, score = resultat\nprint('\\n&gt; {} - Classe: {} - Score: {}\\n'.format(nom, classe, score))\nretourMenu()\n# 3- Modifier un citoyen\ndef modifieCitoyen():\nafficheTitre('Modifier un citoyen')\nprint('\\nVeuillez nous donner les informations suivantes au sujet du citoyen \u00e0 modifier')\ncitoyen_id = input('{0:14} : '.format('Id du citoyen'))\nno_civique = input('{0:14} : '.format('Num\u00e9ro civique'))\nadresse = input('{0:14} : '.format('Adresse'))\nville = input('{0:14} : '.format('Ville'))\ncitoyen_update = updateCitoyen(citoyen_id, no_civique, adresse, ville)\nif(citoyen_update):\nprint(\"Le citoyen [{0}] a \u00e9t\u00e9 modifi\u00e9.\".format(citoyen_id))\nretourMenu()\n# 4- Supprimer un citoyen\ndef supprimeCitoyen():\nafficheTitre('Supprimer un citoyen')\nprint('\\nVeuillez nous donner les informations suivantes au sujet du citoyen \u00e0 modifier')\ncitoyen_id = input('{0:14} : '.format('Id du citoyen'))\ncitoyen_delete = deleteCitoyen(citoyen_id)\nif(citoyen_delete):\nprint(\"Le citoyen [{0}] a \u00e9t\u00e9 'pacifi\u00e9'.\".format(citoyen_id))\nretourMenu()\n# Boucle principale\ncls()\nwhile True:\nchoixMenu = menu()\nmatch choixMenu:\ncase 1:\najouteCitoyen()\ncase 2:\nselectCitoyen()\ncase 3:\nmodifieCitoyen()\ncase 4:\nsupprimeCitoyen()\ncase 5:\nprint(\"Goodbye!!\")\nbreak\ncase _:\ncls()\nprint(\"Choix invalide\")\n</code></pre> <p>db_citoyen.py</p> <pre><code>import mysql.connector as mysql\ndb_config = {\n'host' : 'localhost',\n'user' : 'root',\n'password' : '*******',\n'database' : 'credit_social'\n}\ndef insertCitoyen(nom: str, prenom: str, noCivique: int, adresse: str, ville: str, pin: str) -&gt; int:\n\"\"\"\n    Ajoute un citoyen\n    Arguments:\n        nom: un string\n        prenom: un string\n        noCivique: un integer\n        adresse: un string\n        ville: un string\n        pin: un string\n    Returns:\n        Le id du citoyen cr\u00e9\u00e9 (integer)\n    \"\"\"\nquery = \"\"\"\n        INSERT INTO citoyen (classe_id, nom, prenom, no_civique, adresse, ville, pin, credit_initial) \n        VALUES (%(classe_id)s, %(nom)s, %(prenom)s, %(no_civique)s, %(adresse)s, %(ville)s, %(pin)s, %(credit_initial)s);\n    \"\"\"\nparametre = {\n'classe_id' : 4,\n'nom' : nom,\n'prenom' : prenom,\n'no_civique' : noCivique,\n'adresse' : adresse,\n'ville' : ville,\n'pin' : pin,\n'credit_initial' : 500,\n}\ntry:\nconnection = mysql.connect(**db_config)\ncursor = connection.cursor()\ncursor.execute(query, parametre)\ncitoyenId = cursor.lastrowid\nconnection.commit()\nexcept mysql.Error as erreur:\nprint(erreur)\nfinally:\ncursor.close()\nconnection.close()\nreturn citoyenId\n# S\u00e9lectionne le nom, la classe et le score d'un citoyen selon son id\ndef getCitoyen(id):\n\"\"\"\n    S\u00e9lectionne un citoyen\n    Arguments:\n        id: le id du citoyen (integer)\n    Returns:\n        Un tuple avec le nom, la classe et le score d'un citoyen\n    \"\"\"\nquery = \"\"\"\n        select concat(c.prenom, ' ', c.nom) as nom,\n        cl.titre as classe,\n        calcul_credit(c.id) as score\n        from citoyen c\n            inner join classe cl on cl.id = c.classe_id \n        where c.id = %(citoyen_id)s;\n    \"\"\"\nparametres = {\n'citoyen_id' : id\n}\ntry:\nconnection = mysql.connect(**db_config)\ncursor = connection.cursor()\ncursor.execute(query, parametres)\nresult = cursor.fetchone()\nexcept mysql.Error as erreur:\nprint(erreur)\nfinally:\ncursor.close()\nconnection.close()\nreturn result\ndef updateCitoyen(id_citoyen: int, no_civique: int, adresse: str, ville: str)-&gt; bool:\n\"\"\"\n    Modifie un citoyen\n    Arguments:\n        id: le id du citoyen (integer)\n        no_civique: un integer\n        adresse: un string\n        ville: un string\n    Returns:\n        True si la modification a fonctionn\u00e9\n    \"\"\"\nquery = \"\"\"\n        UPDATE citoyen\n        SET no_civique = %(no_civique)s, \n            adresse = %(adresse)s, \n            ville = %(ville)s\n        WHERE id = %(citoyen_id)s;\n    \"\"\"\nparametre = {\n'citoyen_id' : id_citoyen,\n'no_civique' : no_civique,\n'adresse' : adresse,\n'ville' : ville,\n}\ncitoyenUpdate = False\ntry:\nconnection = mysql.connect(\nhost=\"localhost\",\nuser=\"root\",\npassword=\"r00t_bd2\",\ndatabase=\"credit_social\"\n)\ncursor = connection.cursor()\ncursor.execute(query, parametre)\nconnection.commit()\ncitoyenUpdate = True\nexcept mysql.Error as erreur:\nprint(erreur)\nfinally:\ncursor.close()\nconnection.close()\nreturn citoyenUpdate\ndef deleteCitoyen(citoyen_id: int)-&gt;bool:\n\"\"\"\n    Supprime un citoyen\n    Arguments:\n        id: le id du citoyen (integer)\n    Returns:\n        True si la modification a fonctionn\u00e9\n    \"\"\"\ncitoyenDelete = False\nquery_citoyen_evenement = \"DELETE FROM citoyen_evenement WHERE citoyen_id = %(citoyen_id)s\"\nquery_citoyen = \"DELETE FROM citoyen WHERE id = %(citoyen_id)s\"\nparametres = {'citoyen_id' : citoyen_id}\ntry:\nconnection = mysql.connect(**db_config)\ncursor = connection.cursor()\ncursor.execute(query_citoyen_evenement, parametres)\ncursor.execute(query_citoyen, parametres)\nconnection.commit()\ncitoyenDelete = True\nexcept mysql.Error as erreur:\nprint(erreur)\nfinally:\ncursor.close()\nconnection.close()\nreturn citoyenDelete\n</code></pre>"},{"location":"exercices/ex08/ex08_corrige_delete/","title":"Supprimer un citoyen","text":"<p>Fonction pour saisir le id du citoyen \u00e0 supprimer</p> <pre><code># 4- Supprimer un citoyen\ndef supprimeCitoyen():\nprint('Supprimer un citoyen')\nprint('\\nVeuillez nous donner les informations suivantes au sujet du citoyen \u00e0 modifier')\ncitoyen_id = input('{0:14} : '.format('Id du citoyen'))\ncitoyen_delete = deleteCitoyen(citoyen_id)\nif(citoyen_delete):\nprint(\"Le citoyen [{0}] a \u00e9t\u00e9 'pacifi\u00e9'.\".format(citoyen_id))\n</code></pre> <p>Fonction qui supprimer un citoyen dans la base de donn\u00e9es et retourne True si la suppression a \u00e9t\u00e9 faite</p> <pre><code>def deleteCitoyen(citoyen_id: int)-&gt;bool:\n\"\"\"\n    Supprime un citoyen\n    Arguments:\n        id: le id du citoyen (integer)\n    Returns:\n        True si la modification a fonctionn\u00e9\n    \"\"\"\ncitoyenDelete = False\nquery_citoyen_evenement = \"DELETE FROM citoyen_evenement WHERE citoyen_id = %(citoyen_id)s\"\nquery_citoyen = \"DELETE FROM citoyen WHERE id = %(citoyen_id)s\"\nparametres = {'citoyen_id' : citoyen_id}\ntry:\nconnection = mysql.connect(**db_config)\ncursor = connection.cursor()\ncursor.execute(query_citoyen_evenement, parametres)\ncursor.execute(query_citoyen, parametres)\nconnection.commit()\ncitoyenDelete = True\nexcept mysql.Error as erreur:\nprint(erreur)\nfinally:\ncursor.close()\nconnection.close()\nreturn citoyenDelete\n</code></pre>"},{"location":"exercices/ex08/ex08_corrige_insert/","title":"Ajouter un citoyen","text":"<p>Fonction pour saisir les informations et afficher le r\u00e9sultat</p> <pre><code># 1- Ajouter un nouveau citoyen\ndef ajouteCitoyen():\nprint('Ajouter un nouveau citoyen')\nprint('\\nVeuillez nous donner les informations suivantes au sujet du nouveau citoyen')\nprenom = input('{0:14} : '.format('Pr\u00e9nom'))\nnom = input('{0:14} : '.format('Nom'))\nnoCivique = input('{0:14} : '.format('Num\u00e9ro civique'))\nadresse = input('{0:14} : '.format('Adresse'))\nville = input('{0:14} : '.format('Ville'))\npin = input('{0:14} : '.format('PIN'))\ncitoyenId = insertCitoyen(nom, prenom, noCivique, adresse, ville, pin)\nprint('Le citoyen {} {} - id [{}] a \u00e9t\u00e9 ajout\u00e9 avec succ\u00e8s'.format(prenom, nom, citoyenId))\n</code></pre> <p>Fonction qui ins\u00e8re le citoyen dans la bd et retourne son id</p> <pre><code>def insertCitoyen(nom: str, prenom: str, noCivique: int, adresse: str, ville: str, pin: str) -&gt; int:\n\"\"\"\n    Ajoute un citoyen\n    Arguments:\n        nom: un string\n        prenom: un string\n        noCivique: un integer\n        adresse: un string\n        ville: un string\n        pin: un string\n    Returns:\n        Le id du citoyen cr\u00e9\u00e9 (integer)\n    \"\"\"\ndb_config = {\n'host' : 'localhost',\n'user' : 'root',\n'password' : 'r00t_bd2',\n'database' : 'credit_social'\n}\nquery = \"\"\"\n        INSERT INTO citoyen (classe_id, nom, prenom, no_civique, adresse, ville, pin, credit_initial) \n        VALUES (%(classe_id)s, %(nom)s, %(prenom)s, %(no_civique)s, %(adresse)s, %(ville)s, %(pin)s, %(credit_initial)s);\n    \"\"\"\nparametre = {\n'classe_id' : 4,\n'nom' : nom,\n'prenom' : prenom,\n'no_civique' : noCivique,\n'adresse' : adresse,\n'ville' : ville,\n'pin' : pin,\n'credit_initial' : 500,\n}\ntry:\nconnection = mysql.connect(**db_config)\ncursor = connection.cursor()\ncursor.execute(query, parametre)\ncitoyenId = cursor.lastrowid\nconnection.commit()\nexcept mysql.Error as erreur:\nprint(erreur)\nfinally:\ncursor.close()\nconnection.close()\nreturn citoyenId\n</code></pre>"},{"location":"exercices/ex08/ex08_corrige_select/","title":"S\u00e9lectionner un citoyen","text":"<p>Fonction pour saisir le id du citoyen et afficher le r\u00e9sultat</p> <pre><code># 2- Obtenir les informations d'un citoyen\ndef selectCitoyen():\nprint('Obtenir les informations d\\'un citoyen')\ncitoyen_id = input(\"Entrez le id du citoyen : \")\nresultat = getCitoyen(citoyen_id)\nif resultat is None:\nprint(\"Le citoyen n'existe pas/plus\")\nelse:\nnom, classe, score = resultat\nprint('\\n&gt; {} - Classe: {} - Score: {}\\n'.format(nom, classe, score))\n</code></pre> <p>Fonction qui s\u00e9lectionne le citoyen dans la base de donn\u00e9es selon son id et retourne son nom, sa classe et son score de cr\u00e9dit social.</p> <pre><code>def getCitoyen(id):\n\"\"\"\n    S\u00e9lectionne un citoyen\n    Arguments:\n        id: le id du citoyen (integer)\n    Returns:\n        Un tuple avec le nom, la classe et le score d'un citoyen\n    \"\"\"\ndb_config = {\n'host' : 'localhost',\n'user' : 'root',\n'password' : 'r00t_bd2',\n'database' : 'credit_social'\n}\nquery = \"\"\"\n        select concat(c.prenom, ' ', c.nom) as nom,\n        cl.titre as classe,\n        calcul_credit(c.id) as score\n        from citoyen c\n            inner join classe cl on cl.id = c.classe_id \n        where c.id = %(citoyen_id)s;\n    \"\"\"\nparametres = {\n'citoyen_id' : id\n}\ntry:\nconnection = mysql.connect(**db_config)\ncursor = connection.cursor()\ncursor.execute(query, parametres)\nresult = cursor.fetchone()\nexcept mysql.Error as erreur:\nprint(erreur)\nfinally:\ncursor.close()\nconnection.close()\nreturn result\n</code></pre>"},{"location":"exercices/ex08/ex08_corrige_update/","title":"Modifier les informations d'un citoyen","text":"<p>Fonctions pour saisir les informations \u00e0 modifier</p> <pre><code># 3- Modifier un citoyen\ndef modifieCitoyen():\nprint('Modifier un citoyen')\nprint('\\nVeuillez nous donner les informations suivantes au sujet du citoyen \u00e0 modifier')\ncitoyen_id = input('{0:14} : '.format('Id du citoyen'))\nno_civique = input('{0:14} : '.format('Num\u00e9ro civique'))\nadresse = input('{0:14} : '.format('Adresse'))\nville = input('{0:14} : '.format('Ville'))\ncitoyen_update = updateCitoyen(citoyen_id, no_civique, adresse, ville)\nif(citoyen_update):\nprint(\"Le citoyen [{0}] a \u00e9t\u00e9 modifi\u00e9.\".format(citoyen_id))\n</code></pre> <p>Fonction qui modifie les informations du citoyen dans la base de donn\u00e9es et retourne True si la modification a \u00e9t\u00e9 effectu\u00e9.</p> <pre><code>def updateCitoyen(id_citoyen: int, no_civique: int, adresse: str, ville: str)-&gt; bool:\n\"\"\"\n    Modifie un citoyen\n    Arguments:\n        id: le id du citoyen (integer)\n        no_civique: un integer\n        adresse: un string\n        ville: un string\n    Returns:\n        True si la modification a fonctionn\u00e9\n    \"\"\"\ndb_config = {\n'host' : 'localhost',\n'user' : 'root',\n'password' : 'r00t_bd2',\n'database' : 'credit_social'\n}\nquery = \"\"\"\n        UPDATE citoyen\n        SET no_civique = %(no_civique)s, \n            adresse = %(adresse)s, \n            ville = %(ville)s\n        WHERE id = %(citoyen_id)s;\n    \"\"\"\nparametre = {\n'citoyen_id' : id_citoyen,\n'no_civique' : no_civique,\n'adresse' : adresse,\n'ville' : ville,\n}\ncitoyenUpdate = False\ntry:\nconnection = mysql.connect(\nhost=\"localhost\",\nuser=\"root\",\npassword=\"r00t_bd2\",\ndatabase=\"credit_social\"\n)\ncursor = connection.cursor()\ncursor.execute(query, parametre)\nconnection.commit()\ncitoyenUpdate = True\nexcept mysql.Error as erreur:\nprint(erreur)\nfinally:\ncursor.close()\nconnection.close()\nreturn citoyenUpdate\n</code></pre>"},{"location":"exercices/ex08/ex08_enonce/","title":"Exercice 08 - pyCRUD","text":"<p>Comme premier exercice avec Python, on va cr\u00e9er une application console simple qui va couvrir sommairement les op\u00e9ration CRUD. Nous allons utiliser la base de donn\u00e9es credit_social. Je vous laisse aller pour l'apprentissage de Python et des notions dont vous allez avoir besoin (afficher \u00e0 l'\u00e9cran, lire une saisie clavier, boucle, fonction, module?).</p>"},{"location":"exercices/ex08/ex08_enonce/#installation-de-python-est-des-librairies","title":"Installation de python est des librairies","text":"<ul> <li> <p>T\u00e9l\u00e9chargez la derni\u00e8re version de Python \u00e0 l'adresse suivante : https://www.python.org/downloads/</p> </li> <li> <p>Installez le connecteur mySQL pour Python : </p> </li> <li> <p>https://dev.mysql.com/downloads/connector/python/ en le t\u00e9l\u00e9chargeant</p> </li> <li> <p>En ligne de commande avec pip (probablement install\u00e9 avec Python)</p> <ul> <li><code>bash   python -m pip install mysql-connector-python</code></li> </ul> </li> </ul>"},{"location":"exercices/ex08/ex08_enonce/#creation-du-menu","title":"Cr\u00e9ation du menu","text":"<p>Au lancement du programme, un menu s'affichera avec les options suivantes : </p> <ol> <li>Ajouter un nouveau citoyen</li> <li>Obtenir les informations d'un citoyen</li> <li>Modifier un citoyen</li> <li>Supprimer un citoyen</li> <li>Quitter</li> </ol> <p>Exemple de menu</p> <p></p>"},{"location":"exercices/ex08/ex08_enonce/#options-du-menu","title":"Options du menu","text":""},{"location":"exercices/ex08/ex08_enonce/#1-ajouter-un-citoyen","title":"1. Ajouter un citoyen","text":"<p>Demander de la fa\u00e7on que vous voulez les informations suivantes sur le citoyen \u00e0 ajouter : </p> <ul> <li>nom</li> <li>pr\u00e9nom</li> <li>no_civique</li> <li>adresse</li> <li>ville</li> <li>pin</li> </ul> <p>Les champs classe_id et credit_initial seront \"forc\u00e9\" \u00e0 respectivement 4 et 500. Une fois l'ajout fait, afficher un message de confirmation et revenez au menu principal.</p>"},{"location":"exercices/ex08/ex08_enonce/#2-obtenir-les-informations-dun-citoyen","title":"2. Obtenir les informations d'un citoyen","text":"<p>Demander \u00e0 l'usager de saisir le id du citoyen. Afficher ensuite les informations suivantes : </p> <ul> <li>Pr\u00e9nom et nom</li> <li>Classe</li> <li>Score de cr\u00e9dit social</li> </ul> <p>Ensuite revenez au menu principal.</p>"},{"location":"exercices/ex08/ex08_enonce/#3-modifier-un-citoyen","title":"3. Modifier un citoyen","text":"<p>Permettre en saisissant le id d'un citoyen de modifier son adresse ( no_civique, adresse, ville). Afficher un message de confirmation et revenez au menu principal.</p>"},{"location":"exercices/ex08/ex08_enonce/#4-supprimer-un-citoyen","title":"4. Supprimer un citoyen","text":"<p>Supprimer un citoyen de la base de donn\u00e9es avec son id. Attention pr\u00e9sentement dans la base de donn\u00e9es il n'y a aucune cl\u00e9s \u00e9trang\u00e8res entre les tables citoyen, citoyen_evenement et evenement. On peut donc supprimer un citoyen sans supprimer les \u00e9v\u00e8nements auxquelles il a particip\u00e9. Il faudrait s'assurer qu'en supprimant un citoyen, ses \u00e9v\u00e8nements soient aussi supprim\u00e9. \u00c0 vous de choisir l'approche que vous voulez (Le faire dans la requ\u00eate suppression, supprimer en cascade depuis une cl\u00e9 \u00e9trang\u00e8re, etc.)</p>"},{"location":"exercices/ex08/ex08_enonce/#5-quitter","title":"5. Quitter","text":"<p>On quitte la boucle et le programme.</p>"},{"location":"exercices/ex08/ex08_enonce/#exemple-de-connexion-a-mysql","title":"Exemple de connexion \u00e0 mySQL","text":"<pre><code>import mysql.connector\n# Cr\u00e9ation de la connexion \u00e0 la bd\nmydb = mysql.connector.connect(\nhost=\"localhost\",\nuser=\"root\",\npassword=\"r00t_bd2\",\ndatabase=\"formatif_intra_01\"\n)\n# Cr\u00e9ation d'un curseur\nmycursor = mydb.cursor()\n# Dans notre requ\u00eate on remplace tous les param\u00eatres par des %s\nrequete = \"SELECT id, titre FROM profession WHERE id = %s\"\n# Ensuite on cr\u00e9e un tuple avec les valeurs des param\u00eatres\nparametres = (8,)\n# Dans le execute on passe en param\u00eatres la requ\u00eate et ensuite les param\u00eatres\nmycursor.execute(requete, parametres)\n# Le curseur r\u00e9cup\u00e8re toutes les donn\u00e9es du r\u00e9sultat de la requ\u00eate\nmyresult = mycursor.fetchall()\nprint('\\nListe des professions')\n# Boucle sur les r\u00e9sultats de la requ\u00eate, en attribuant la valeur des champs\n# id et titre \u00e0 des variables du m\u00eame nom\nfor (id, titre) in myresult:\nprint('{} - {}'.format(id, titre)) \n</code></pre>"},{"location":"exercices/ex08/ex08_enonce/#ressources","title":"Ressources","text":"<ul> <li>https://dev.mysql.com/doc/connector-python/en/</li> <li>https://www.w3schools.com/python/python_mysql_getstarted.asp</li> </ul>"},{"location":"exercices/ex08/ex08_enonce/#corrige","title":"Corrig\u00e9","text":"<ol> <li>Ajouter un nouveau citoyen</li> <li>Obtenir les informations d'un citoyen</li> <li>Modifier un citoyen</li> <li>Supprimer un citoyen</li> <li>Le programme en entier</li> </ol>"},{"location":"exercices/ex09/ex09_enonce/","title":"Exercice 09 - pyQt5","text":"<p>\u00c0 l'aide de la librairie pyQT5 et de la base de donn\u00e9es credit_social, cr\u00e9ez une interface graphique qui permettra de saisir un id de citoyen et de retourner son nom.</p>"},{"location":"exercices/ex09/ex09_enonce/#installation-de-pyqt5","title":"Installation de pyQT5","text":"<pre><code>pip install PyQt5\n</code></pre> <p>Documentation : https://pypi.org/project/PyQt5/</p>"},{"location":"exercices/ex09/ex09_enonce/#resultat","title":"R\u00e9sultat","text":"<ul> <li>On entre un id dans le textBox.</li> <li>En cliquant sur rechercher, on effectue une requ\u00eate \u00e0 la base de donn\u00e9es.</li> <li>On affiche le nom du citoyen sous le bouton.</li> </ul>"},{"location":"exercices/ex09/ex09_enonce/#exemple-de-code","title":"Exemple de code","text":"<p>L'exemple de code suivant va afficher une fen\u00eatre vide.</p> <pre><code># Pour pouvoir passer des arguments \u00e0 notre application\nimport sys\n# Les librairies PyQT5\nfrom PyQt5.QtCore import *\nfrom PyQt5.QtWidgets import *\nfrom PyQt5.QtGui import *\nclass MainWindow(QMainWindow):\ndef __init__(self):\nsuper(MainWindow, self).__init__()\nself.setWindowTitle(\"Oh la belle fen\u00eatre vide\")\n# Une instance de QApplication, on doit en avoir absolument \n# une et seulement une par application \napp = QApplication(sys.argv)\n# Cr\u00e9ation de notre fen\u00eatre principale en appelant la fonction\n# MainWindow appel\u00e9 plus haut\nwindow = MainWindow()\n# Tr\u00e8s important de l'afficher car par d\u00e9faut elle est masqu\u00e9.\nwindow.show()\n# D\u00e9marre la boucle d'\u00e9v\u00e8nement. L'application va s'afficher.\napp.exec()\n</code></pre> <p>Exemple d'un classe MainWindows avec un bouton et un champ texte. Il y a un \u00e9v\u00e9nement sur le bouton pour appeler une fonction quand on le clique.</p> <pre><code>class MainWindows(QMainWindow):\ndef __init__(self):\nsuper().__init__()\nself.setWindowTitle(\"Mon App\")\nself.setFixedSize(QSize(300, 300))\n# On cr\u00e9e un widget qui va contenir les autres et on \n# d\u00e9fini le type de layout \u00e0 utiliser\nlayout = QGridLayout()\n# On cr\u00e9e un bouton avec le texte rechercher\nbouton = QPushButton('Rechercher')\n# On ajoute le bouton au widget layout \n# \u00e0 la position 2,0 (troisi\u00e8me ligne, premi\u00e8re colonne)\nlayout.addWidget(bouton, 2, 0)\n# On cr\u00e9e un widget label\nself.resultat = QLabel('-')\n# Formatage du texte\nself.resultat.setAlignment(Qt.AlignCenter)\nfont = self.resultat.font()\nfont.setPointSize(12)\nself.resultat.setFont(font)\nself.resultat.setFixedHeight(100)\n# On ajoute le label dans le layout\nlayout.addWidget(self.resultat, 3, 0)\n# On associe l'\u00e9v\u00e9nement clic du bouton \u00e0 la fonction \n# afficher_nom\nbouton.clicked.connect(self.afficher_nom)\n# On cr\u00e9e un container qui repr\u00e9sente le widget principal, \n# tout le contenu de notre fen\u00eatre\ncontainer = QWidget()\n# On y ajoute le widget layout\ncontainer.setLayout(layout)\n# On d\u00e9fini le container comme le widget principal\nself.setCentralWidget(container)\ndef afficher_nom(self):\nself.resultat.setText('Mathieu Fr\u00e9chette')\n</code></pre>"},{"location":"exercices/ex09/ex09_enonce/#corrige","title":"Corrig\u00e9","text":"<p>Voici ma version de l'exercice</p> <p>app.py <pre><code>import sys\nfrom PyQt5.QtCore import QSize, Qt\nfrom PyQt5.QtWidgets import QApplication, QGridLayout, QHBoxLayout, QLabel, QLineEdit, QMainWindow, QPushButton, QVBoxLayout, QWidget\nfrom db_citoyen import getCitoyen\nclass MainWindows(QMainWindow):\ndef __init__(self):\nsuper().__init__()\nself.setWindowTitle(\"Mon App\")\n# self.setFixedSize(QSize(300, 300))\nlayout = QGridLayout()\nlayout.setContentsMargins(40,10,40,10)\ntitre = QLabel('Entrez le id du citoyen')\ntitre.setAlignment(Qt.AlignCenter)\nfont = titre.font()\nfont.setPointSize(12)\ntitre.setFont(font)\ntitre.setFixedHeight(50)\nlayout.addWidget(titre, 0, 0)\n# Edit box\nself.input_id_citoyen = QLineEdit()\nself.input_id_citoyen.returnPressed.connect(self.RechercherCitoyen)\nlayout.addWidget(self.input_id_citoyen, 1, 0)\nbouton = QPushButton('Rechercher')\nbouton.clicked.connect(self.RechercherCitoyen)\nlayout.addWidget(bouton, 2, 0)\nself.label_nom_citoyen = QLabel('-')\nself.label_nom_citoyen.setAlignment(Qt.AlignCenter)\nfont = self.label_nom_citoyen.font()\nfont.setPointSize(12)\nself.label_nom_citoyen.setFont(font)\nself.label_nom_citoyen.setFixedHeight(100)\nlayout.addWidget(self.label_nom_citoyen, 3, 0)\ncontainer = QWidget()\ncontainer.setLayout(layout)\nself.setCentralWidget(container)\ndef RechercherCitoyen(self):\ncitoyen_id = self.input_id_citoyen.text()\nresultat = getCitoyen(citoyen_id)\nnom_citoyen = \"Le citoyen n'existe pas\"\nif resultat is not None:\nnom_citoyen, classe, score = resultat\nself.label_nom_citoyen.setText(nom_citoyen)\napp = QApplication(sys.argv)\nwindow = MainWindows()\nwindow.show()\napp.exec()\n</code></pre></p> <p>db_citoyen.py <pre><code>import mysql.connector as mysql\ndb_config = {\n'host' : 'localhost',\n'user' : 'root',\n'password' : '********',\n'database' : 'credit_social'\n}\n# S\u00e9lectionne le nom, la classe et le score d'un citoyen selon son id\ndef getCitoyen(id):\n\"\"\"\n    S\u00e9lectionne un citoyen\n    Arguments:\n        id: le id du citoyen (integer)\n    Returns:\n        Un tuple avec le nom, la classe et le score d'un citoyen\n    \"\"\"\nquery = \"\"\"\n        select concat(c.prenom, ' ', c.nom) as nom,\n        cl.titre as classe,\n        calcul_credit(c.id) as score\n        from citoyen c\n            inner join classe cl on cl.id = c.classe_id \n        where c.id = %(citoyen_id)s;\n    \"\"\"\nparametres = {\n'citoyen_id' : id\n}\nresult = ()\ntry:\nconnection = mysql.connect(**db_config)\ncursor = connection.cursor()\ncursor.execute(query, parametres)\nresult = cursor.fetchone()\nexcept mysql.Error as erreur:\nprint(erreur)\nfinally:\ncursor.close() \nconnection.close()\nreturn result\n</code></pre></p>"},{"location":"exercices/ex10/ex10_corrige/","title":"Exercice 10 - Corrig\u00e9","text":""},{"location":"exercices/ex10/ex10_corrige/#question-1","title":"Question #1","text":"<pre><code>/*\n * Pour chaque modification \u00e0 la table resultat, ins\u00e9rez les informations n\u00e9cessaires dans la table \n * resultat_log APR\u00c8S l'ex\u00e9cution de la requ\u00eate INSERT, UPDATE et DELETE. Attention, lors d'un UPDATE, \n * ajoutez les informations seulement si la colonne resultat_ms a \u00e9t\u00e9 modifi\u00e9.\n */\nDELIMITER $$\n-- Ajout lors d'un INSERT \nDROP TRIGGER IF EXISTS resultat_after_insert$$\nCREATE TRIGGER resultat_after_insert\nAFTER INSERT ON resultat FOR EACH ROW BEGIN INSERT INTO resultat_log (operation, ancien_resultat, nouveau_resultat, resultat_id, date_operation)\nVALUES ('insert', null, NEW.resultat_ms, NEW.id, NOW());\nEND$$\n-- Ajout lors d'un UPDATE \nDROP TRIGGER IF EXISTS resultat_after_update$$\nCREATE TRIGGER resultat_after_update\nAFTER UPDATE ON resultat FOR EACH ROW BEGIN IF (OLD.resultat_ms &lt;&gt; NEW.resultat_ms) THEN INSERT INTO resultat_log (operation, ancien_resultat, nouveau_resultat, resultat_id, date_operation)\nVALUES ('update', OLD.resultat_ms, NEW.resultat_ms, OLD.id, NOW());\nEND IF;\nEND$$\n-- Ajout lors d'un DELETE \nDROP TRIGGER IF EXISTS resultat_after_delete$$\nCREATE TRIGGER resultat_after_delete\nAFTER DELETE ON resultat FOR EACH ROW BEGIN INSERT INTO resultat_log (operation, ancien_resultat, nouveau_resultat, resultat_id, date_operation)\nVALUES ('delete', OLD.resultat_ms, null, OLD.id, NOW());\nEND$$\nDELIMITER ;\n</code></pre>"},{"location":"exercices/ex10/ex10_corrige/#question-2","title":"Question #2","text":"<pre><code>/*\n * Quand on ajoute un r\u00e9sultat, validez AVANT l'ajout que la valeur de la colonne cree_par existe \n * dans la table usager. Si la valeur est invalide, emp\u00eachez la requ\u00eate INSERT et retournez un message \n * d'erreurs ( Regardez du c\u00f4t\u00e9 de SIGNAL en MySQL)\n */\nDELIMITER $$\nDROP TRIGGER IF EXISTS resultat_before_insert$$\nCREATE TRIGGER resultat_before_insert\nBEFORE INSERT ON resultat FOR EACH ROW BEGIN IF NOT EXISTS (SELECT id FROM usager WHERE id = NEW.cree_par) THEN\nSIGNAL SQLSTATE '45000'\nSET MESSAGE_TEXT = 'Le id usager est inconnu';\nEND IF;\nEND$$\nDELIMITER ;\n</code></pre>"},{"location":"exercices/ex10/ex10_corrige/#question-3","title":"Question #3","text":"<pre><code>/* \n * Effectuez les m\u00eames op\u00e9rations que la question #2 quand on modifie un r\u00e9sultat mais sur la colonne modifie_par.\n */\nDELIMITER $$\nDROP TRIGGER IF EXISTS resultat_before_update$$\nCREATE TRIGGER resultat_before_update\nBEFORE UPDATE ON resultat FOR EACH ROW BEGIN IF NOT EXISTS (SELECT id FROM usager WHERE id = NEW.modifie_par) THEN\nSIGNAL SQLSTATE '45000'\nSET MESSAGE_TEXT = 'Le id usager est inconnu';\nEND IF;\nEND$$\nDELIMITER ;\n</code></pre>"},{"location":"exercices/ex10/ex10_corrige/#question-4","title":"Question #4","text":"<pre><code>/*\n * AVANT l'insertion ou la modification de la description d'une \u00e9preuve dans la table epreuve_type, \n * valider que la description n'est pas d\u00e9j\u00e0 utilis\u00e9. Si oui, modifiez la valeur \u00e0 ajouter ou modifier \n * en ajoutant (x) \u00e0 la description. ( x vaudra le nombre de fois que le nom se \n * retrouve dans la table -1 ) Ex. On veut ins\u00e9rer Marathon comme valeur mais elle est d\u00e9j\u00e0 pr\u00e9sente \n * comme description dans la table. On va utiliser Marathon (1) comme nouvelle valeur \u00e0 ins\u00e9rer.  \n */\nDELIMITER $$\nDROP TRIGGER IF EXISTS epreuve_type_before_insert$$\nCREATE TRIGGER epreuve_type_before_insert\nBEFORE INSERT\nON epreuve_type FOR EACH ROW BEGIN DECLARE nb_occurence INT DEFAULT 0;\nSELECT count(*) INTO nb_occurence FROM epreuve_type WHERE description = NEW.description OR description LIKE CONCAT(NEW.description, ' (%)');\nIF nb_occurence &gt; 0 THEN\nSET NEW.description = CONCAT(NEW.description, \" (\", nb_occurence, \")\");\nEND IF;\nEND$$\nDELIMITER ;\n</code></pre>"},{"location":"exercices/ex10/ex10_enonce/","title":"Exercice 10 - Triggers","text":""},{"location":"exercices/ex10/ex10_enonce/#preparation-des-donnees","title":"Pr\u00e9paration des donn\u00e9es","text":"<ul> <li>Importer le script sql exercice10_trigger.sql disponible ici</li> </ul>"},{"location":"exercices/ex10/ex10_enonce/#triggers-a-creer","title":"Triggers \u00e0 cr\u00e9er","text":""},{"location":"exercices/ex10/ex10_enonce/#question-1","title":"Question #1","text":"<p>Pour chaque modification \u00e0 la table resultat, ins\u00e9rez les informations n\u00e9cessaires dans la table resultat_log APR\u00c8S l'ex\u00e9cution de la requ\u00eate INSERT, UPDATE et DELETE. Attention, lors d'un UPDATE, ajoutez les informations seulement si la colonne resultat_ms a \u00e9t\u00e9 modifi\u00e9.</p> colonne insert update delete operation \"insert\" \"update\" \"delete\" ancien_resultat null old.resultat_ms old.resultat_ms nouveau_resultat new.resultat_ms new.resultat_ms null resultat_id new.id new.id new.id date_operation La date du jour La date du jour La date du jour"},{"location":"exercices/ex10/ex10_enonce/#question-2","title":"Question #2","text":"<p>Quand on ajoute un r\u00e9sultat, validez AVANT l'ajout que la valeur de la colonne cree_par existe dans la table usager. Si la valeur est invalide, emp\u00eachez la requ\u00eate INSERT et retournez un message d'erreurs ( Regardez du c\u00f4t\u00e9 de SIGNAL en MySQL). La valeur \u00e0 ins\u00e9rer est le id d'un usager de la table usager. </p>"},{"location":"exercices/ex10/ex10_enonce/#question-3","title":"Question #3","text":"<p>Effectuez les m\u00eames op\u00e9rations que la question #2 quand on modifie un r\u00e9sultat mais sur la colonne modifie_par.</p>"},{"location":"exercices/ex10/ex10_enonce/#question-4","title":"Question #4","text":"<p>AVANT l'insertion ou la modification de la description d'une \u00e9preuve dans la table epreuve_type, valider que la description n'est pas d\u00e9j\u00e0 utilis\u00e9. Si oui, modifiez la valeur \u00e0 ajouter ou modifier en ajoutant (x) \u00e0 la description. ( x vaudra le nombre de fois que le nom se retrouve dans la table -1 ) Ex. On veut ins\u00e9rer Marathon comme valeur mais elle est d\u00e9j\u00e0 pr\u00e9sente comme description dans la table. On va utiliser Marathon (1) comme nouvelle valeur \u00e0 ins\u00e9rer.</p>"},{"location":"exercices/ex10/ex10_enonce/#corrige","title":"Corrig\u00e9","text":"<p>Le corrig\u00e9 est ici</p>"},{"location":"exercices/ex11/ex11_enonce/","title":"Exercice 11 - Livres dont vous \u00eates le h\u00e9ro","text":""},{"location":"exercices/ex11/ex11_enonce/#description-de-lexercice","title":"Description de l'exercice","text":"<p>L'objectif du projet est de cr\u00e9er une application qui permettra de lire et de naviguer dans un livre dont vous \u00eates le h\u00e9ros. </p> <p>Vous devrez faire l'analyse du cas et me produire un diagramme de classes de cette analyse. Ensuite cr\u00e9er la base de donn\u00e9es en lien avec votre analyse. Je vais vous fournir le texte d'un livre divis\u00e9 en chapitres pour l'inclure dans la base de donn\u00e9es. Finalement vous allez d\u00e9velopper une application fonctionnelle en python avec une interface graphique. </p> <p>L'exercice sera \u00e9valu\u00e9 et comptera pour 15% de la note finale. Vous pouvez le faire en \u00e9quipe de 2 ou individuellement. </p>"},{"location":"exercices/ex11/ex11_enonce/#remise-de-lexercice","title":"Remise de l'exercice","text":"<p>Cr\u00e9ez un d\u00e9p\u00f4t Github de l'exercice \u00e0 l'int\u00e9rieur duquel vous allez avoir les \u00e9l\u00e9ments suivants : </p> <ul> <li>Dans un r\u00e9pertoire nomm\u00e9 ressources, votre diagramme de classes ainsi que les scripts SQL n\u00e9cessaires \u00e0 la cr\u00e9ation de votre base de donn\u00e9es et \u00e0 l'insertion des donn\u00e9es une fois l'application fonctionnel.</li> <li>Le code de votre application. Si vous travaillez en \u00e9quipe, je veux que chacun travaille sur une version locale du projet et fasse des commits et merge sur le projet ma\u00eetre sur Github pour que je puisse \u00e9valuer l'implication de chaque co\u00e9quipiers.</li> <li>La remise du projet se fera durant le cours du 18 novembre 2022</li> </ul>"},{"location":"exercices/ex11/ex11_enonce/#analyse-du-cas","title":"Analyse du cas","text":"<p>Les points suivants du livre  doivent \u00eatre couverts par votre analyse :</p> <ul> <li>Le texte du livre divis\u00e9 entre chapitres ainsi que le principe de navigation entre les chapitres. (Pour chaque chapitre il n'y a qu'un choix restreint de chapitres auxquels on peut acc\u00e9der)</li> <li>Pour l'instant on n'aura qu'un livre dans l'application, mais on pourrait en avoir plusieurs. On va prendre pour acquis que tout les livres auraient la m\u00eame fiche de personnage.</li> <li>La fiche du personnage (feuille d'aventure). Pour les sections disciplines Kai et Armes, les valeurs qu'on peut y entrer doivent provenir d'une liste de choix, celle-ci est d\u00e9crite plus loin dans le livre. (\u00c0 partir de la page 9 pour les disciplines et 11 pour les armes)</li> <li>On ne couvrira pas le syst\u00e8me de r\u00e8gles, \u00e7a sera \u00e0 l'usager de le faire manuellement. (Combat, perte d'endurance, etc...)</li> <li>On doit pouvoir enregistrer notre progression dans le livre et faire plusieurs parties en m\u00eame temps.</li> </ul> <p>Votre analyse doit respecter les r\u00e8gles de la troisi\u00e8me forme normale, \u00e0 moins de cas d'exception qui devront \u00eatre justifi\u00e9s.</p>"},{"location":"exercices/ex11/ex11_enonce/#diagramme-de-classes","title":"Diagramme de classes","text":"<p>Le diagramme de classes doit respecter le plus fid\u00e8lement votre analyse. Les normes de nomenclature d\u00e9fini dans les notes de cours doivent \u00eatre suivi.</p>"},{"location":"exercices/ex11/ex11_enonce/#base-de-donnees","title":"Base de donn\u00e9es","text":"<p>Il n'y a pas de minimum ou maximum quand aux nombre de tables \u00e0 avoir, mais vous devez inclure les \u00e9l\u00e9ments suivants : </p> <ul> <li>Un usager avec des droits restreint qui sera utilis\u00e9 par l'application. Pour les droits, allez-y au minimum, seulement les tables et commandes n\u00e9cessaires au fonctionnement de l'application. </li> <li>Vous devez au minimum inclure 2 proc\u00e9dures stock\u00e9es, fonctions ou triggers (Une fonction et un trigger, une proc\u00e9dure stock\u00e9e et une fonction, deux triggers, etc...).</li> </ul>"},{"location":"exercices/ex11/ex11_enonce/#application","title":"Application","text":"<p>L'application doit comporter les fonctionnalit\u00e9s suivantes : </p> <ul> <li>Lire un livre, naviguer entre les chapitres selon leur num\u00e9ro.</li> <li>Permettre \u00e0 l'usager de modifier sa fiche de personnage.</li> <li>Sauvegarde notre progression de lecture, (num\u00e9ro de chapitre, feuille d'aventure)</li> <li>Supprimer une sauvegarde.</li> </ul>"},{"location":"exercices/ex11/ex11_enonce/#ressources","title":"Ressources","text":"<ul> <li>Loup solitaire T.1 : Le livre de r\u00e9f\u00e9rence</li> <li>insert_chapitre.sql : Les textes de chaque chapitre</li> <li>insert_lien_chapitre.sql : Les liens du chapitre vers les autres</li> </ul>"},{"location":"exercices/ex11/ex11_enonce/#grille-de-correction","title":"Grille de correction","text":"Crit\u00e8res R\u00e9ussi Satisfaisant insatisfaisant Points Les scripts SQL de cr\u00e9ation de tables et d'insertion de donn\u00e9es sont fonctionnels et couvrent l'ensemble de l'application. 2 1 0 /2 Le diagramme de classes respecte les points \u00e0 couvrir de l'analyse de cas et les normes de nomenclature d\u00e9finies dans les notes de cours. 2 1 0 /2 Un usager avec des droits restreints est utilis\u00e9 pour la connexion entre l'application et la base de donn\u00e9es. Sa cr\u00e9ation est incluse dans les scripts SQL remis. 2 1 0 /2 La base de donn\u00e9es comportent 2 proc\u00e9dures stock\u00e9es, fonctions ou triggers. 2 1 0 /2 L'application permet de lire un livre et de naviguer entre les chapitres par leur num\u00e9ro. 2 1 0 /2 L'application permet \u00e0 l'usager de modifier manuellement la feuille de personnage du livre. 2 1 0 /2 L'application permet de sauvegarder la progression de lecture (le chapitre en cours) et la feuille de personnage. 4 2 0 /4 L'application permet de supprimer une sauvegarde 2 1 0 /2 Le projet est li\u00e9 \u00e0 un d\u00e9p\u00f4t sur GitHub et un suivi a \u00e9t\u00e9 effectu\u00e9 durant le d\u00e9veloppement. (Commit, push, pull request) 2 1 0 /2 Total /20"},{"location":"exercices/ex12/ex12_enonce/","title":"Exercice 12 - Gestion des usagers","text":"<p>Pour cet exercice nous allons utiliser la base de donn\u00e9es credit_social (voir le script de cr\u00e9ation dans l'exercice 6).Vous devez me produire un script SQL qui va effectuer les op\u00e9rations suivantes. Assurez-vous de tester que les permissions sont bien appliqu\u00e9es. L'exercice doit \u00eatre fait depuis une console, pas de workbench, phpmyadmin, etc. Vous pouvez ajouter les r\u00e9ponses des sections \"C\" dans le m\u00eame script en commentaire.</p>"},{"location":"exercices/ex12/ex12_enonce/#1-usager-citoyen_alpha","title":"1. Usager citoyen_alpha","text":"<p>a) Cr\u00e9ez un usager avec les informations suivantes : </p> <ul> <li>nom : citoyen_alpha</li> <li>mot de passe : !alph2</li> <li>h\u00f4te accept\u00e9 : tous</li> </ul> <p>b) Donnez les permissions suivantes \u00e0 cette usager : </p> <ul> <li>Il a la permission de tout faire dans la base de donn\u00e9es credit_social.</li> <li>Il peut aussi ajouter des permissions \u00e0 d'autre usagers.</li> <li>Il peut cr\u00e9er des usagers pour toutes les bases de donn\u00e9es</li> </ul> <p>c) Testez les \u00e9l\u00e9ments suivants</p> <ul> <li>Inscrivez le r\u00e9sultat d'une requ\u00eate SELECT sur une table d'une autre base de donn\u00e9es que credit_social.</li> <li>Faites la cr\u00e9ation de l'usager suivant (le point #2) avec cet usager. Est-ce que \u00e7a fonctionne?</li> </ul>"},{"location":"exercices/ex12/ex12_enonce/#2-usager-citoyen_beta","title":"2. Usager citoyen_beta","text":"<p>a) Cr\u00e9er un usager avec les informations suivantes : </p> <ul> <li>nom : citoyen_beta</li> <li>mot de passe : !b3ta</li> <li>h\u00f4te accept\u00e9 : tous</li> </ul> <p>b) Donnez les permissions suivantes \u00e0 cet usager : </p> <ul> <li>Il peut faire des requ\u00eates SELECT, UPDATE, INSERT sur les tables citoyen et evenement de la base de donn\u00e9es credit_social.</li> <li>Il peut ex\u00e9cuter toutes les proc\u00e9dures stock\u00e9es.</li> </ul> <p>c) Testez les \u00e9l\u00e9ments suivants</p> <ul> <li>Essayez de supprimer l'\u00e9v\u00e9nement avec le id 6 de la table evenement. Inscrivez la requ\u00eate effectu\u00e9e et le r\u00e9sultat.</li> <li>Ex\u00e9cutez une proc\u00e9dure stock\u00e9e de la base de donn\u00e9es credit_social. Inscrivez la requ\u00eate effectu\u00e9e.</li> <li>Modifiez le cr\u00e9dit initial du citoyen avec le id 2107 pour 800. Inscrivez la requ\u00eate effectu\u00e9e.</li> </ul>"},{"location":"exercices/ex12/ex12_enonce/#3-usager-citoyen_gamma","title":"3. Usager citoyen_gamma","text":"<p>a) Cr\u00e9er un usager avec les informations suivantes : </p> <ul> <li>nom : citoyen_gamma</li> <li>mot de passe : !g2mm2</li> <li>h\u00f4te accept\u00e9 : tous</li> </ul> <p>b) Donnez les permissions suivantes \u00e0 cet usager : </p> <ul> <li>Il peut faire des requ\u00eates SELECT sur les colonnes nom, prenom et pin de la table citoyen de la base de donn\u00e9es credit_social.</li> <li>Il peut ex\u00e9cuter uniquement la proc\u00e9dure stock\u00e9e update_classe de la base de donn\u00e9es credit_social</li> </ul> <p>c) Testez les \u00e9l\u00e9ments suivants</p> <ul> <li>\u00cates-vous capable de donner le nom et pr\u00e9nom du citoyen avec le id 1111? Sinon pourquoi?</li> <li>Faites les modifications n\u00e9cessaires pour en \u00eatre capable. Inscrivez l'op\u00e9ration effectu\u00e9e.</li> <li>Trouvez une fa\u00e7on pour permettre \u00e0 cet usager de pouvoir afficher le nom, prenom et la classe d'un citoyen selon son PIN sans ajouter la table classe dans les permissions SELECT de l'usager. Inscrivez l'op\u00e9ration effectu\u00e9e.</li> <li>Testez votre solution avec le PIN 39c0cf42-510c-4811-8c3c-47ab100443ce et inscrivez le nom complet du citoyen correspondant.</li> </ul>"},{"location":"exercices/ex13/ex13_enonce/","title":"Exercice 13 - R\u00e9vision analyse","text":""},{"location":"exercices/ex13/ex13_enonce/#mise-en-situation","title":"Mise en situation","text":"<p>\u00c0 partir de l'image suivante, vous devez mod\u00e9liser le syst\u00e8me de facturation d'un garage de voiture.</p> <p></p>"},{"location":"exercices/ex13/ex13_enonce/#precisions","title":"Pr\u00e9cisions","text":"<ul> <li>Seulement les informations surlign\u00e9es en jaunes doivent \u00eatre sauvegard\u00e9s (ou peuvent \u00eatre reproduit exactement avec les autres informations sauvegard\u00e9es).</li> <li>Le nombre 2134521 situ\u00e9 au-dessus du nom \"Mathieu Fr\u00e9chette\" est le code de ce client.</li> <li>La description du v\u00e9hicule est un champs texte associ\u00e9 au compte du client. Le client peut avoir plus d'un v\u00e9hicule associ\u00e9 \u00e0 son compte.</li> <li>La case PLAQUE est le num\u00e9ro de la plaque d'immatriculation du v\u00e9hicule</li> <li>Les trois champs ODO ... repr\u00e9sente trois prise de odom\u00e8tre du v\u00e9hicule durant le travail factur\u00e9.</li> <li>Dans le d\u00e9tail de la facture : </li> <li>Le texte \"Remettre Pneus dans l'auto\" est un texte global \u00e0 la facture qu'un le commis a entr\u00e9 manuellement.</li> <li>Il y a trois ligne de d\u00e9tail, chacune commen\u00e7ant par une quantit\u00e9 et un code de produit.</li> <li>Le texte \"N'oubliez pas la rotation... \" est aussi un texte globale \u00e0 la facture qu'un le commis a entr\u00e9 manuellement.</li> <li>Un peu payer la facture selon plus d'un mode de paiement. Donc \u00e0 la ligne \"M\u00e9thode de paiement. Visa=730.92$\" on pourrait retrouver plus d'un mode de paiement avec le montant pour chaque mode.</li> <li>Les \"produits\" sont class\u00e9s en trois cat\u00e9gorie : Pi\u00e8ces, Main-d'\u0153uvre (M.O.) et autre. Un produit ne peut avoir qu'une cat\u00e9gorie.</li> <li>Dans la table facturation, ajoutez deux colonnes, date_creation (type date) et user_creation (type varchar) qui seront remplies automatiquement avec un d\u00e9clencheur.</li> </ul>"},{"location":"exercices/ex13/ex13_enonce/#diagramme-de-classes","title":"Diagramme de classes","text":"<p>Produisez le diagramme de classes en relation \u00e0 partir des informations plus haut.</p> <ul> <li>Vous devez indiquer les relations entres les tables en pr\u00e9cisant le type de relation. </li> <li>Utilisez la notation 1&lt;---&gt;1 pour une relation d'un \u00e0 un et 1&lt;---&gt;n ou n&lt;---&gt;1 pour une relation d'un \u00e0 plusieurs</li> <li>Vous devez inscrire les types de donn\u00e9es</li> <li>Vous devez inscrire les cl\u00e9s primaires (PK) et \u00e9trang\u00e8res (FK)</li> </ul>"},{"location":"exercices/ex13/ex13_enonce/#creation-de-la-base-de-donnees","title":"Cr\u00e9ation de la base de donn\u00e9es","text":"<p>Cr\u00e9ez un script SQL qui effectuera les op\u00e9rations suivantes : </p> <ul> <li>Cr\u00e9ation d'un nouvelle base de donn\u00e9es</li> <li>Cr\u00e9ation des tables selon le diagramme de classes.</li> </ul>"},{"location":"exercices/ex13/ex13_enonce/#triggers","title":"Triggers","text":"<p>Cr\u00e9ez un script SQL qui fera la cr\u00e9ation des deux d\u00e9clencheurs (Triggers) suivants : </p> <ul> <li>AVANT la cr\u00e9ation d'une facture, ajoutez la date du syst\u00e8me au champ date_creation de la table de facturation.</li> <li>AVANT la cr\u00e9ation d'une facture, ajoutez le nom de l'usager courant dans le champs user_creation si aucun code de commis n'a \u00e9t\u00e9 sp\u00e9cifi\u00e9 lors de la requ\u00eate d'insertion. La commande current_user() permet de connaitre le nom de l'usager courant.</li> </ul>"},{"location":"exercices/ex13/ex13_enonce/#creation-dun-usager","title":"Cr\u00e9ation d'un usager","text":"<p>Cr\u00e9ez un script SQL qui effectuera les op\u00e9rations suivantes : </p> <p>a) Cr\u00e9ez un usager selon ces informations : </p> <ul> <li>nom : facturation</li> <li>mot de passe : $acture</li> <li>h\u00f4te accept\u00e9 : localhost</li> </ul> <p>b) Donnez les permissions suivantes \u00e0 cette usager : </p> <ul> <li>Il peut faire des requ\u00eates SELECT, UPDATE, INSERT sur les tables de facturations de la base de donn\u00e9es cr\u00e9\u00e9.</li> <li>Il peut faire des requ\u00eates SELECT, UPDATE sur la table des clients.</li> <li>Il peut faire des requ\u00eates SELECT sur la table des produits.</li> </ul>"},{"location":"notes_de_cours/convention/","title":"Convention de nommage MySQL","text":"<p>Bien que MySQL n'a pas vraiment de convention de nommage officiel, voici certaines des r\u00e8gles les plus utilis\u00e9es : </p>"},{"location":"notes_de_cours/convention/#regles-generales","title":"R\u00e8gles g\u00e9n\u00e9rales","text":"<ul> <li>Toujours \u00e9crire les noms en minuscule. \u00c7a peut aider \u00e0 \u00e9viter les erreurs, car MySQL est sensible \u00e0 la case</li> <li>Ne jamais utiliser d'espace, la remplacer par une barre de soulignement \"_\"</li> <li>Utilisez seulement des lettres dans les noms, pas de nombres ni de caract\u00e8res sp\u00e9ciaux</li> <li>\u00c9vitez d'utiliser un pr\u00e9fix dans le nom, \u00e7a complique inutilement le nom et nuit \u00e0 la visibilit\u00e9.</li> </ul>"},{"location":"notes_de_cours/convention/#nom-des-tables","title":"Nom des tables","text":"<ul> <li>Le nom doit \u00eatre au singulier</li> <li>Le nom doit \u00eatre en minuscule</li> <li>Ne pas utiliser de pr\u00e9fix sauf si c'est in\u00e9vitable.</li> <li>Le nom doit \u00eatre clair et explicite</li> <li>Ne pas utiliser d'abr\u00e9viation</li> </ul>"},{"location":"notes_de_cours/convention/#nom-des-champs","title":"Nom des champs","text":"<ul> <li>Le nom doit \u00eatre en minuscule, sans espace et sans nombres.</li> <li>On doit \u00e9viter les pr\u00e9fixes</li> <li>Utilisez un nom court, sans utiliser abr\u00e9viation par contre.</li> <li>Ne pas utiliser de mot r\u00e9serv\u00e9 comme nom de champs, comme date par exemple</li> <li>Le nom d'une cl\u00e9 \u00e9trang\u00e8re devrait contenir le nom de la table et de sa cl\u00e9 primaire. Une cl\u00e9 \u00e9trang\u00e8re vers la table usager dont la cl\u00e9 primaire est le champ id devrait \u00eatre nomm\u00e9e usager_id</li> </ul>"},{"location":"notes_de_cours/curseur/","title":"Les curseurs","text":"<p>Parfois on peut vouloir effectuer un traitement sur chaque lignes du r\u00e9sultat d'une requ\u00eate. Les curseurs (cursor) nous permettent de parcourir justement de parcourir ligne par ligne un r\u00e9sultat, un peu \u00e0 la mani\u00e8re d'une boucle \"while\" en programmation. </p> <p>Il y a trois caract\u00e9ristiques \u00e0 savoir sur les curseurs :</p> <ul> <li>Ils sont en lecture seule, on ne peut pas modifier les valeurs du r\u00e9sultat.</li> <li>On ne peut que parcourir les lignes du r\u00e9sultat de la premi\u00e8re \u00e0 la derni\u00e8re et on ne peut pas sauter de ligne. Pour modifier \"l'ordre de lecture\" on doit utiliser le r\u00e9sultat avec la clause ORDER BY de la requ\u00eate qui g\u00e9n\u00e9rera le r\u00e9sultat. </li> <li>En MySQL, les donn\u00e9es du curseurs pointent vers les vrais donn\u00e9es de la base de donn\u00e9es. Ce qui veut dire que si une modification est faite durant l'utilisation du curseur, les donn\u00e9es de celui-ci seront aussi modifi\u00e9es.</li> </ul> <p>On peut utiliser les curseurs dans des proc\u00e9dures stock\u00e9es, des fonctions et des \"triggers\".</p> <p>L'utilisation des curseurs se fait en quatre \u00e9tapes : </p> <ul> <li>DECLARE : On d\u00e9clare notre curseur en lui sp\u00e9cifiant la requ\u00eate qui sera utilis\u00e9e</li> <li>OPEN : On \"ouvre\" notre curseur. On le place dans un \u00e9tat o\u00f9 il pourra recevoir les donn\u00e9es</li> <li>FETCH : On ajoute les donn\u00e9es de la ligne courante du r\u00e9sultat de la requ\u00eate. La valeur de chaque colonnes de la ligne de r\u00e9sultat sera ajout\u00e9 dans une variable que l'on aura d\u00e9clar\u00e9e pr\u00e9alablement.</li> <li>CLOSE : On ferme le curseur une fois notre utilisation termin\u00e9e.</li> </ul>"},{"location":"notes_de_cours/curseur/#declaration-du-curseur","title":"D\u00e9claration du curseur","text":"<p>La d\u00e9claration du curseur doit se faire apr\u00e8s la d\u00e9claration des autres variables sinon MySQL va g\u00e9n\u00e9rer un erreur. La syntaxe pour d\u00e9clarer un curseur est la suivante : </p> <pre><code>DECLARE mon_curseur CURSOR FROM requete_select;\n</code></pre> <p>On doit toujours utiliser une requ\u00eate SELECT pour g\u00e9n\u00e9rer le r\u00e9sultat qui va \u00eatre utilis\u00e9 par le curseur. Voici un exemple o\u00f9 l'on voudrait utiliser le matricule des employ\u00e9es qui ont \u00e9t\u00e9 embauch\u00e9 il y a 5 ans ou plus</p> <pre><code>DECLARE curseur_employe CURSOR FROM\nSELECT matricule FROM employe\nWHERE TIMESTAMPDIFF(year,date_embauche, now()) &gt;= 5;\n</code></pre>"},{"location":"notes_de_cours/curseur/#ouverture-du-curseur","title":"Ouverture du curseur","text":"<p>Pour ouvrir le curseur, on doit simplement utiliser la commande OPEN suivie du nom du curseur : </p> <pre><code>OPEN mon_curseur;\n</code></pre> <p>Si on reprend l'exemple plus haut, on ferais </p> <pre><code>OPEN curseur_employe;\n</code></pre>"},{"location":"notes_de_cours/curseur/#ajout-de-donnees-au-curseur","title":"Ajout de donn\u00e9es au curseur","text":"<p>Une fois le curseur disponible, on peut y ajouter des donn\u00e9es avec la commande FETCH. On le verra plus loin mais le cette op\u00e9ration s'effectue \u00e0 l'int\u00e9rieur d'une boucle. Le r\u00e9sultat du FETCH sera les valeurs des colonnes du r\u00e9sultat pour la ligne courante. La syntaxe est la suivante : </p> <pre><code>FETCH mon_curseur INTO liste de variable;\n</code></pre> <p>Les variables doivent \u00eatre s\u00e9par\u00e9es par des espaces et correspondre au nombre de colonnes du r\u00e9sultat. Ces variables auront \u00e9t\u00e9 d\u00e9clar\u00e9 au d\u00e9but de la proc\u00e9dure comme on l'expliquait plus haut. En reprenant notre exemple, nom allons assigner la valeur du matricule de la ligne courante du r\u00e9sultat dans une variable nomm\u00e9e no_matricule : </p> <pre><code>FETCH curseur_employe INTO no_matricule;\n</code></pre> <p>Chaque fois qu'on execute la commande FETCH,  MySQL essaie de lire la ligne suivante du r\u00e9sultat. S'il n'y a plus d'enregistrement (qu'on est \u00e0 la derni\u00e8re ligne), une exception sera lev\u00e9. On doit g\u00e9rer cette exception si on veut que tout se d\u00e9roule bien. Pour se faire, on va ajouter un HANDLER. Sa d\u00e9claration se fera apr\u00e8s la d\u00e9claration du curseur (on va voir plus loin l'ordre en d\u00e9tail avec un exemple).</p> <pre><code>DECLARE CONTINUE HANDLER FOR NOT FOUND SET fin_enregistrement = 1;\n</code></pre> <p>En r\u00e9sum\u00e9, on indique \u00e0 MySQL que si il rencontre l'exception NOT FOUND de continuer le traitement (CONTINUE) et d'assigner \u00e0 la variable fin_enregistrement la valeur 1. La variable fin_enregistrement aura \u00e9t\u00e9 d\u00e9clar\u00e9 plus haut.</p>"},{"location":"notes_de_cours/curseur/#fermeture-du-curseur","title":"Fermeture du curseur","text":"<p>Finalement, une fois notre traitement termin\u00e9, il nous reste qu'\u00e0 fermer le curseur. </p> <p><pre><code>CLOSE mon_curseur;\n</code></pre> ou avec notre exemple</p> <pre><code>CLOSE curseur_employe;\n</code></pre>"},{"location":"notes_de_cours/curseur/#exemple-dune-procedure-utilisant-un-curseur","title":"Exemple d'une proc\u00e9dure utilisant un curseur","text":"<p>Une entreprise veut cr\u00e9er deux listes de diffusion pour ses employ\u00e9es, une premi\u00e8re pour les employ\u00e9es qui compte moins de x ann\u00e9es d'anciennet\u00e9s et une pour les autres (le nombre d'ann\u00e9es sera re\u00e7u en param\u00eatre). La liste comportera le nom et pr\u00e9nom de l'employ\u00e9 ainsi que son adresse courriel. Dans la base de donn\u00e9es il y a d\u00e9j\u00e0 deux tables qui ont \u00e9t\u00e9 cr\u00e9\u00e9 pour recevoir ces listes : employe_moins et employe_plus. En r\u00e9alit\u00e9 il y aurait plus d'\u00e9tapes en mettre en place dans notre proc\u00e9dure pour s'assurer de l'int\u00e9grit\u00e9 de nos donn\u00e9es (utiliser une transaction, vider les tables avant l'ajout, \"attraper\" les erreurs, etc...). Pour simplifier les choses prenons pour acquis que les tables sont vides et que tout va se d\u00e9rouler sans erreurs comme par magie.</p> <pre><code>DELIMITER $$\nCREATE PROCEDURE generer_liste_employe (IN nombre_annee)\nBEGIN\n-- D\u00e9claration de la variable utilis\u00e9e dans le handler \"NOT FOUND\"\nDECLARE fin_enregistrement INTEGER DEFAULT 0;\n-- D\u00e9claration des variables utilis\u00e9es dans le fetch du curseur\nDECLARE nom varchar(30) DEFAULT \"\";\nDECLARE prenom varchar(30) DEFAULT \"\";\nDECLARE courriel varchar(255) DEFAULT \"\";\nDECLARE calcul_anciennete INT DEFAULT 0;\n-- D\u00e9claration du curseur des employ\u00e9es\nDEClARE curseur_employe CURSOR FOR SELECT nom, prenom, email, TIMESTAMPDIFF(year,date_embauche, now()) FROM employees;\n-- D\u00e9claration du handler NOT FOUND\nDECLARE CONTINUE HANDLER FOR NOT FOUND SET fin_enregistrement = 1;\n-- Ouverture du curseur\nOPEN curseur_employe;\n-- D\u00e9but de la boucle\nliste_employee: LOOP\n-- On assigne les valeurs de la ligne du r\u00e9sultat aux variables\nFETCH curseur_employe INTO nom, prenom, courriel, calcul_anciennete;\n-- On s'assure qu'on n'a pas atteind la fin des enregistrements avant de continuer\nIF fin_enregistrement = 1 THEN LEAVE liste_employee;\nEND IF;\n-- En utilisant la variable calcul_anciennete utilis\u00e9e dans le fetch et le param\u00eatre\n-- nombre_annee, on valide avec un si dans quelle tables ajout\u00e9es les donn\u00e9es\nIF  calcul_anciennete &lt; nombre_annee THEN\nINSERT INTO employe_moins(nom, prenom, courriel) VALUES (nom, prenom, courriel)\nELSE\nINSERT INTO employe_plus(nom, prenom, courriel) VALUES (nom, prenom, courriel)\nEND IF;\nEND LOOP liste_employee;\n-- Fermeture du curseur\nCLOSE curseur_employe;\nEND$$\nDELIMITER ;\n</code></pre>"},{"location":"notes_de_cours/curseur/#sources-et-documentation-supplementaire","title":"Sources et documentation suppl\u00e9mentaire","text":"<ul> <li>https://dev.mysql.com/doc/refman/8.0/en/cursors.html</li> <li>https://www.mysqltutorial.org/mysql-cursor/</li> </ul>"},{"location":"notes_de_cours/dbeaver/","title":"DBeaver","text":"<p>DBeaver est un outil de gestion de base de donn\u00e9es que nous utiliserons pour le cours. Il est gratuit, multiplateforme et supporte beaucoup de type de base de donn\u00e9es. </p> <ul> <li>T\u00e9l\u00e9chargez l'installateur ici : https://dbeaver.io</li> </ul>"},{"location":"notes_de_cours/dbeaver/#creer-une-connexion-vers-devilbox-avec-dbeaver","title":"Cr\u00e9er une connexion vers devilbox avec DBeaver","text":"<p>Vous devez tout d'abord vous assurer que les containeurs Devilbox sont bien lanc\u00e9s. Ensuite dans DBeaver cliquez sur le bouton Nouvelle connexion en haut \u00e0 gauche</p> <p></p> <p>S\u00e9lectionnez ensuite MariaDB dans la liste des type de connexion</p> <p></p> <p>Si vous n'avez pas chang\u00e9 les configurations de Devilbox, vous pouvez laisser les informations par d\u00e9faut, sinon entrez le bon mot de passe.</p> <p></p> <p>Cliquez ensuite sur Connection details et entrez un nom significatif \u00e0 votre connexion.</p> <p></p> <p>Cliquez sur Test de la connexion..., on vous demandera de t\u00e9l\u00e9charger le driver pour MariaDB, acceptez et une fois termin\u00e9 vous devriez avoir un message de succ\u00e8s. Cliquez sur Finish et votre connexion va s'ajouter dans le panneau \u00e0 gauche.</p> <p></p>"},{"location":"notes_de_cours/definition/","title":"Qu'est-ce qu'est la mod\u00e9lisation de donn\u00e9es?","text":"<p>La mod\u00e9lisation est une s\u00e9rie d'outils et de processus visant la cr\u00e9ation d'une base de donn\u00e9es pouvant stocker efficacement les donn\u00e9es d'un syst\u00e8me. On va diviser notre travail en trois niveaux :  </p>"},{"location":"notes_de_cours/definition/#le-niveau-conceptuel","title":"Le niveau conceptuel","text":"<p>\u00c0 cette \u00e9tape, on va analyser le syst\u00e8me \u00e0 mod\u00e9liser en r\u00e9coltant des donn\u00e9es et en d\u00e9finissant les besoins en utilisant le mod\u00e8le entit\u00e9-association. Ce travail de r\u00e9flexion va nous amener \u00e0 construire le sch\u00e9ma conceptuel, sorte de premi\u00e8re \u00e9bauche de notre future base de donn\u00e9es.</p>"},{"location":"notes_de_cours/definition/#le-niveau-relationnel","title":"Le niveau relationnel","text":"<p>La prochaine \u00e9tape consiste \u00e0 transformer notre sch\u00e9ma en un diagramme de classes UML. C'est \u00e0 cette \u00e9tape qu'on va d\u00e9finir le type de donn\u00e9es \u00e0 utiliser pour chaque champ, les cl\u00e9s primaires ainsi que secondaires et les types de relations entre les tables. Plusieurs r\u00e8gles, qu'on appelle la normalisation, viendront nous aider \u00e0 cr\u00e9er un diagramme efficace.</p>"},{"location":"notes_de_cours/definition/#le-niveau-sql","title":"Le niveau SQL","text":"<p>Finalement, on va cr\u00e9er les scripts SQL de cr\u00e9ation de tables, d\u00e9finir les contraintes, cr\u00e9er les d\u00e9clencheurs (triggers).</p>"},{"location":"notes_de_cours/devilbox/","title":"Outils","text":""},{"location":"notes_de_cours/devilbox/#devilbox","title":"Devilbox","text":"<p>L'environnement de d\u00e9veloppement que nous allons utiliser pour le cours s'appelle Devilbox. </p> <p>Christiane Lagac\u00e9 a cr\u00e9\u00e9 une fiche pour vous guider avec l'installation : </p> <ul> <li>Installation de devilbox</li> </ul> <p>Vous trouverez aussi de l'information pertinente sur la fa\u00e7on d'acc\u00e9der au terminal des diff\u00e9rents conteneurs de Devilbox : </p> <ul> <li>Acceder au terminal d'un conteneur docker</li> </ul> <p>Astuce</p> <p>Prenez le temps de vous cr\u00e9er des scripts pour d\u00e9marrer rapidement l'environnement Devilbox et acc\u00e9der au terminal Php.</p> <p>Pour ma part j'utilise la console Git Bash pour d\u00e9marrer mon environnement et je me suis cr\u00e9er des alias au lieu d'un script : </p> <pre><code>alias devilbox=\"cd c:\\devilbox ; docker-compose up\"\nalias dphp=\"cd c:\\devilbox ; docker exec -it devilbox-php-1 bash\"\n</code></pre> <ul> <li>Une solution ici</li> </ul>"},{"location":"notes_de_cours/diagramme_classe/","title":"Le diagramme de classes","text":""},{"location":"notes_de_cours/drawio/","title":"Draw.io","text":"<p>Draw.io est un logiciel de cr\u00e9ation de diagramme. Il en existe une version en ligne et desktop, je vous conseille d'installer la version desktop.</p> <ul> <li>Version en ligne : https://app.diagrams.net/</li> <li>Version desktop : https://www.drawio.com/</li> </ul>"},{"location":"notes_de_cours/function/","title":"Les fonctions stock\u00e9es (Stored function)","text":"<p>C'est quoi et \u00e0 quoi \u00e7a sert?</p>"},{"location":"notes_de_cours/function/#creation-dune-fonction","title":"Cr\u00e9ation d'une fonction","text":""},{"location":"notes_de_cours/function/#utilisation-dune-fonction","title":"Utilisation d'une fonction","text":""},{"location":"notes_de_cours/function/#modification-dune-fonction","title":"Modification d'une fonction","text":""},{"location":"notes_de_cours/function/#suppression-dune-fonction","title":"Suppression d'une fonction","text":""},{"location":"notes_de_cours/insert/","title":"INSERT","text":"<p>La commande INSERT est utilis\u00e9e pour ajouter des enregistrements dans une table.</p>"},{"location":"notes_de_cours/insert/#syntaxe-de-base","title":"Syntaxe de base","text":""},{"location":"notes_de_cours/insert/#la-methode-la-plus-simple","title":"La m\u00e9thode la plus simple","text":"<p><pre><code>INSERT INTO ma_table\nVALUES (valeur1, valeur2, valeur3);\n</code></pre> Avantages - Requ\u00eate plus courte - Si on modifie les noms de colonnes, pas besoin de modifier la requ\u00eate.</p> <p>Inconv\u00e9nients</p> <ul> <li>Possibilit\u00e9 d'erreurs plus grande, il faut que les valeurs concordent avec le nombre de colonnes et leur position.</li> </ul>"},{"location":"notes_de_cours/insert/#la-methode-la-plus-precise","title":"La m\u00e9thode la plus pr\u00e9cise","text":"<p><pre><code>INSERT INTO ma_table (colonne1, colonne2, colonne3)\nVALUES (valeur1, valeur2, valeur3);\n</code></pre> Avantages - Plus de pr\u00e9cisions dans la requ\u00eate - On n'est pas forc\u00e9 de suivre l'ordre des colonnes ni d'ajouter une valeur pour chacune d'entre elles.</p> <p>Inconv\u00e9nient - Les requ\u00eates sont plus longue \u00e0 \u00e9crire.</p> <ul> <li>Au niveau de la maintenance, si on modifie un nom de colonne, il faut modifier toutes les requ\u00eates ajoutant des valeurs dans cette colonne.</li> </ul>"},{"location":"notes_de_cours/insert/#inserer-des-donnees-seulement-dans-certaines-colonnes","title":"Ins\u00e9rer des donn\u00e9es seulement dans certaines colonnes","text":"<p><pre><code>INSERT INTO ma_table (colonne1)\nVALUES (valeur1);\n</code></pre> Les autres champs non sp\u00e9cifi\u00e9s prendront la valeur par d\u00e9faut si elle est d\u00e9fini ou NULL sinon.</p>"},{"location":"notes_de_cours/insert/#inserer-plusieurs-lignes-dans-la-meme-requete","title":"Ins\u00e9rer plusieurs lignes dans la m\u00eame requ\u00eate","text":"<p>La syntaxe est la m\u00eame, on doit seulement s\u00e9parer les s\u00e9ries de valeurs par une virgule :  <pre><code>INSERT INTO ma_table\nVALUES  (valeur_a1, valeur_a2, valeur_a3),\n(valeur_b1, valeur_b2, valeur_b3),\n(valeur_c1, valeur_c2, valeur_c3),\n(valeur_d1, valeur_d2, valeur_d3);\n</code></pre> <pre><code>INSERT INTO ma_table (colonne1, colonne2, colonne3)\nVALUES  (valeur_a1, valeur_a2, valeur_a3),\n(valeur_b1, valeur_b2, valeur_b3),\n(valeur_c1, valeur_c2, valeur_c3),\n(valeur_d1, valeur_d2, valeur_d3);\n</code></pre></p>"},{"location":"notes_de_cours/insert/#inserer-des-valeurs-provenant-dune-autre-table","title":"Ins\u00e9rer des valeurs provenant d'une autre table","text":"<p>On peut ins\u00e9rer les valeurs d'autres tables en utilisant une sous-requ\u00eate de s\u00e9lection au lieu de sp\u00e9cifier les valeurs dans la section VALUES.</p> <p><pre><code>INSERT INTO ma_table (colonne1, colonne2, colonne3)\nSELECT valeur1, valeur2, valeur3\nFROM table_source;\n</code></pre> La requ\u00eate SELECT n'a pas de contraintes et peut contenir plusieurs jointures, des conditions WHERE et HAVING, d'autres sous-requ\u00eate, etc. </p> <p>Si on veut ins\u00e9rer tout le contenu d'une table dans une autre, on peut utiliser l'instruction TABLE et le nom de la table d'o\u00f9 proviennent les donn\u00e9es \u00e0 ins\u00e9rer.</p> <pre><code>INSERT INTO ma_table TABLE table_source\n</code></pre>"},{"location":"notes_de_cours/insert/#les-colonnes-de-type-auto-increment","title":"Les colonnes de type auto-incr\u00e9ment","text":"<p>Ce type de colonne est incr\u00e9ment\u00e9e automatiquement lors d'une insertion de donn\u00e9es, on ne doit pas les ajouter dans nos requ\u00eates d'insertion.</p>"},{"location":"notes_de_cours/insert/#recuperer-la-valeur-dune-colonne-auto-increment","title":"R\u00e9cup\u00e9rer la valeur d'une colonne auto-incr\u00e9ment","text":"<p>On peut r\u00e9cup\u00e9rer la premi\u00e8re valeur provenant d'un champ auto-incr\u00e9ment qui a \u00e9t\u00e9 ins\u00e9rer avec succ\u00e8s en utilisant la fonction last_insert_id(). </p> <pre><code>INSERT INTO ma_table (colonne1) VALUES (valeur1);\nSELECT last_insert_id();\n</code></pre>"},{"location":"notes_de_cours/join/","title":"Les jointures","text":""},{"location":"notes_de_cours/join/#base-de-donnees-modeles","title":"Base de donn\u00e9es mod\u00e8les","text":"<p>J'ai un syst\u00e8me de deux tables, l'une de joueurs et l'autre de guilde. Les joueurs peuvent ou non faire partie d'une guilde et chaque guilde peut avoir de 0 \u00e0 plusieurs joueurs.</p> <p>table joueur</p> id guilde_id nom prenom 1 1 Fr\u00e9chette Mathieu 2 1 Ouellet Alexandre 3 2 Tousignant Simon 4 null Taleb Fr\u00e9d\u00e9ric <p>table guilde</p> id Nom 1 SqlIsGod 2 Error404 3 IsNobodyHere <p>\u200b   </p>"},{"location":"notes_de_cours/join/#inner-join","title":"INNER JOIN","text":"<p>Une jointure INNER JOIN retournera tous les enregistrements correspondants entre deux tables. </p> <p>Exemple</p> <pre><code>SELECT j.nom, j.prenom, g.nom AS guilde\nFROM joueur j INNER JOIN guilde g ON g.id = j.guilde_id;\n</code></pre> <p>R\u00e9sultat</p> nom prenom guilde Fr\u00e9chette Mathieu SqlIsGod Ouellet Alexandre SqlIsGod Tousignant Simon Error404"},{"location":"notes_de_cours/join/#left-join","title":"LEFT JOIN","text":"<p>Une jointure LEFT JOIN retournera tous les enregistrements de la table de gauche et seulement les enregistrements correspondant de la table de droite. </p> <p>Exemple</p> <pre><code>SELECT j.nom, j.prenom, g.nom AS guilde\nFROM joueur j LEFT JOIN guilde g ON g.id = j.guilde_id;\n</code></pre> <p>R\u00e9sultat</p> nom prenom guilde Fr\u00e9chette Mathieu SqlIsGod Ouellet Alexandre SqlIsGod Tousignant Simon Error404 Taleb Fr\u00e9d\u00e9ric NULL"},{"location":"notes_de_cours/join/#right-join","title":"RIGHT JOIN","text":"<p>Une jointure RIGHT JOIN retournera tous les enregistrements de la table de droite et seulement les enregistrements correspondant de la table de gauche. </p> <p>Exemple</p> <pre><code>SELECT j.nom, j.prenom, g.nom AS guilde\nFROM joueur j RIGHT JOIN guilde g ON g.id = j.guilde_id;\n</code></pre> <p>R\u00e9sultat</p> Nom prenom guilde Fr\u00e9chette Mathieu SqlIsGod Ouellet Alexandre SqlIsGod Tousignant Simon Error404 NULL NULL IsNobodyHere"},{"location":"notes_de_cours/join/#outer-join","title":"OUTER JOIN","text":"<p>Une jointure OUTER JOIN retournera tous les enregistrements des deux tables. On ne peux pas utiliser la commande OUTER JOIN en MySQL mais on peut arriver au m\u00eame r\u00e9sultat en faisant une premi\u00e8re requ\u00eate avec un LEFT JOIN unis \u00e0 une deuxi\u00e8me requ\u00eate avec un RIGHT JOIN</p> <p>Exemple </p> <pre><code>SELECT j.nom, j.prenom, g.nom AS guilde\nFROM joueur j LEFT JOIN guilde g ON g.id = j.guilde_id\nUNION\nSELECT j.nom, j.prenom, g.nom AS guilde\nFROM joueur j RIGHT JOIN guilde g ON g.id = j.guilde_id;\n</code></pre> <p>R\u00e9sultat</p> Nom prenom guilde Fr\u00e9chette Mathieu SqlIsGod Ouellet Alexandre SqlIsGod Tousignant Simon Error404 Taleb Fr\u00e9d\u00e9ric NULL NULL NULL IsNobodyHere"},{"location":"notes_de_cours/join/#union","title":"UNION","text":"<p>L'op\u00e9rateur UNION est utilis\u00e9 pour combiner les r\u00e9sultats de deux ou plusieurs requ\u00eate SELECT. On doit par contre respecter les trois r\u00e8gles suivantes : </p> <ul> <li>Toutes les requ\u00eates SELECT doivent comporter le m\u00eame nombre de colonnes.</li> <li>Les colonnes correspondantes doivent avoir un type de donn\u00e9es similaire.</li> <li>Les colonnes doivent aussi \u00eatre dans le m\u00eame ordre.</li> </ul> <p>Syntaxe</p> <pre><code>SELECT colonne1, colonne2 FROM table1\nUNION\nSELECT colonne1, colonne2 FROM table2;\n</code></pre> <p>Par d\u00e9faut l'op\u00e9rateur UNION conservera que les valeurs unique des multiples requ\u00eates. Si ont veut conserver les doublons, on doit ajouter ALL.</p> <pre><code>SELECT colonne1, colonne2 FROM table1\nUNION ALL\nSELECT colonne1, colonne2 FROM table2;\n</code></pre> <p>Le nom des colonnes du r\u00e9sultat sera le nom des colonnes d\u00e9fini dans la premi\u00e8re requ\u00eate.</p>"},{"location":"notes_de_cours/modele/","title":"Mod\u00e8le entit\u00e9-association","text":""},{"location":"notes_de_cours/modele/#definition","title":"D\u00e9finition","text":"<p>Le mod\u00e8le entit\u00e9-association (ou entit\u00e9-relation) permet de repr\u00e9senter de fa\u00e7on conceptuelle les donn\u00e9es d'un probl\u00e8me. Il nous fournit une repr\u00e9sentation graphique des associations entre les donn\u00e9es. \u00c7a nous sera tr\u00e8s utile pour cr\u00e9er des diagrammes et mod\u00e9liser diff\u00e9rents syst\u00e8mes.</p>"},{"location":"notes_de_cours/modele/#les-entites","title":"Les entit\u00e9s","text":"<p>Le mod\u00e8le contient des entit\u00e9s qui repr\u00e9sentent les \u00e9l\u00e9ments du syst\u00e8me. On peut d\u00e9finir une entit\u00e9 comme : </p> <ul> <li>Une chose capable d\u2019avoir une existence ind\u00e9pendante.</li> <li>Une chose qui peut \u00eatre identifi\u00e9e de fa\u00e7on unique.</li> </ul> <p>Une entit\u00e9 peut repr\u00e9senter quelque chose de physique (un athl\u00e8te, un livre, un auteur) ou bien un concept (un r\u00e9sultat de course, un style litt\u00e9raire). On peut aussi \u00e0 ce niveau identifier les identifiants uniques naturels d'une entit\u00e9 s'il y en a.</p>"},{"location":"notes_de_cours/modele/#les-attributs","title":"Les attributs","text":"<p>Chaque entit\u00e9 sera compos\u00e9e d'attributs repr\u00e9sentant les donn\u00e9es qui seront stock\u00e9es dans la future base de donn\u00e9es. Attention de bien diff\u00e9rencier les donn\u00e9es brutes \u00e0 enregistrer des informations qui peuvent \u00eatre calcul\u00e9es ou d\u00e9duites.</p> <p>Exemple d'attributs d'un entit\u00e9 \u00e9l\u00e8ve</p> <ul> <li>Le nom d'un \u00e9l\u00e8ve</li> <li>Son num\u00e9ro d'admission</li> <li>Sa date de naissance</li> </ul> <p>Exemple d'information \u00e0 ne pas inclure</p> <ul> <li>L'\u00e2ge de l'\u00e9l\u00e8ve</li> </ul>"},{"location":"notes_de_cours/modele/#les-associations","title":"Les associations","text":"<p>Les associations nous indiquent</p> <ul> <li>Quelles sont les interactions entre les diff\u00e9rentes entit\u00e9s du syst\u00e8me.</li> <li>Quelles sont les contraintes sur ces associations.</li> </ul> <p>On va utiliser un verbe ou un mot le plus pr\u00e9cis possible pour d\u00e9crire les associations entre les entit\u00e9s : </p> <ul> <li>Un athl\u00e8te r\u00e9alise un r\u00e9sultat</li> <li>Un auteur \u00e9crit un livre</li> </ul> <p>Les associations peuvent aussi avoir des contraintes</p> <ul> <li>Un r\u00e9sultat ne peut \u00eatre r\u00e9alis\u00e9 que par un athl\u00e8te</li> <li>Un athl\u00e8te peut r\u00e9aliser plusieurs r\u00e9sultats</li> </ul> <p>Pour vous aider \u00e0 comprendre, si on traduit en langage de base de donn\u00e9es, une entit\u00e9 va correspondre \u00e0 une table et un attribut \u00e0 un champ. Les associations repr\u00e9senteront les relations entre les tables.</p>"},{"location":"notes_de_cours/normalisation/","title":"Formes normales","text":"<p>Les formes normales sont un ensemble de r\u00e8gles qui, si elles sont suivies, nous assure de la robustesse de notre mod\u00e8le de donn\u00e9es. Elles nous offrent aussi les avantages suivants :</p> <ul> <li>\u00c9viter la redondance des donn\u00e9es</li> <li>Simplifier les mises \u00e0 jour</li> <li>Interdire les incoh\u00e9rences de donn\u00e9es venant des redondances</li> </ul> <p>Il existe 8 niveaux de formes normales, mais le plus souvent seulement les trois premi\u00e8res sont appliqu\u00e9es. C'est aussi ce que nous verrons dans le cadre du cours. Chaque forme normale doit respecter toutes les formes qui la pr\u00e9c\u00e8dent. Pour qu'on puisse dire qu'on est en troisi\u00e8me forme normale, il faut que la premi\u00e8re et deuxi\u00e8me forme soit respect\u00e9e.</p>"},{"location":"notes_de_cours/normalisation/#premiere-forme-normale-1fn","title":"Premi\u00e8re forme normale (1FN)","text":"<p>Les r\u00e8gles de la premi\u00e8re forme normale sont : </p> <p>Note</p> <ol> <li>Chaque table doit avoir une cl\u00e9 primaire</li> <li>Chaque attribut doit \u00eatre atomique et ne pas \u00eatre une liste de valeur.</li> <li>Un attribut ne doit contenir qu'un type de valeur.</li> <li>On ne doit pas r\u00e9p\u00e9ter la m\u00eame information sur plusieurs colonnes</li> </ol> <p>Une table doit toujours comporter une cl\u00e9 primaire. Si aucune donn\u00e9es ne peut remplir se r\u00f4le naturellement, on va ajouter un champ autoincr\u00e9ment\u00e9 comme cl\u00e9 primaire.</p> <p>Dans la premi\u00e8re forme normale, on doit s'assurer que chaque attribut soit atomique, c'est-\u00e0-dire qu'il n'est pas une liste de valeurs ou bien compos\u00e9 (si on le d\u00e9compose, on obtient d'autres informations). </p> <p>Exemple de deux tables usager qui ne sont pas 1FN</p> id nom email 1 Fr\u00e9chette, Mathieu math.frechette@gmail.com 2 Fr\u00e9chette, J\u00e9r\u00f4me jero@gmail.com, jerome.frechette@caramail.com 3 Mathis, Jennifer jennyM@gmail.com id nom email1 email2 1 Fr\u00e9chette, Mathieu math.frechette@gmail.com null 2 Fr\u00e9chette, J\u00e9r\u00f4me jero@gmail.com jerome.frechette@caramail.com 3 Mathis, Jennifer jennyM@gmail.com null <p>La forme n'est pas respect\u00e9e, car les valeurs de l'attribut nom sont compos\u00e9es et l'attribut email contient une liste de valeur dans la premi\u00e8re table et est \u00e9tal\u00e9 sur deux colonnes dans la deuxi\u00e8me table. Pour \u00eatre 1FN, on devrait cr\u00e9er une nouvelle table avec l'attribut email et s\u00e9parer l'attribut nom en deux, nom et pr\u00e9nom :  </p> <p>table usager</p> ID NOM PRENOM 1 Fr\u00e9chette Mathieu 2 Fr\u00e9chette J\u00e9r\u00f4me 3 Mathis Jennifer <p>table email</p> ID USAGER_ID EMAIL 1 1 math.frechette@gmail.com 2 2 jero@gmail.com 3 2 jerome.frechette@caramail.com 4 3 jennyM@gmail.com <p>Impact de l'application de la r\u00e8gle</p> <ul> <li>Aucun attribut n\u2019est compos\u00e9 ou de valeurs multiples</li> <li>Augmente grandement la performance en \u00e9vitant de parcourir des attributs sous forme de liste et en cr\u00e9ant des indexes plus performants.</li> </ul>"},{"location":"notes_de_cours/normalisation/#deuxieme-forme-normale-2fn","title":"Deuxi\u00e8me forme normale (2FN)","text":"<p>Pour \u00eatre en 2FN, il faut : </p> <p>Note</p> <ul> <li>Respecter la premi\u00e8re forme normale</li> <li>Que tous les attributs qui ne sont pas une cl\u00e9 primaire soient d\u00e9pendant en totalit\u00e9 de la ou des cl\u00e9s primaires.</li> </ul> <p>Supposons la table note_cours dans laquelle on veut enregistrer la note obtenue par cours par \u00e9tudiant :  </p> ETUDIANT_ID COURS_ID NOTE NOM_COURS 1 1 95 Programmation 1 2 1 88 Programmation 1 1 2 64 Design Web <p>On peut noter rapidement quelques probl\u00e8mes dans cette disposition : </p> <ol> <li>Il faut g\u00e9rer les possibles doublons si on veut obtenir le nom d'un cours, par exemple le cours de Programmation 1.</li> <li>Est-ce que j'ai encore acc\u00e8s au nom du cours de Design Web si je supprime l'entr\u00e9e de l'\u00e9tudiant avec le id 1 pour ce cours?</li> <li>Si je modifie le nom Programmation 1 mais qu'il y a un probl\u00e8me et que seulement le premier est modifi\u00e9, on se retrouve avec une inconsistence de donn\u00e9es.</li> <li>Qu'est-ce qui se passe si je veux ajouter un nouveau cours mais que je n'ai pas encore de notes d'\u00e9tudiants?</li> </ol> <p>Cette table n'est pas 2FN car: </p> <ul> <li> NOTE est d\u00e9pendant de ETUDIANT_ID et COURS_ID</li> <li> NOM_COURS est seulement d\u00e9pendant de COURS_ID</li> </ul> <p>Comment on pourrait normaliser cette table? Le cours est un concept qui m\u00e9rite sa propre entit\u00e9, alors on doit cr\u00e9er une nouvelle table pour stocker le nom de cours.</p> <p>table note_cours</p> ETUDIANT_ID COURS_ID NOTE 1 1 95 2 1 88 1 2 64 <p>table cours</p> ID NOM 1 Programmation 1 2 Design Web <p>Impact de l'application de la r\u00e8gle</p> <ul> <li>Permets d'\u00e9liminer plusieurs redondances des donn\u00e9es.</li> <li>Facilite la mise \u00e0 jour des donn\u00e9es</li> </ul>"},{"location":"notes_de_cours/normalisation/#troisieme-forme-normale-3fn","title":"Troisi\u00e8me forme normale (3FN)","text":"<p>Pour respecter la troisi\u00e8me forme normale, on doit : </p> <p>Note</p> <ul> <li>Remplir toutes les exigences de la deuxi\u00e8me r\u00e8gle normale, donc implicitement de la premi\u00e8re r\u00e8gle aussi.</li> <li>Tous les attributs qui ne sont pas une cl\u00e9 primaire doivent d\u00e9pendre directement de la cl\u00e9 primaire et non d'autres attributs de la table.</li> </ul> <p>Prenons par exemple la table inventaire suivante</p> ID QUANTITE ITEM_ID DESCRIPTION 1 3 1 Potion de soins mineures 2 11 2 \u00c9p\u00e9e de cuivre <p>Ici l'attribut DESCRIPTION est d\u00e9pendant de l'attribut ITEM_ID, mais pas de la cl\u00e9 primaire ID. La solution ici serait de supprimer l'attribut description de la table, en supposant que l'information se retrouve dans la table item.</p> <p>Impact de l'application de la r\u00e8gle</p> <ul> <li>Permets d'\u00e9liminer plusieurs redondances des donn\u00e9es.</li> <li>Facilite la mise \u00e0 jour des donn\u00e9es</li> </ul> <p>Dans certaines situations, une fois la troisi\u00e8me forme atteinte, il peut \u00eatre acceptable de briser la r\u00e8gle \u00e0 cause de certaines exigences ou probl\u00e9matiques pr\u00e9cise. Par exemple dans une table o\u00f9 on enregistre le d\u00e9tail d'une ligne de facture, le total de la ligne ne doit pas \u00eatre sauvegard\u00e9, car il peut \u00eatre calcul\u00e9 \u00e0 partir de la quantit\u00e9 et du prix unitaire. Par contre, si on a \u00e0 faire beaucoup d'op\u00e9ration avec le total de la ligne, on pourrait conserver le total dans une colonne pour faciliter le traitement.</p>"},{"location":"notes_de_cours/normalisation/#ressources","title":"Ressources","text":"<ul> <li>Une vid\u00e9o qui explique tr\u00e8s bien la normalisation (en anglais) : https://youtu.be/GFQaEYEc8_8</li> </ul>"},{"location":"notes_de_cours/operateur/","title":"Op\u00e9rateurs logique SQL","text":""},{"location":"notes_de_cours/operateur/#in","title":"IN","text":"<p>L'op\u00e9rateur IN nous permet d'inclure plusieurs valeurs de comparaison dans une clause WHERE. On peut le voir comme plusieurs OR sur une m\u00eame colonne. On peut aussi l'utiliser avec une sous-requ\u00eate.</p> <p>Syntaxe</p> <pre><code>-- Utilisation comme une s\u00e9rie de OR\nSELECT nom_colonne\nFROM ma_table\nWHERE nom_colonne_test IN ('Valeur1', 'Valeur2', 'Valeur3', ...);\n-- Utilisation avec une sous-requ\u00eate\nSELECT nom_colonne\nFROM ma_table\nWHERE nom_colonne_test IN (\nsous-requ\u00eate );\n</code></pre> <p>Exemple</p> <p>Je veux la liste des athl\u00e8tes qui sont originaire du Qu\u00e9bec, de l'Ontario ou de la Saskatchewan</p> <pre><code>SELECT *\nFROM athlete a\nWHERE a.province IN ('Qu\u00e9bec', 'Ontario', 'Saskatchewan');\n</code></pre> <p>\u00c0 partir des tables suivantes, je veux avoir la liste de tous les athl\u00e8tes qui ont d\u00e9j\u00e0 participer \u00e0 un marathon. La base de donn\u00e9es contient une table athl\u00e8te qui contient la liste de tous les athl\u00e8tes et une table r\u00e9sultat qui contient le r\u00e9sultat \u00e0 une course, le id de l'athl\u00e8te et le id de l'\u00e9preuve (le marathon \u00e0 un id de 4).</p> <pre><code>SELECT *\nFROM athlete a WHERE a.id IN (\nSELECT r.athlete_id FROM resultat r WHERE r.epreuve_id = 4 AND r.athlete_id = a.id\n);\n</code></pre>"},{"location":"notes_de_cours/operateur/#like","title":"LIKE","text":"<p>L'op\u00e9rateur LIKE nous permet d'utiliser les \"jokers\" (wildcard) suivant dans une expression pour faire une recherche dans un colonne sp\u00e9cifique avec un certain motif.</p> <ul> <li>% remplace n'importe quel texte de n'importe quelle longueur.</li> <li>_ remplace un seul caract\u00e8re.</li> </ul> <p>Exemple </p> <pre><code>-- Liste tous les athl\u00e8tes dont le nom d\u00e9bute par Fr\u00e9\nSELECT * FROM athlete a WHERE a.nom LIKE 'Fr\u00e9%';\n-- Liste tous les athl\u00e8tes dont le nom se termine par ette\nSELECT * FROM athlete a WHERE a.nom LIKE '%ette';\n-- Liste tous les athl\u00e8tes dont le nom contient ch (le terme ch pour \u00eatre situ\u00e9 au tout  \n-- d\u00e9but du nom, dans le milieu ou \u00e0 la fin)\nSELECT * FROM athlete a WHERE a.nom LIKE '%ch%';\n-- Liste tous les athl\u00e8tes dont le nom se d\u00e9bute par Fr, est suivi d'une lettre quelconque --- et se termine par chette.\nSELECT * FROM athlete a WHERE a.nom LIKE 'Fr_chette';\n</code></pre>"},{"location":"notes_de_cours/operateur/#regexp","title":"REGEXP","text":"<p>On peut aussi faire des comparaison beaucoup plus complexe en utilisant l'op\u00e9rateur REGEXP et des expressions r\u00e9guli\u00e8res.</p> <p>Syntaxe</p> <pre><code>SELECT nom_colonne\nFROM ma_table\nWHERE nom_colonne_test REGEXP (expression_reguliere)\n</code></pre> <p>Exemple </p> <p>Je veux la liste des athl\u00e8tes qui ont un nom d'exactement 9 caract\u00e8res</p> <pre><code>SELECT *\nFROM athlete a WHERE a.nom REGEXP \"^.{12}$\";\n</code></pre> <p>Pour cr\u00e9er et tester des expressions r\u00e9guli\u00e8res : https://regexr.com/</p>"},{"location":"notes_de_cours/operateur/#not","title":"NOT","text":"<p>L'op\u00e9rateur NOT va inverser le r\u00e9sultat d'une condition. Il peut \u00eatre jumel\u00e9 \u00e0 la plupart des autres op\u00e9rateurs.</p> <p>Exemple</p> <p>Je veux la liste des athl\u00e8tes qui ne sont PAS originaire du Qu\u00e9bec, de l'Ontario ou de la Saskatchewan</p> <pre><code>SELECT *\nFROM athlete a\nWHERE a.province NOT IN ('Qu\u00e9bec', 'Ontario', 'Saskatchewan');\n</code></pre> <p>Je veux la liste des athl\u00e8tes dont l'adresse courriel n'est pas une adresse GMAIL</p> <pre><code>SELECT *\nFROM athlete a\nWHERE a.courriel NOT LIKE '%@gmail.com';\n</code></pre> <p>Je veux la liste des athl\u00e8tes dont la valeur de la colonne date_naissance n'est pas NULL</p> <pre><code>SELECT *\nFROM athlete a\nWHERE a.date_naissance IS NOT NULL\n</code></pre>"},{"location":"notes_de_cours/operateur/#exists","title":"EXISTS","text":"<p>L'op\u00e9rateur EXISTS est utilis\u00e9e pour d\u00e9terminer si le r\u00e9sultat d'une sous-requ\u00eate retourne des enregistrements ou non.   Il retournera TRUE si la sous-requ\u00eate contient un ou plusieurs enregistrement et FALSE dans le cas contraire. Le traitement se termine d\u00e8s qu'une ligne correspondante dans la sous-requ\u00eate est trouv\u00e9e. </p> <p>Syntaxe</p> <pre><code>SELECT nom_colonne\nFROM ma_table\nWHERE EXISTS(sous-requ\u00eate);\n</code></pre> <p>Exemple</p> <p>\u00c0 partir des tables suivantes, je veux avoir la liste de tous les athl\u00e8tes qui ont d\u00e9j\u00e0 participer \u00e0 un marathon. La base de donn\u00e9es contient une table athl\u00e8te qui contient la liste de tous les athl\u00e8tes et une table r\u00e9sultat qui contient le r\u00e9sultat \u00e0 une course, le id de l'athl\u00e8te et le id de l'\u00e9preuve (le marathon \u00e0 un id de 4).</p> <pre><code>select *\nfrom athlete a where exists (\nselect 1 from resultat r where r.epreuve_id = 4 and r.athlete_id = a.id\n);\n</code></pre> <p>Il est aussi int\u00e9ressant de noter ici que m\u00eame si un athl\u00e8te a particip\u00e9 \u00e0 plus d'un marathon il ne sera affich\u00e9 qu'une fois dans la liste car comme dit plus haut, d\u00e8s qu'il y a une correspondance, la sous-requ\u00eate de la fonction se termine.</p> <p>L'op\u00e9rateur EXISTS peut aussi \u00eatre utilis\u00e9e dans la clause WHERE d'un UPDATE, INSERT et DELETE.</p> <pre><code>DELETE FROM athlete\nWHERE EXISTS(\nselect 1 from resultat r where r.epreuve_id = 4 and r.athlete_id = a.id\n);\n</code></pre> <p>Dans cette exemple, tous les athl\u00e8tes qui ont d\u00e9j\u00e0 particip\u00e9 \u00e0 un marathon seront supprim\u00e9es.</p> <p>On peut aussi utilis\u00e9 l'op\u00e9rateur NOT pour inverser le r\u00e9sultat. Si on reprends l'exemple o\u00f9 on liste les athl\u00e8tes qui ont d\u00e9j\u00e0 participer \u00e0 un marathon mais qu'on voudrait connaitre l'inverse, c'est-\u00e0-dire d'avoir la liste des athl\u00e8tes qui n'ont jamais particip\u00e9 \u00e0 un marathon. Il suffit d'ajouter NOT devant le EXISTS pour inverser le r\u00e9sultat et avoir la r\u00e9ponse recherch\u00e9.</p> <pre><code>select *\nfrom athlete a where not exists (\nselect 1 from resultat r where r.epreuve_id = 4 and r.athlete_id = a.id\n);\n</code></pre> <p>Pour plus d'exemple :</p> <ul> <li>https://sql.sh/cours/where/exists</li> <li>https://www.mysqltutorial.org/mysql-exists/</li> <li>https://www.w3schools.com/sql/sql_exists.asp</li> </ul>"},{"location":"notes_de_cours/schema_conceptuel/","title":"Le schema conceptuel","text":"<p>Dans le sch\u00e9ma conceptuel, les diff\u00e9rents \u00e9l\u00e9ments du mod\u00e8le entit\u00e9-association seront repr\u00e9sent\u00e9s de la fa\u00e7on suivante:</p> <ul> <li>Les entit\u00e9s sont d\u00e9fini par des rectangles avec leur nom en ent\u00eate.</li> <li>Les attributs seront nomm\u00e9s dans le rectangle leur entit\u00e9 ou association.</li> <li>Les associations seront repr\u00e9sent\u00e9es par un cercle avec le verbe ou le mot le d\u00e9finissant.</li> </ul> <p>Des traits relieront les entit\u00e9s aux associations. On va aussi ajouter une multiplicit\u00e9 \u00e0 chaque trait marquant une association. Une multiplicit\u00e9 se note x..y, o\u00f9 x indique le nombre minimal d'objets reli\u00e9s et y la valeur minimal. On utilise des nombres entiers positifs comme valeur, mais on peut aussi indiquer le symbole * qui d\u00e9signe plusieurs sans donner de limite.</p> <p>Prenons l'exemple suivant</p> <p></p> <p>On a dans cette exemple 4 entit\u00e9s (pays, auteur, livre et genre) ayant chacune des attributs. Remarquez que j'ai ajout\u00e9 des attributs id \u00e0 chaque entit\u00e9 car elles ne poss\u00e9daient pas d'identifiant naturel. On peut aussi voir qu'il y a trois associations: Est originaire de, R\u00e9dige et Appartient. Regardons maintenant les multiplicit\u00e9s. </p> <p>Astuce</p> <p>Les multiplicit\u00e9s sont importantes pour d\u00e9terminer les contraintes.</p> <p>Un truc pour les lire est de commencer par le nom de l'entit\u00e9, ensuite le verbe de l'association, la multiplicit\u00e9 et finalement la deuxi\u00e8me entit\u00e9. Si on prend par exemple l'association R\u00e9dige, on va lire que l'auteur peut r\u00e9diger entre 0 et plusieurs livres (0..*). \u00c0 l'inverse un livre peut \u00eatre r\u00e9dig\u00e9 par au moins un auteur mais aussi par plusieurs (1..*).</p>"},{"location":"notes_de_cours/type_relation/","title":"Types de relations","text":"<p>Il existe trois types possibles de relation entre les tables : </p>"},{"location":"notes_de_cours/type_relation/#un-a-plusieurs-1-n","title":"Un \u00e0 plusieurs (1-n)","text":"<ul> <li>Prenons par exemple un jeu d'aventure qui comprend les tables usagers et personnages (dans ce jeu un usager peut se cr\u00e9er plus d'une partie simultan\u00e9ment). Un usager peut avoir plusieurs personnages, mais chaque personnage est propre \u00e0 un usager.</li> <li>Pour repr\u00e9senter cette relation dans la structure de la base de donn\u00e9es, on va prendre la cl\u00e9 primaire de la table qui correspond au cas unique (ici l'usager) et on va l'ajouter \u00e0 la table \"plusieurs\" (le personnage). </li> </ul>"},{"location":"notes_de_cours/type_relation/#plusieurs-a-plusieurs-n-n","title":"Plusieurs \u00e0 plusieurs (n-n)","text":"<ul> <li>Encore dans ce m\u00eame jeu, on a une table inventaire et une table item. Le personnage peut avoir un inventaire qui contient plusieurs fois le m\u00eame item, et chaque item peut \u00eatre contenu dans plusieurs inventaires diff\u00e9rents. On a donc une relation de plusieurs \u00e0 plusieurs.</li> <li>Au niveau de sa repr\u00e9sentation, on va cr\u00e9er une troisi\u00e8me table \"de jonction\" qui va d\u00e9composer la relation de plusieurs \u00e0 plusieurs en des relations un \u00e0 plusieurs. Pour se faire, on va utiliser la m\u00eame technique que pour la relation 1-n. Dans notre exemple il y aura une relation entre la cl\u00e9 primaire de la table inventaire et un champ \"inventaire_id\" de la table jonction. M\u00eame chose pour la table item et une relation avec la cl\u00e9 primaire et un champ \"item_id\" dans la table jonction.</li> </ul>"},{"location":"notes_de_cours/type_relation/#un-a-un-1-1","title":"Un \u00e0 un (1-1)","text":"<p>Dans cette relation, chaque entr\u00e9e de la premi\u00e8re table ne peut se retrouver qu'une seule fois dans la seconde et vice versa. Cette forme de relation n'est pas tr\u00e8s courante, car habituellement les donn\u00e9es des deux tables seraient stock\u00e9es dans une seule. On pourrait par exemple l'utiliser pour stocker les informations plus sensibles de l'usager dans une autre table.</p> <p></p>"},{"location":"notes_de_cours/view/","title":"VIEW","text":"<p>En SQL, on peut enregistrer une requ\u00eate qu'on utilise r\u00e9guli\u00e8rement et la r\u00e9utiliser facilement dans d'autres requ\u00eates. Pour ce faire on cr\u00e9e ce qu'on appelle une VIEW.</p>"},{"location":"notes_de_cours/view/#avantages-de-creer-une-view","title":"Avantages de cr\u00e9er une VIEW","text":"<ul> <li>Simplification des requ\u00eates</li> <li>S\u00e9curiser des donn\u00e9es sensibles</li> <li>Faciliter la maintenance</li> </ul> <p>Il faut se rappeler qu'une view n'est pas une fa\u00e7on d'optimiser nos requ\u00eates. Quand une view est utilis\u00e9 dans une requ\u00eate, la requ\u00eate de la view est ex\u00e9cut\u00e9 en premier lieu et ensuite la requ\u00eate principale. On pourrait voir \u00e7a comme une sous-requ\u00eate qui est plus simple \u00e0 utiliser pour le programmeur.</p>"},{"location":"notes_de_cours/view/#creer-une-view","title":"Cr\u00e9er une VIEW","text":"<p>Pour cr\u00e9er une view, on utilise la d\u00e9claration CREATE VIEW</p> <pre><code>CREATE [OR REPLACE] VIEW [nom_bd.]nom_view [(liste_colonne)]\nAS\nrequ\u00eate_select;\n</code></pre> <ul> <li>Le nom de la view doit \u00eatre unique dans la base de donn\u00e9es, aucune autre view ni table ne doit avoir le m\u00eame nom.</li> <li>Si on ajoute l'option OR REPLACE et que la view existe d\u00e9j\u00e0, la nouvelle view va remplacer l'ancienne, sinon \u00e7a n'aura aucun effet.</li> <li>On peut d\u00e9finir optionnellement les noms de colonnes de la view, sinon les noms de colonnes seront celle de la requ\u00eate select.</li> <li>Pour terminer, on ajoute une requ\u00eate select. La requ\u00eate peut interroger des tables et d'autres views.  </li> </ul> <p>Exemple</p> <pre><code>CREATE OR REPLACE VIEW etudiant_informatique (nom_complet, da)\nAS SELECT CONCAT(e.nom, ', ', e.prenom),\ne.da\nFROM etudiant e\nINNER JOIN etudiant_concentration ec ON ec.etudiant_id = e.id\nINNER JOIN concentration c ON c.id = ec.concentration\nWHERE c.description = \"Technique informatique\";\n</code></pre> <p>Ensuite pour se servir de la view, on n'a qu'\u00e0 utiliser la view comme une table : </p> <pre><code>SELECT * FROM etudiant_informatique\nORDER BY da;\n</code></pre>"},{"location":"notes_de_cours/view/#modifier-une-view","title":"Modifier une VIEW","text":"<p>Pour modifier une view, on peut utiliser la d\u00e9claration CREATE OR REPLACE VIEW ou bien ALTER VIEW. Les deux m\u00e9thodes sont similaire dans leur r\u00e9sultat. On a d\u00e9j\u00e0 vu la syntaxe du CREATE OR REPLACE VIEW. Voici un exemple pour le ALTER VIEW : </p> <pre><code>ALTER VIEW nom_view [(liste_colonne)]\nAS requ\u00eate_select;;\n</code></pre> <p>On ne peut pas modifier le nom de la view par ces m\u00e9thodes, pour se faire, on doit utiliser la d\u00e9claration RENAME TABLE</p>"},{"location":"notes_de_cours/view/#renommer-une-view","title":"Renommer une VIEW","text":"<pre><code>RENAME TABLE nom_view_original TO nouveau_nom_view;\n</code></pre>"},{"location":"notes_de_cours/view/#supprimer-une-view","title":"Supprimer une VIEW","text":"<pre><code>DROP VIEW [IF EXISTS] nom_view;\n</code></pre>"},{"location":"notes_de_cours/view/#source","title":"Source","text":"<ul> <li>https://dev.mysql.com/doc/refman/8.0/en/create-view.html</li> <li>https://www.mysqltutorial.org/mysql-views-tutorial.aspx</li> </ul>"},{"location":"notes_de_cours/mySQL/Assurer%20la%20confidentialit%C3%A9%20et%20la%20coh%C3%A9rence%20des%20donn%C3%A9es/","title":"Assurer la confidentialit\u00e9 et la coh\u00e9rence des donn\u00e9es","text":""},{"location":"notes_de_cours/mySQL/Assurer%20la%20confidentialit%C3%A9%20et%20la%20coh%C3%A9rence%20des%20donn%C3%A9es/#transactions","title":"Transactions","text":"<p>En SQL, une transaction est une s\u00e9rie d'instructions ou de requ\u00eates qui doivent \u00eatre ex\u00e9cut\u00e9 en un seul bloc. Cette s\u00e9rie d'op\u00e9rations peut \u00eatre accept\u00e9 (COMMIT) ou refus\u00e9 (ROLLBACK). C'est un pratique qui est essentiel quand on veut lancer une s\u00e9rie d'op\u00e9ration et s'assurer de l'int\u00e9grit\u00e9 de notre base de donn\u00e9es. \u00c7a nous prot\u00e8ge \u00e0 la fois des erreurs humaines (erreur dans le code, mauvaise manipulation des donn\u00e9es, etc.) et des erreurs externes (pannes de serveur durant un traitement par exemple).</p>"},{"location":"notes_de_cours/mySQL/Assurer%20la%20confidentialit%C3%A9%20et%20la%20coh%C3%A9rence%20des%20donn%C3%A9es/#demarrer-une-transaction","title":"D\u00e9marrer une transaction","text":""},{"location":"notes_de_cours/mySQL/Assurer%20la%20confidentialit%C3%A9%20et%20la%20coh%C3%A9rence%20des%20donn%C3%A9es/#autocommit","title":"AUTOCOMMIT","text":"<p>Par d\u00e9faut MySQL n'utilise pas les transactions et toutes les requ\u00eates sont automatiquement valid\u00e9es. On peut modifier ce comportement en changeant la valeur de la variable syst\u00e8me autocommit. Attention, la variable autocommit est une variable de session, c'est-\u00e0-dire que la modification qu'on y fait n'est valide que pour la session en cours et qu'elle reprendra sa valeur par d\u00e9faut \u00e0 la session suivante.</p> <p>Exemple</p> <pre><code>-- Modification pour que les requ\u00eates ne soit plus automatiquement \"commit\u00e9\"\nSET autocommit = 0;\n-- Insertion d'un enregistrement\ninsert into athlete (nom, prenom) values ('Fr\u00e9chette', 'Mathieu');\n-- \u00c9tant donn\u00e9 que la variable autocommit est maintenant \u00e0 false, \n-- l'insertion ne sera permanente qu'apr\u00e8s avoir valid\u00e9 la transaction\n</code></pre>"},{"location":"notes_de_cours/mySQL/Assurer%20la%20confidentialit%C3%A9%20et%20la%20coh%C3%A9rence%20des%20donn%C3%A9es/#start-transaction","title":"START TRANSACTION","text":"<p>La fa\u00e7on la plus courante de d\u00e9marrer une transaction est d'utiliser la commande START TRANSACTION. Une fois la commande lanc\u00e9e, toutes les requ\u00eates suivantes seront \"en attente\" tant que la transaction ne sera pas termin\u00e9e. </p> <p>Exemple</p> <pre><code>-- Pour l'exemple, je m'assure que la valeur de la variable autocommit est bien \u00e0 TRUE.\n-- C'est la valeur par d\u00e9faut, on n'est pas oblig\u00e9 de le sp\u00e9cifi\u00e9 en temps normal.\nSET autocommit = 1;\n-- D\u00e9but de la transaction\nSTART TRANSACTION;\n-- Insertion d'un enregistrement\ninsert into athlete (nom, prenom) values ('Fr\u00e9chette', 'Mathieu');\n-- \u00c9tant donn\u00e9 qu'on a d\u00e9but\u00e9 une transaction, l'insertion ne sera permanente \n-- qu'apr\u00e8s l'avoir valid\u00e9e ou annul\u00e9e.\n</code></pre>"},{"location":"notes_de_cours/mySQL/Assurer%20la%20confidentialit%C3%A9%20et%20la%20coh%C3%A9rence%20des%20donn%C3%A9es/#terminer-une-transaction","title":"Terminer une transaction","text":""},{"location":"notes_de_cours/mySQL/Assurer%20la%20confidentialit%C3%A9%20et%20la%20coh%C3%A9rence%20des%20donn%C3%A9es/#commit","title":"COMMIT","text":"<p>Si toutes les requ\u00eates se sont bien ex\u00e9cut\u00e9 et qu'on veut confirmer les changements, on va utiliser la commande COMMIT. Les modifications apport\u00e9es seront maintenant permanentes et la transaction va se terminer. </p> <p>Exemple</p> <pre><code>BEGIN TRANSACTION;\n-- Op\u00e9rations \u00e0 effectuer\n...\n-- Valider la transaction et rendre les op\u00e9rations permanentes.\nCOMMIT;\n</code></pre>"},{"location":"notes_de_cours/mySQL/Assurer%20la%20confidentialit%C3%A9%20et%20la%20coh%C3%A9rence%20des%20donn%C3%A9es/#rollback","title":"ROLLBACK","text":"<p>Pour terminer la transaction en annulant TOUTES les modifications effectu\u00e9es, on va utiliser la commande ROLLBACK. </p> <p>Exemple</p> <pre><code>BEGIN TRANSACTION;\n-- Op\u00e9rations \u00e0 effectuer\n...\n-- Annuler toutes les op\u00e9rations depuis le d\u00e9but de la transaction\nROLLBACK;\n</code></pre>"},{"location":"notes_de_cours/mySQL/Assurer%20la%20confidentialit%C3%A9%20et%20la%20coh%C3%A9rence%20des%20donn%C3%A9es/#utiliser-des-points-de-sauvegarde","title":"Utiliser des points de sauvegarde","text":"<p>On ne peut pas d\u00e9buter une seconde transaction \"\u00e0 l'int\u00e9rieur\" d'une transaction d\u00e9j\u00e0 d\u00e9but\u00e9e. Par contre on peut cr\u00e9er des points de sauvegarde qui nous permettront d'annuler uniquement les op\u00e9rations effectu\u00e9es depuis un point de sauvegarde. </p>"},{"location":"notes_de_cours/mySQL/Assurer%20la%20confidentialit%C3%A9%20et%20la%20coh%C3%A9rence%20des%20donn%C3%A9es/#savepoint","title":"SAVEPOINT","text":"<p>Pour cr\u00e9er un point de sauvegarde, on va utiliser la commande SAVEPOINT.  On peut d\u00e9finir plusieurs point de sauvegarde \u00e0 l'int\u00e9rieur d'une m\u00eame transaction.</p> <pre><code>SAVEPOINT nom_du_savepoint\n</code></pre>"},{"location":"notes_de_cours/mySQL/Assurer%20la%20confidentialit%C3%A9%20et%20la%20coh%C3%A9rence%20des%20donn%C3%A9es/#rollback-to-savepoint","title":"ROLLBACK TO SAVEPOINT","text":"<p>Une fois le point de sauvegarde cr\u00e9er, on peut annuler uniquement les transactions effectu\u00e9es depuis celui-ci.</p> <p>Exemple</p> <pre><code>-- D\u00e9but de la transaction\nSTART TRANSACTION;\n-- Insertion d'un enregistrement\ninsert into athlete (nom, prenom) values ('Fr\u00e9chette', 'Mathieu');\n-- Cr\u00e9ation d'un point de sauvegarde\nSAVEPOINT save_Math;\n-- Insertion d'un second enregistrement\ninsert into athlete (nom, prenom) values ('Fr\u00e9chette', 'Marianne');\n-- Annulation jusqu'au savepoint save_Math\nROLLBACK TO SAVEPOINT save_Math;\n-- Validation de la transaction\nCOMMIT;\n-- L'athl\u00e8te Mathieu Fr\u00e9chette sera ins\u00e9r\u00e9 dans la base de donn\u00e9es mais pas Marianne Fr\u00e9chette.\n</code></pre>"},{"location":"notes_de_cours/mySQL/Assurer%20la%20confidentialit%C3%A9%20et%20la%20coh%C3%A9rence%20des%20donn%C3%A9es/#commandes-qui-terminent-automatiquement-une-transaction","title":"Commandes qui terminent automatiquement une transaction","text":"<p>Attention, certaines commandes SQL vont cl\u00f4turer automatiquement une transaction et aussi valider toutes les op\u00e9rations, comme si on aurait utilis\u00e9 la commande COMMIT. Voici une liste de ces commandes</p> <ul> <li>Toutes les commandes qui apportent une modification \u00e0 la base de donn\u00e9es vont valider une transaction</li> <li>La cr\u00e9ation ou suppression d'une base de donn\u00e9es</li> <li>Toutes les modifications apport\u00e9es aux tables, cr\u00e9ation, modification, etc...</li> <li>La cr\u00e9ation ou suppression d'un index.</li> <li>La cr\u00e9ation de proc\u00e9dures stock\u00e9es, de fonctions ou de vues.</li> <li>La cr\u00e9ation, suppression ou modification d'un utilisateur.</li> <li>Le d\u00e9but d'une nouvelle transaction sans avoir termin\u00e9 la premi\u00e8re.</li> <li>Changer la valeur de la variable autocommit \u00e0 TRUE.</li> <li>La cr\u00e9ation ou suppression d'un LOCK sur une table.</li> </ul>"},{"location":"notes_de_cours/mySQL/Assurer%20la%20confidentialit%C3%A9%20et%20la%20coh%C3%A9rence%20des%20donn%C3%A9es/#sources","title":"Sources","text":"<ul> <li>https://dev.mysql.com/doc/refman/8.0/en/sql-transactional-statements.html</li> <li>https://www.javatpoint.com/mysql-transaction</li> <li>https://openclassrooms.com/fr/courses/1959476-administrez-vos-bases-de-donnees-avec-mysql/1970063-transactions</li> <li>https://www.mysqltutorial.org/mysql-transaction.aspx</li> </ul>"},{"location":"notes_de_cours/mySQL/Assurer%20la%20confidentialit%C3%A9%20et%20la%20coh%C3%A9rence%20des%20donn%C3%A9es/#gestion-des-utilisateurs-et-des-autorisations","title":"Gestion des utilisateurs et des autorisations","text":"<p>Pour se connecter \u00e0 MySQL on doit avoir en main un utilisateur et un mot de passe. Chaque utilisateurs \u00e0 ses propres privil\u00e8ges sur ce qui peut faire ou non dans la base de donn\u00e9es. Les informations sur les utilisateurs et leur privil\u00e8ges sont stock\u00e9s dans les tables suivantes de la base de donn\u00e9es mysql : </p> <ul> <li>user : les informations sur les utilisateurs.</li> <li>db, tables_priv, columns_priv et proc_priv : les privil\u00e8ges de l'utilisateur.</li> </ul> <p>On peut modifier les valeurs de ces tables mais il est pr\u00e9f\u00e9rable de ne pas le faire directement dans ces tables mais avec les commandes appropri\u00e9es.</p>"},{"location":"notes_de_cours/mySQL/Assurer%20la%20confidentialit%C3%A9%20et%20la%20coh%C3%A9rence%20des%20donn%C3%A9es/#creer-un-utilisateur","title":"Cr\u00e9er un utilisateur","text":"<p>On utilise la commande CREATE USER en sp\u00e9cifiant un nom d'utilisateur, un h\u00f4te et un mot de passe. L'h\u00f4te est optionnel et repr\u00e9sente l'adresse \u00e0 partir de laquelle l'utilisateur va se connecter. On utilise souvent localhost ou 127.0.0.1, ce qui veut dire que l'utilisateur pourra se connecter \u00e0 partir de la machine o\u00f9 est situ\u00e9 le serveur. Si on ne sp\u00e9cifie pas d'h\u00f4te, l'utilisateur pourra se connecter depuis n'importe quel h\u00f4te.</p> <pre><code>CREATE USER 'nomUtilisateur'@'hote' IDENTIFIED BY 'motDePasse';\n-- Exemple\nCREATE USER 'math'@'localhost' IDENTIFIED BY 'qwerty4ever';\nCREATE USER 'patate'@'156.20.12.2' IDENTIFIED BY 'qwerty4ever';\n</code></pre> <p>On peut utiliser le joker % pour permettre la cr\u00e9ation d'un utilisateur qui va pouvoir se connecter depuis plus d'un h\u00f4te : </p> <pre><code>-- L'utilisateur va pourvoir se connecter depuis n'importe quel h\u00f4te dont \n-- l'adresse ip commence par 156.20.12\nCREATE USER 'math'@'156.20.12.%' IDENTIFIED BY 'qwerty4ever';\n-- L'utilisateur va pouvoir se connecter depuis n'importe quel h\u00f4te\nCREATE USER 'math'@'%' IDENTIFIED BY 'qwerty4ever';\n</code></pre>"},{"location":"notes_de_cours/mySQL/Assurer%20la%20confidentialit%C3%A9%20et%20la%20coh%C3%A9rence%20des%20donn%C3%A9es/#modifier-le-nom-dun-utilisateur","title":"Modifier le nom d'un utilisateur","text":"<p>Pour modifier le nom d'un utilisateur, on utilise la commande RENAME USER : </p> <pre><code>RENAME USER 'Math'@'localhost' TO 'Mathieu'@'localhost';\n</code></pre>"},{"location":"notes_de_cours/mySQL/Assurer%20la%20confidentialit%C3%A9%20et%20la%20coh%C3%A9rence%20des%20donn%C3%A9es/#supprimer-un-utilisateur","title":"Supprimer un utilisateur","text":"<p>Pour supprimer un utilisateur, on va utiliser DROP USER : </p> <pre><code>DROP USER 'Math'@'localhost'\n</code></pre>"},{"location":"notes_de_cours/mySQL/Assurer%20la%20confidentialit%C3%A9%20et%20la%20coh%C3%A9rence%20des%20donn%C3%A9es/#gestion-des-autorisations","title":"Gestion des autorisations","text":""},{"location":"notes_de_cours/mySQL/Assurer%20la%20confidentialit%C3%A9%20et%20la%20coh%C3%A9rence%20des%20donn%C3%A9es/#ajouter-ou-enlever-de-privileges","title":"Ajouter ou enlever de privil\u00e8ges","text":"<pre><code>-- Syntaxe pour ajouter un privil\u00e8ge\nGRANT nomDuPrivilege (listeDesColonnes)\nON niveauPrivilege\nTO nomUsager\n-- Syntaxe pour enlever un privil\u00e8ge\nREVOKE nomDuPrivilege\nON niveauPrivilege\nFROM nomUsager\n</code></pre> <ul> <li>nomDuPrivilege : Le nom du privil\u00e8ge \u00e0 ajouter (SELECT, INSERT, CREATE TABLE, etc.). On peut en mettre plusieurs en les s\u00e9parant par une virgule.</li> <li>listeDesColonnes : C'est optionnel mais on peut sp\u00e9cifier les colonnes sur lesquelles le privil\u00e8ge est appliqu\u00e9. On pourrait par exemple accorder le droit \u00e0 un usager de faire un UPDATE mais seulement pour des colonnes sp\u00e9cifiques d'une table.</li> <li>niveauPrivilege : \u00c0 quel niveau s'applique le privil\u00e8ge. (Globalement, seulement pour une base de donn\u00e9es en particulier, pour une table pr\u00e9cise, etc.)</li> <li>nomUsager : \u00c0 quel usager on veut octroyer le privil\u00e8ge.</li> </ul> <p>Exemple</p> <pre><code>/* Octroyer \u00e0 l'usager test le droit de faire des requ\u00eates select et insert sur toutes \nles tables de la base de donn\u00e9es credit_social\n */\nGRANT SELECT, INSERT\nON credit_social.*\nTO test@localhost;\n</code></pre>"},{"location":"notes_de_cours/mySQL/Assurer%20la%20confidentialit%C3%A9%20et%20la%20coh%C3%A9rence%20des%20donn%C3%A9es/#liste-des-privileges","title":"Liste des privil\u00e8ges","text":"<p>Voici une courte liste de privil\u00e8ges qu'on peut ajouter \u00e0 un usager : </p> <ul> <li>ALL, tous les privil\u00e8ges, sauf celui d'en accorder.</li> <li>USAGE, aucun privil\u00e8ges</li> <li>GRANT OPTION, accorde le droit d'ajouter des privil\u00e8ges (il n'est pas inclus quand on utilise ALL)</li> <li>SELECT, INSERT, UPDATE, DELETE, pour les requ\u00eates CRUD correspondante</li> <li>CREATE TABLE, ALTER, DROP, pour des op\u00e9rations sur les tables et la base de donn\u00e9es.</li> <li>CREATE ROUTINE, ALTER ROUTINE, EXECUTE, pour des op\u00e9rations sur les proc\u00e9dures stock\u00e9es.</li> </ul> <p>Il y a beaucoup d'autres privil\u00e8ges qu'on peut octroyer, vous pouvez consulter une liste plus compl\u00e8te dans la documentation de MySQL : </p> <ul> <li>https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html</li> </ul>"},{"location":"notes_de_cours/mySQL/Assurer%20la%20confidentialit%C3%A9%20et%20la%20coh%C3%A9rence%20des%20donn%C3%A9es/#niveau-des-privileges","title":"Niveau des privil\u00e8ges","text":"<p>L'indicateur du niveau de privil\u00e8ges se compose en deux sections, la ou les base de donn\u00e9es et ensuite le nom de la table ou de la proc\u00e9dure stock\u00e9e.</p> <ul> <li>*.* : Toutes les bases de donn\u00e9es et toutes les tables/proc\u00e9dures stock\u00e9es</li> <li>credit_social.* : Pour la base de donn\u00e9es credit_social, toutes les tables</li> <li>credit_social.classe : Pour la base de donn\u00e9es credit_social, la table classe uniquement.</li> </ul>"},{"location":"notes_de_cours/mySQL/Assurer%20la%20confidentialit%C3%A9%20et%20la%20coh%C3%A9rence%20des%20donn%C3%A9es/#afficher-les-autorisations-dun-utilisateur","title":"Afficher les autorisations d'un utilisateur","text":"<pre><code>SHOW GRANTS FOR 'usager'@'localhost';\n</code></pre>"},{"location":"notes_de_cours/mySQL/Assurer%20la%20confidentialit%C3%A9%20et%20la%20coh%C3%A9rence%20des%20donn%C3%A9es/#gestions-des-erreurs","title":"Gestions des erreurs","text":"<p>En attendant des notes plus compl\u00e8te sur le sujet, voici un petit extrait de code sur une gestion de base dans une proc\u00e9dure stock\u00e9e.</p> <pre><code>DECLARE EXIT HANDLER FOR SQLEXCEPTION\nBEGIN ROLLBACK; RESIGNAL;\nEND;\nSTART TRANSACTION;      -- Mes op\u00e9rations\nCOMMIT;\n</code></pre>"},{"location":"notes_de_cours/mySQL/Assurer%20la%20confidentialit%C3%A9%20et%20la%20coh%C3%A9rence%20des%20donn%C3%A9es/#sources_1","title":"Sources","text":"<ul> <li>https://www.mysqltutorial.org/mysql-error-handling-in-stored-procedures/</li> <li>https://dev.mysql.com/doc/refman/8.0/en/declare-handler.html</li> <li>https://dev.mysql.com/doc/refman/8.0/en/resignal.html</li> </ul>"},{"location":"notes_de_cours/mySQL/error_handling/","title":"Gestion des erreurs dans les proc\u00e9dures stock\u00e9es","text":"<p>Pour intercepter les erreurs dans un proc\u00e9dure stock\u00e9 on va utiliser des handlers. On peut aussi g\u00e9n\u00e9rer une erreur avec la commande SIGNAL.</p>"},{"location":"notes_de_cours/mySQL/error_handling/#handler","title":"HANDLER","text":"<p>La syntaxe de d\u00e9claration d'un handler est la suivante :  <pre><code>DECLARE handler_action HANDLER FOR condition_value statement;\n</code></pre></p>"},{"location":"notes_de_cours/mySQL/error_handling/#handler_action","title":"handler_action","text":"<p>De qu'elle fa\u00e7on l'ex\u00e9cution des instructions va \u00eatre affect\u00e9e lorsque l'erreur survient.</p> <ul> <li>CONTINUE : L'ex\u00e9cution des instructions va se continuer.</li> <li>EXIT : L'ex\u00e9cution des instructions comprisent \u00e0 l'int\u00e9rieur du bloc BEGIN ... END d'o\u00f9 l'erreur est survenue se termine.</li> </ul>"},{"location":"notes_de_cours/mySQL/error_handling/#condition_value","title":"condition_value","text":"<p>Qu'elle est l'erreur qu'on veut intercepter avec le handler</p> <ul> <li>mysql_error_code : Un code d'erreur MySQL. En voici la liste ici</li> <li>SQLSTATE [VALUE] : O\u00f9 VALUE repr\u00e9sente un code de 5 caract\u00e8re qui repr\u00e9sente un code d'\u00e9tat MySQL. Tr\u00e8s similaire \u00e0 mysql_error_code. Vous pouvez consulter la liste ici</li> <li>condition_name : On peut d\u00e9finir un nom de condition qui est associ\u00e9 \u00e0 un code d'erreur ou d'\u00e9tat et l'utiliser ensuite dans le handler. <pre><code>DECLARE no_such_table CONDITION FOR 1051;\nDECLARE CONTINUE HANDLER FOR no_such_table\nBEGIN\n-- body of handler\nEND;\n</code></pre></li> <li>SQLWARNINGS : Un raccourci pour les code d'\u00e9tat SQLSTATE qui commence par 01, le plus souvent des messages d'avertissements</li> <li>NOT FOUND: On l'a vue dans notre utilisation des cursors. Se d\u00e9clenche quand le curseur arrive \u00e0 la fin de ses r\u00e9sultats</li> <li>SQLEXCEPTION: Un raccourci pour les code d'\u00e9tat SQLSTATE qui ne commence pas par 00, 01 ou 02.</li> </ul>"},{"location":"notes_de_cours/mySQL/error_handling/#exemple","title":"Exemple","text":"<p>Quand ma proc\u00e9dure stock\u00e9e provoque une erreur, je veux annuler les op\u00e9rations d\u00e9j\u00e0 effectu\u00e9es et quitter le traitement en affichant un message d'erreur. On va utiliser ROLLBACK pour annuler les op\u00e9rations et SELECT avec notre message d'erreur.</p> <pre><code>CREATE PROCEDURE exemplebd.test_error(valeur INT)\nBEGIN\nDECLARE EXIT HANDLER FOR SQLEXCEPTION\nBEGIN\nROLLBACK;\nSELECT 'Une erreur est survenue, les op\u00e9rations ont \u00e9t\u00e9 annul\u00e9.';\nEND;\nSTART TRANSACTION;\n...\nCOMMIT;\nEND\n</code></pre>"},{"location":"notes_de_cours/mySQL/error_handling/#signal","title":"SIGNAL","text":"<p>Avec SIGNAL on va pouvoir g\u00e9r\u00e9ner une erreur qui va stopper l'\u00e9x\u00e9cution de la proc\u00e9dure stock\u00e9e. On peut aussi jumeler SIGNAL avec un HANDLER</p> <p>La syntaxe de d\u00e9claration de SIGNAL est la suivante : <pre><code>SIGNAL condition_value SET signal_information_item;\n</code></pre></p>"},{"location":"notes_de_cours/mySQL/error_handling/#condition_value_1","title":"condition_value","text":"<p>Comme pour le HANDLER, on va utiliser un SQLSTATE ou une condition qu'on aura d\u00e9fini auparavant. Le plus souvent on va utiliser SQLSTATE = '45000' qui indique une erreur d\u00e9finie par l'utilisateur.</p>"},{"location":"notes_de_cours/mySQL/error_handling/#signal_information_item","title":"signal_information_item","text":"<p>On peut ensuite d\u00e9finir des valeurs \u00e0 des variables pr\u00e9d\u00e9finis associ\u00e9s \u00e0 SIGNAL. Une de cess variables est MESSAGE_TEXT qui nous permet de retourner un message d'erreur. La liste compl\u00eate est ici.</p>"},{"location":"notes_de_cours/mySQL/error_handling/#exemple_1","title":"Exemple","text":"<p>Dans une proc\u00e9dure je veux arr\u00eater l'\u00e9x\u00e9cution si la valeur de la variable nombre est inf\u00e9rieur \u00e0 0</p> <p><pre><code>CREATE PROCEDURE exemplebd.test_error(nombre INT)\nBEGIN\nIF (nombre &lt; 0) THEN\nSIGNAL SQLSTATE SET MESSAGE_TEXT = \"La valeur doit \u00eatre sup\u00e9rieure \u00e0 0\";\nEND IF;\nSELECT nombre;\nEND\n</code></pre> r\u00e9sultat</p> <p></p> <p>Le m\u00eame exemple avec un HANDLER. <pre><code>CREATE PROCEDURE exemplebd.test_error(nombre INT)\nBEGIN\nDECLARE EXIT HANDLER FOR SQLSTATE '45000' BEGIN SELECT \"La valeur doit \u00eatre sup\u00e9rieure \u00e0 0\" AS message_erreur;\nEND;\nIF (nombre &lt; 0) THEN\nSIGNAL SQLSTATE '45000';\nEND IF;\nSELECT nombre;\nEND\n</code></pre> r\u00e9sultat</p> <p></p> <p>L'avantage d'utiliser le handler est qu'on pourrait \u00e9x\u00e9cuter un traitement lors de l'erreur alors qu'avec signal on ne peut pas. La m\u00e9thode pour r\u00e9cup\u00e9rer l'erreur dans notre code ne sera pas la m\u00eame selon ce qu'on utilise. </p> <p>Avec le handler, c'est selon le traitement utilis\u00e9. Dans notre exemple pus haut, quand on lance la proc\u00e9dure on s'attend \u00e0 recevoir un r\u00e9sultat de requ\u00eate. Si une erreur est retourn\u00e9e, on pourrait v\u00e9rifier qu'il y a un champ message_erreur dans le r\u00e9sultat et l'afficher.</p> <p>Avec signal uniquement, on va devoir r\u00e9cup\u00e9rer l'exception avec un try .. catch. Voici un exemple en Python avec MySQL Connector</p> <pre><code>def TestError():\nresult = []\ntry:\nconnection = mysql.connect(**db_config)\ncursor = connection.cursor()\ncursor.callproc('test_error', (12,))\nfor result in cursor.stored_results():\n# Si j'utilise un handler avec le signal\n# mon message d'erreur se retrouvera ici\nprint(result.fetchall())\nexcept mysql.Error as erreur:\n# Le message d'erreur avec signal est ici\nprint(erreur.msg)\nfinally:\ncursor.close()\nconnection.close()\n</code></pre>"},{"location":"notes_de_cours/mySQL/error_handling/#source","title":"Source","text":"<ul> <li>https://dev.mysql.com/doc/refman/8.0/en/declare-handler.html</li> <li>https://dev.mysql.com/doc/refman/8.0/en/signal.html</li> <li>https://www.mysqltutorial.org/mysql-error-handling-in-stored-procedures/</li> </ul>"},{"location":"notes_de_cours/mySQL/gestion_autorisations/","title":"Gestion des autorisations","text":""},{"location":"notes_de_cours/mySQL/gestion_autorisations/#ajouter-ou-enlever-de-privileges","title":"Ajouter ou enlever de privil\u00e8ges","text":"<pre><code>-- Syntaxe pour ajouter un privil\u00e8ge\nGRANT nomDuPrivilege (listeDesColonnes)\nON niveauPrivilege\nTO nomUsager_nomRole\n-- Syntaxe pour enlever un privil\u00e8ge\nREVOKE nomDuPrivilege\nON niveauPrivilege\nFROM nomUsager_nomRole\n</code></pre> <ul> <li>nomDuPrivilege : Le nom du privil\u00e8ge \u00e0 ajouter (SELECT, INSERT, CREATE TABLE, etc.). On peut en mettre plusieurs en les s\u00e9parant par une virgule.</li> <li>listeDesColonnes : C'est optionnel mais on peut sp\u00e9cifier les colonnes sur lesquelles le privil\u00e8ge est appliqu\u00e9. On pourrait par exemple accorder le droit \u00e0 un usager de faire un UPDATE mais seulement pour des colonnes sp\u00e9cifiques d'une table.</li> <li>niveauPrivilege : \u00c0 quel niveau s'applique le privil\u00e8ge. (Globalement, seulement pour une base de donn\u00e9es en particulier, pour une table pr\u00e9cise, etc.)</li> <li>nomUsager_nomRole: \u00c0 quel usager ou role on veut octroyer le privil\u00e8ge.</li> </ul> <p>Exemple</p> <pre><code>/* Octroyer \u00e0 l'usager test le droit de faire des requ\u00eates select et insert sur toutes \nles tables de la base de donn\u00e9es credit_social\n */\nGRANT SELECT, INSERT\nON credit_social.*\nTO test@localhost;\n/* Octroyer \u00e0 l'usager test2 le droit de faire des requ\u00eates select uniquement sur la table citoyen de la base de donn\u00e9es credit_social.\n   De plus, seulement les colonnes id, nom et prenom seront accessible pour cette table\n */\nGRANT SELECT (id, nom, prenom)\nON credit_social.citoyen\nTO test2@localhost;\n</code></pre>"},{"location":"notes_de_cours/mySQL/gestion_autorisations/#liste-des-privileges","title":"Liste des privil\u00e8ges","text":"<p>Voici une courte liste de privil\u00e8ges qu'on peut ajouter \u00e0 un usager : </p> <ul> <li>ALL, tous les privil\u00e8ges, sauf celui d'en accorder.</li> <li>USAGE, aucun privil\u00e8ges</li> <li>GRANT OPTION, accorde le droit d'ajouter des privil\u00e8ges (il n'est pas inclus quand on utilise ALL)</li> <li>SELECT, INSERT, UPDATE, DELETE, pour les requ\u00eates CRUD correspondante</li> <li>CREATE TABLE, ALTER, DROP, REFERENCES pour des op\u00e9rations sur les tables et la base de donn\u00e9es.</li> <li>CREATE ROUTINE, ALTER ROUTINE, EXECUTE, pour des op\u00e9rations sur les proc\u00e9dures stock\u00e9es.</li> </ul> <p>Il y a beaucoup d'autres privil\u00e8ges qu'on peut octroyer, vous pouvez consulter une liste plus compl\u00e8te dans la documentation de MySQL : </p> <ul> <li>https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html</li> </ul>"},{"location":"notes_de_cours/mySQL/gestion_autorisations/#niveau-des-privileges","title":"Niveau des privil\u00e8ges","text":"<p>L'indicateur du niveau de privil\u00e8ges se compose en deux sections, la ou les base de donn\u00e9es et ensuite le nom de la table ou de la proc\u00e9dure stock\u00e9e.</p> <ul> <li>*.* : Toutes les bases de donn\u00e9es et toutes les tables/proc\u00e9dures stock\u00e9es</li> <li>credit_social.* : Pour la base de donn\u00e9es credit_social, toutes les tables</li> <li>credit_social.classe : Pour la base de donn\u00e9es credit_social, la table classe uniquement.</li> </ul>"},{"location":"notes_de_cours/mySQL/gestion_autorisations/#afficher-les-autorisations-dun-utilisateur-ou-dun-role","title":"Afficher les autorisations d'un utilisateur ou d'un r\u00f4le","text":"<pre><code>SHOW GRANTS FOR 'usager_role'@'localhost';\n</code></pre>"},{"location":"notes_de_cours/mySQL/gestion_role/","title":"Gestion des r\u00f4les","text":"<p>(Attention, il peut y avoir quelques diff\u00e9rences entre MySQL et MariaDB, les notes pr\u00e9sent\u00e9es ici sont en MariaDB)</p> <p>Un r\u00f4le est une regroupement nomm\u00e9 de privil\u00e8ges qu'on peut accorder \u00e0 un ou plusieurs utilisateurs. On retrouve le m\u00eame fonctionnement qu'avec l'utilisateur : on va cr\u00e9er un r\u00f4le et ensuite lui octroyer des privil\u00e8ges. </p>"},{"location":"notes_de_cours/mySQL/gestion_role/#creer-un-role","title":"Cr\u00e9er un r\u00f4le","text":"<p>On va cr\u00e9er un ou plusieurs r\u00f4les avec la commande <code>CREATE ROLE</code> suivi du nom du r\u00f4le. On peut cr\u00e9er plus d'un r\u00f4le \u00e0 la fois en s\u00e9parant chaque nom de r\u00f4le par une virgule.</p> <pre><code>CREATE ROLE IF NOT EXISTS 'nomRole1', 'nommRole2';\n</code></pre>"},{"location":"notes_de_cours/mySQL/gestion_role/#ajouter-ou-enlever-des-privileges-a-un-role","title":"Ajouter ou enlever des privil\u00e8ges \u00e0 un r\u00f4le","text":"<p>Voir la section Gestion des autorisations</p>"},{"location":"notes_de_cours/mySQL/gestion_role/#accorder-un-role-a-un-utilisateur","title":"Accorder un r\u00f4le \u00e0 un utilisateur","text":"<p>Pour accorder un r\u00f4le \u00e0 un utilisateur on utilise la commande <code>GRANT</code> suivi du nom du r\u00f4le et du nom d'un ou plusieurs utilisateur. (Attention il faut ajouter l'h\u00f4te de l'utilisateur si celui-ci est diff\u00e9rent de %)</p> <pre><code>GRANT 'nomRole1' TO 'user1', 'user2'@'192.168.1.%';\n</code></pre>"},{"location":"notes_de_cours/mySQL/gestion_role/#revoquer-un-role-a-un-utilisateur","title":"R\u00e9voquer un r\u00f4le \u00e0 un utilisateur","text":"<p>Pour accorder un r\u00f4le \u00e0 un utilisateur on utilise la commande <code>REVOKE</code> suivi du nom du r\u00f4le et du nom d'un ou plusieurs utilisateur. (Attention il faut ajouter l'h\u00f4te de l'utilisateur si celui-ci est diff\u00e9rent de %)</p> <pre><code>REVOKE 'nomRole1' FROM 'user1', 'user2'@'192.168.1.%';\n</code></pre>"},{"location":"notes_de_cours/mySQL/gestion_role/#supprimer-un-role","title":"Supprimer un r\u00f4le","text":"<pre><code>DROP ROLE 'nomRole1';\n</code></pre>"},{"location":"notes_de_cours/mySQL/gestion_role/#activer-un-role","title":"Activer un r\u00f4le","text":"<p>Une fois le r\u00f4le cr\u00e9\u00e9 il faut qu'il soit activer pour qu'il puisse \u00eatre appliqu\u00e9 entre le connexion. Attention un usager ne peut avoir qu'un role d'activ\u00e9 \u00e0 la fois. On doit \u00eatre connect\u00e9 \u00e0 l'usager pour activer son r\u00f4le.</p> <pre><code>SET ROLE nomRole\n</code></pre>"},{"location":"notes_de_cours/mySQL/gestion_role/#afficher-le-role-qui-est-actif","title":"Afficher le r\u00f4le qui est actif","text":"<p>On peut conna\u00eetre le r\u00f4le pr\u00e9sentement activ\u00e9 pour l'utilisateur de cette fa\u00e7on. Le r\u00e9sultat sera null si aucun r\u00f4le n'est activ\u00e9. <pre><code>SELECT current_role();\n</code></pre></p>"},{"location":"notes_de_cours/mySQL/gestion_role/#definir-un-role-par-defaut","title":"D\u00e9finir un r\u00f4le par d\u00e9faut","text":"<p>Lors de la connexion, le r\u00f4le d\u00e9fini de cette fa\u00e7on sera automatiquement activ\u00e9.</p> <pre><code>SET DEFAULT ROLE nomRole FOR nomUsager\n</code></pre>"},{"location":"notes_de_cours/mySQL/gestion_utilisateurs/","title":"Gestion des utilisateurs","text":"<p>(Attention, il peut y avoir quelques diff\u00e9rences entre MySQL et MariaDB, les notes pr\u00e9sent\u00e9es ici sont en MariaDB)</p> <p>Pour se connecter \u00e0 MySQL on doit avoir en main un utilisateur et un mot de passe. Chaque utilisateurs \u00e0 ses propres privil\u00e8ges sur ce qui peut faire ou non dans la base de donn\u00e9es. Les informations sur les utilisateurs et leur privil\u00e8ges sont stock\u00e9s dans les tables suivantes de la base de donn\u00e9es mysql : </p> <ul> <li>user : les informations sur les utilisateurs.</li> <li>db, tables_priv, columns_priv et proc_priv : les privil\u00e8ges de l'utilisateur.</li> </ul> <p>On peut modifier les valeurs de ces tables mais il est pr\u00e9f\u00e9rable de ne pas le faire directement dans ces tables mais avec les commandes appropri\u00e9es.</p>"},{"location":"notes_de_cours/mySQL/gestion_utilisateurs/#creer-un-utilisateur","title":"Cr\u00e9er un utilisateur","text":"<p>On utilise la commande CREATE USER en sp\u00e9cifiant un nom d'utilisateur, un h\u00f4te et un mot de passe. L'h\u00f4te est optionnel et repr\u00e9sente l'adresse \u00e0 partir de laquelle l'utilisateur va se connecter. On utilise souvent localhost ou 127.0.0.1, ce qui veut dire que l'utilisateur pourra se connecter \u00e0 partir de la machine o\u00f9 est situ\u00e9 le serveur. Si on ne sp\u00e9cifie pas d'h\u00f4te, l'utilisateur pourra se connecter depuis n'importe quel h\u00f4te.</p> <pre><code>CREATE USER IF NOT EXISTS 'nomUtilisateur'@'hote' IDENTIFIED BY 'motDePasse';\n-- Exemple\nCREATE USER IF NOT EXISTS 'math'@'localhost' IDENTIFIED BY 'qwerty4ever';\nCREATE USER IF NOT EXISTS 'math2' IDENTIFIED BY 'qwerty4ever';\nCREATE USER IF NOT EXISTS 'patate'@'156.20.12.2' IDENTIFIED BY 'qwerty4ever';\n</code></pre> <p>On peut utiliser le joker % pour permettre la cr\u00e9ation d'un utilisateur qui va pouvoir se connecter depuis plus d'un h\u00f4te : </p> <pre><code>-- L'utilisateur va pourvoir se connecter depuis n'importe quel h\u00f4te dont \n-- l'adresse ip commence par 156.20.12\nCREATE USER IF NOT EXISTS 'math'@'156.20.12.%' IDENTIFIED BY 'qwerty4ever';\n-- L'utilisateur va pouvoir se connecter depuis n'importe quel h\u00f4te\nCREATE USER IF NOT EXISTS 'math'@'%' IDENTIFIED BY 'qwerty4ever';\n</code></pre>"},{"location":"notes_de_cours/mySQL/gestion_utilisateurs/#modifier-le-nom-dun-utilisateur","title":"Modifier le nom d'un utilisateur","text":"<p>Pour modifier le nom d'un utilisateur, on utilise la commande RENAME USER : </p> <pre><code>RENAME USER 'Math'@'localhost' TO 'Mathieu'@'localhost';\n</code></pre>"},{"location":"notes_de_cours/mySQL/gestion_utilisateurs/#supprimer-un-utilisateur","title":"Supprimer un utilisateur","text":"<p>Pour supprimer un utilisateur, on va utiliser DROP USER : </p> <pre><code>DROP USER 'Math'@'localhost'\n</code></pre>"},{"location":"notes_de_cours/mySQL/gestion_utilisateurs/#afficher-la-liste-des-utilisateurs","title":"Afficher la liste des utilisateurs","text":"<p>En mysql il n'y a pas de commande <code>SHOW USERS</code> pour nous afficher la liste de tous les utilisateurs. On a vu plus haut que les informations de l'utilisateur \u00e9tait stock\u00e9 dans la table user de la base de donn\u00e9es mysql. On peut donc avec une requ\u00eate SELECT sur cette table afficher la liste des utilisateurs. Les usagers et les r\u00f4les sont stock\u00e9s ensemble dans cette table. Avec MariaDB on peut les diff\u00e9rencier avec la colonne is_role qui prend la valeur \"N\" quand c'est un usager et \"Y\" quand c'est un r\u00f4le. </p> <pre><code>-- Affiche tout les usagers\nSELECT * FROM mysql.user WHERE is_role = 'N';\n-- Si on veut uniquement la liste des usagers et de leur h\u00f4te\nSELECT user, host FROM mysql.user WHERE is_role = 'N';\n</code></pre>"},{"location":"notes_de_cours/mySQL/transaction/","title":"Transactions","text":"<p>En SQL, une transaction est une s\u00e9rie d'instructions ou de requ\u00eates qui doivent \u00eatre ex\u00e9cut\u00e9 en un seul bloc. Cette s\u00e9rie d'op\u00e9rations peut \u00eatre accept\u00e9 (COMMIT) ou refus\u00e9 (ROLLBACK). C'est une pratique qui est essentiel quand on veut lancer une s\u00e9rie d'op\u00e9ration et s'assurer de l'int\u00e9grit\u00e9 de notre base de donn\u00e9es. \u00c7a nous prot\u00e8ge \u00e0 la fois des erreurs humaines (erreur dans le code, mauvaise manipulation des donn\u00e9es, etc.) et des erreurs externes (pannes de serveur durant un traitement par exemple).</p>"},{"location":"notes_de_cours/mySQL/transaction/#demarrer-une-transaction","title":"D\u00e9marrer une transaction","text":""},{"location":"notes_de_cours/mySQL/transaction/#autocommit","title":"AUTOCOMMIT","text":"<p>Par d\u00e9faut MySQL n'utilise pas les transactions et toutes les requ\u00eates sont automatiquement valid\u00e9es. On peut modifier ce comportement en changeant la valeur de la variable syst\u00e8me autocommit. Attention, la variable autocommit est une variable de session, c'est-\u00e0-dire que la modification qu'on y fait n'est valide que pour la session en cours et qu'elle reprendra sa valeur par d\u00e9faut \u00e0 la session suivante.</p> <p>Exemple</p> <pre><code>-- Modification pour que les requ\u00eates ne soit plus automatiquement \"commit\u00e9\"\nSET autocommit = 0;\n-- Insertion d'un enregistrement\ninsert into athlete (nom, prenom) values ('Fr\u00e9chette', 'Mathieu');\n-- \u00c9tant donn\u00e9 que la variable autocommit est maintenant \u00e0 false, \n-- l'insertion ne sera permanente qu'apr\u00e8s avoir valid\u00e9 la transaction\n</code></pre>"},{"location":"notes_de_cours/mySQL/transaction/#start-transaction","title":"START TRANSACTION","text":"<p>La fa\u00e7on la plus courante de d\u00e9marrer une transaction est d'utiliser la commande START TRANSACTION. Une fois la commande lanc\u00e9e, toutes les requ\u00eates suivantes seront \"en attente\" tant que la transaction ne sera pas termin\u00e9e. </p> <p>Exemple</p> <pre><code>-- Pour l'exemple, je m'assure que la valeur de la variable autocommit est bien \u00e0 TRUE.\n-- C'est la valeur par d\u00e9faut, on n'est pas oblig\u00e9 de le sp\u00e9cifi\u00e9 en temps normal.\nSET autocommit = 1;\n-- D\u00e9but de la transaction\nSTART TRANSACTION;\n-- Insertion d'un enregistrement\ninsert into athlete (nom, prenom) values ('Fr\u00e9chette', 'Mathieu');\n-- \u00c9tant donn\u00e9 qu'on a d\u00e9but\u00e9 une transaction, l'insertion ne sera permanente \n-- qu'apr\u00e8s l'avoir valid\u00e9e ou annul\u00e9e.\n</code></pre>"},{"location":"notes_de_cours/mySQL/transaction/#terminer-une-transaction","title":"Terminer une transaction","text":""},{"location":"notes_de_cours/mySQL/transaction/#commit","title":"COMMIT","text":"<p>Si toutes les requ\u00eates se sont bien ex\u00e9cut\u00e9 et qu'on veut confirmer les changements, on va utiliser la commande COMMIT. Les modifications apport\u00e9es seront maintenant permanentes et la transaction va se terminer. </p> <p>Exemple</p> <pre><code>START TRANSACTION;\n-- Op\u00e9rations \u00e0 effectuer\n...\n-- Valider la transaction et rendre les op\u00e9rations permanentes.\nCOMMIT;\n</code></pre>"},{"location":"notes_de_cours/mySQL/transaction/#rollback","title":"ROLLBACK","text":"<p>Pour terminer la transaction en annulant TOUTES les modifications effectu\u00e9es, on va utiliser la commande ROLLBACK. </p> <p>Exemple</p> <pre><code>START TRANSACTION;\n-- Op\u00e9rations \u00e0 effectuer\n...\n-- Annuler toutes les op\u00e9rations depuis le d\u00e9but de la transaction\nROLLBACK;\n</code></pre>"},{"location":"notes_de_cours/mySQL/transaction/#utiliser-des-points-de-sauvegarde","title":"Utiliser des points de sauvegarde","text":"<p>On ne peut pas d\u00e9buter une seconde transaction \"\u00e0 l'int\u00e9rieur\" d'une transaction d\u00e9j\u00e0 d\u00e9but\u00e9e. Par contre on peut cr\u00e9er des points de sauvegarde qui nous permettront d'annuler uniquement les op\u00e9rations effectu\u00e9es depuis un point de sauvegarde. </p>"},{"location":"notes_de_cours/mySQL/transaction/#savepoint","title":"SAVEPOINT","text":"<p>Pour cr\u00e9er un point de sauvegarde, on va utiliser la commande SAVEPOINT.  On peut d\u00e9finir plusieurs point de sauvegarde \u00e0 l'int\u00e9rieur d'une m\u00eame transaction.</p> <pre><code>SAVEPOINT nom_du_savepoint\n</code></pre>"},{"location":"notes_de_cours/mySQL/transaction/#rollback-to-savepoint","title":"ROLLBACK TO SAVEPOINT","text":"<p>Une fois le point de sauvegarde cr\u00e9er, on peut annuler uniquement les transactions effectu\u00e9es depuis celui-ci.</p> <p>Exemple</p> <pre><code>-- D\u00e9but de la transaction\nSTART TRANSACTION;\n-- Insertion d'un enregistrement\ninsert into athlete (nom, prenom) values ('Fr\u00e9chette', 'Mathieu');\n-- Cr\u00e9ation d'un point de sauvegarde\nSAVEPOINT save_Math;\n-- Insertion d'un second enregistrement\ninsert into athlete (nom, prenom) values ('Fr\u00e9chette', 'Marianne');\n-- Annulation jusqu'au savepoint save_Math\nROLLBACK TO SAVEPOINT save_Math;\n-- Validation de la transaction\nCOMMIT;\n-- L'athl\u00e8te Mathieu Fr\u00e9chette sera ins\u00e9r\u00e9 dans la base de donn\u00e9es mais pas Marianne Fr\u00e9chette.\n</code></pre>"},{"location":"notes_de_cours/mySQL/transaction/#commandes-qui-terminent-automatiquement-une-transaction","title":"Commandes qui terminent automatiquement une transaction","text":"<p>Attention, certaines commandes SQL vont cl\u00f4turer automatiquement une transaction et aussi valider toutes les op\u00e9rations, comme si on aurait utilis\u00e9 la commande COMMIT. Voici une liste de ces commandes</p> <ul> <li>Toutes les commandes qui apportent une modification \u00e0 la base de donn\u00e9es vont valider une transaction</li> <li>La cr\u00e9ation ou suppression d'une base de donn\u00e9es</li> <li>Toutes les modifications apport\u00e9es aux tables, cr\u00e9ation, modification, etc...</li> <li>La cr\u00e9ation ou suppression d'un index.</li> <li>La cr\u00e9ation de proc\u00e9dures stock\u00e9es, de fonctions ou de vues.</li> <li>La cr\u00e9ation, suppression ou modification d'un utilisateur.</li> <li>Le d\u00e9but d'une nouvelle transaction sans avoir termin\u00e9 la premi\u00e8re.</li> <li>Changer la valeur de la variable autocommit \u00e0 TRUE.</li> <li>La cr\u00e9ation ou suppression d'un LOCK sur une table.</li> </ul>"},{"location":"notes_de_cours/mySQL/transaction/#sources","title":"Sources","text":"<ul> <li>https://dev.mysql.com/doc/refman/8.0/en/sql-transactional-statements.html</li> <li>https://www.javatpoint.com/mysql-transaction</li> <li>https://www.mysqltutorial.org/mysql-transaction.aspx</li> </ul>"},{"location":"notes_de_cours/mySQL/triggers/","title":"Les triggers","text":"<p>Un trigger (ou d\u00e9clencheur) est une sorte de proc\u00e9dure stock\u00e9e, une s\u00e9rie d'instruction enregistr\u00e9e, qui est reli\u00e9 \u00e0 une table de la base de donn\u00e9es. Les instructions seront ex\u00e9cut\u00e9 automatiquement lors d'une insertion, d'une mise \u00e0 jour ou d'une suppression dans la table \u00e0 laquelle le trigger est attach\u00e9 et \u00e7a pour chacune des lignes affect\u00e9es par la requ\u00eate.  On doit aussi sp\u00e9cifier \u00e0 quel moment il sera d\u00e9clench\u00e9, avant l'instruction SQL ou apr\u00e8s. On peut donc d\u00e9finir jusqu'\u00e0 6 triggers par tables : avant ou apr\u00e8s une insertion, avant ou apr\u00e8s une mise \u00e0 jour, avant ou apr\u00e8s une suppression.</p> <p>On peut depuis un trigger modifier et ins\u00e9rer des donn\u00e9es dans n'importe quel table de la base de donn\u00e9es \u00e0 l'exception des tables utilis\u00e9es dans la requ\u00eate qui l'a d\u00e9clench\u00e9. Si on veut travailler sur la table \u00e0 laquelle le trigger est attach\u00e9, on n'a acc\u00e8s qu'\u00e0 la ligne qu'on est en train de traiter.</p> <p>### Pourquoi utiliser des triggers ?</p> <ul> <li>S'assurer de la validit\u00e9 des donn\u00e9es avant leur insertion ou leur modification.</li> <li>Pour pouvoir utiliser des traitements plus complexe lors d'op\u00e9ration qui affectent plusieurs tables. Par exemple si on veut supprimer des donn\u00e9es qui sont reli\u00e9es \u00e0 d'autres tables par des cl\u00e9s \u00e9trang\u00e8res et que les options offerte ne nous suffise pas.</li> <li>Pour garder une trace des op\u00e9rations effectu\u00e9es dans la base de donn\u00e9es.</li> <li>Mettre \u00e0 jour des informations qu'on utilise r\u00e9guli\u00e8rement pour pouvoir les retrouver facilement, comme par exemple le solde actif d'un compte client.</li> </ul>"},{"location":"notes_de_cours/mySQL/triggers/#syntaxe","title":"Syntaxe","text":"<p>On utilise la commande CREATE TRIGGER pour la cr\u00e9ation d'un trigger. Le nom du trigger doit \u00eatre unique dans la base de donn\u00e9es. Il est d'usage de nommer le trigger avec le moment de son d\u00e9clenchement, de l'op\u00e9ration effectu\u00e9e et du nom de la table associ\u00e9e, ex je veux cr\u00e9er un trigger sur la table usager qui se d\u00e9clenchera avant un insertion, je vais le nommer before_insert_usager. </p> <pre><code>CREATE TRIGGER nomTrigger momentDuDeclenchement operationSQL ON nomTable\nFOR EACH ROW\ncorpsDuTrigger;\n</code></pre> <ul> <li>Le moment du d\u00e9clenchement est BEFORE ou AFTER</li> <li>L'op\u00e9ration SQL est soit INSERT, UPDATE ou DELETE</li> <li>Si le corps du trigger contient plus d'une requ\u00eate et/ou op\u00e9ration, on doit les englober par un BEGIN END.</li> </ul>"},{"location":"notes_de_cours/mySQL/triggers/#new-et-old","title":"NEW et OLD","text":"<p>On peut utiliser les mots cl\u00e9s dans le corps du trigger pour acc\u00e9der aux donn\u00e9es avant ou apr\u00e8s leur modification. </p> <ul> <li>OLD repr\u00e9sente les donn\u00e9es avant qu'elles ne soient modifi\u00e9 par le trigger. Ces donn\u00e9es ne peuvent pas \u00eatre modifi\u00e9es. Old est disponible pour les UPDATE et DELETE</li> <li>NEW repr\u00e9sente les donn\u00e9es apr\u00e8s qu'elles aient \u00e9t\u00e9 modifi\u00e9. C'est donn\u00e9es peuvent \u00eatre lu et modifi\u00e9s. New est disponible pour les INSERT et UPDATE.</li> </ul> Requ\u00eate OLD NEW INSERT - OUI UPDATE OUI OUI DELETE OUI -"},{"location":"notes_de_cours/mySQL/triggers/#erreur-dans-un-trigger","title":"Erreur dans un trigger","text":"<p>Si un trigger ex\u00e9cut\u00e9 avant (BEFORE) une requ\u00eate cause une erreur, la requ\u00eate ne sera pas ex\u00e9cut\u00e9e. Les triggers ex\u00e9cut\u00e9s apr\u00e8s (AFTER) une requ\u00eate qui g\u00e9n\u00e8re une erreur feront \u00e9chouer celle-ci. Il est donc important de bien concevoir les triggers et d'inclure une gestion des erreurs dans notre traitement.</p>"},{"location":"notes_de_cours/mySQL/triggers/#supprimer-un-trigger","title":"Supprimer un trigger","text":"<p>Pour supprimer un trigger, on utilise la commande DROP TRIGGER suivie du nom du trigger. Si on supprimer une table, tous les triggers qui lui sont associ\u00e9e seront aussi supprim\u00e9s.</p> <pre><code>DROP TRIGGER before_insert_usager;\n</code></pre>"},{"location":"notes_de_cours/mySQL/triggers/#restrictions","title":"Restrictions","text":"<ul> <li>On en peut pas utiliser de transaction dans un trigger, START TRANSACTION, COMMIT ou ROLLBACK</li> <li>On peut utiliser une proc\u00e9dure stock\u00e9e mais avec les restrictions suivantes : </li> <li>La proc\u00e9dure ne peut pas retourner d'informations, \u00e0 part en utilisant un param\u00e8tre OUT ou IN/OUT. </li> <li>La proc\u00e9dure ne doit pas utiliser de transaction.</li> <li>On ne peut pas modifier les donn\u00e9es d'une table qui est utilis\u00e9e dans la requ\u00eate qui d\u00e9clenche le trigger. \u00c7a compte pour toutes les tables de la requ\u00eate et non seulement la table associ\u00e9e au trigger.</li> <li>Une suppression ou modification de donn\u00e9es d\u00e9clench\u00e9e par une cl\u00e9 \u00e9trang\u00e8re ne provoquera pas l'ex\u00e9cution du trigger associ\u00e9 \u00e0 cette table.</li> </ul> <p>Exemple de triggers</p> <p>J'ai une table joueur, un table guilde et une table joueur_guilde_log. Dans la table joueur il y a un champ guilde_id qui fait r\u00e9f\u00e9rence \u00e0 la cl\u00e9 primaire de la table guilde. Quand on modifie la guilde d'un joueur, je voudrais sauvegarder les informations dans une autre table (le id du joueur, l'id de son acienne guile, l'id de la nouvelle et la date de la modification). Je vais cr\u00e9er un trigger AFTER sur la table joueur. Je vais aussi valider que la colonne guilde_id a \u00e9t\u00e9 modifi\u00e9 avant d'ajouter les informations dans la table joueur_guilde_log. </p> <pre><code>CREATE TRIGGER joueur_after_update\nAFTER UPDATE\nON joueur FOR EACH ROW\nBEGIN\nIF OLD.guilde_id &lt;&gt; NEW.guilde_id THEN INSERT INTO joueur_guild_log (joueur_id, old_guild_id, new_guild_id, mod_date)\nVALUES (old.id, old.guilde_id, new.guilde_id, NOW());\nEND IF;\nEND\n</code></pre>"},{"location":"notes_de_cours/mySQL/triggers/#documentation","title":"Documentation","text":"<ul> <li>https://www.mysqltutorial.org/mysql-triggers/</li> <li>https://www.javatpoint.com/mysql-trigger</li> <li>https://dev.mysql.com/doc/refman/8.0/en/trigger-syntax.html</li> </ul>"},{"location":"notes_de_cours/python/mysql_connector/","title":"MySQL Connector pour python","text":"<p>C'est la librairie qu'on va utiliser pour permettre \u00e0 nos programme python d'interragir avec une base de donn\u00e9es MySQL</p>"},{"location":"notes_de_cours/python/mysql_connector/#installation","title":"Installation","text":"<p>En ligne de commande  <pre><code>pip install mysql-connector-python\n</code></pre></p>"},{"location":"notes_de_cours/python/mysql_connector/#documentation","title":"Documentation","text":"<ul> <li>Documentation officielle</li> <li>Documentation sur W3Schools</li> </ul>"},{"location":"notes_de_cours/python/pyQT5/","title":"pyQT5","text":"<p>C'est une librairie qui va nous servir \u00e0 cr\u00e9er des interfaces graphiques pour nos programmes python</p>"},{"location":"notes_de_cours/python/pyQT5/#installation","title":"Installation","text":"<p>En ligne de commande </p> <pre><code>pip install PyQt5\n</code></pre>"},{"location":"notes_de_cours/python/pyQT5/#documentation","title":"Documentation","text":""},{"location":"notes_de_cours/python/pyQT5/#tutoriel","title":"Tutoriel","text":"<ul> <li>https://www.pythonguis.com/courses/start/</li> <li>https://www.tutorialspoint.com/pyqt5/index.html</li> <li>https://build-system.fman.io/pyqt5-tutorial</li> </ul>"},{"location":"notes_de_cours/python/pyQT5/#disposition-de-notre-application","title":"Disposition de notre application","text":"<ul> <li>https://www.pythonguis.com/tutorials/pyqt-layouts/</li> <li>Le gridLayout plus en d\u00e9tail : https://www.pythontutorial.net/pyqt/pyqt-qgridlayout/</li> </ul>"},{"location":"notes_de_cours/python/pyQT5/#les-widgets","title":"Les Widgets","text":"<ul> <li>https://www.tutorialspoint.com/pyqt/pyqt_basic_widgets.htm</li> <li>https://www.pythonguis.com/tutorials/pyqt-basic-widgets/</li> </ul>"},{"location":"notes_de_cours/python/qtdesigner/","title":"Qt Designer","text":"<p>Qt Designer est un \u00e9diteur graphique qui nous permet de cr\u00e9er visuellement des interfaces graphiques en pyQt. Les interfaces seront ensuite export\u00e9 en fichier python que nous pourront utiliser dans nos programme.</p>"},{"location":"notes_de_cours/python/qtdesigner/#installation","title":"Installation","text":"<p>Directement en ligne de commande</p> <pre><code>pip install PyQt5Designer\n</code></pre> <p>Ou bien depuis le site officiel : https://www.qt.io/download-qt-installer, vous allez devoir vous cr\u00e9er un compte pour l'installation.</p>"},{"location":"notes_de_cours/python/qtdesigner/#lancer-qt-designer","title":"Lancer Qt Designer","text":"<p>En ligne de commande, utilisez la commande designer</p> <pre><code>designer\n</code></pre>"},{"location":"notes_de_cours/python/qtdesigner/#convertir-un-fichier-ui-en-python","title":"Convertir un fichier ui en python","text":"<p>Les interfaces que vous allez cr\u00e9er avec Qt Designer seront enregistr\u00e9es dans des fichiers avec l'extension ui. Pour les utiliser dans vos programme python on va devoir les convertir. On peut le faire directement en ligne de commande et utilisant la commande pyuic5 suivi du nom du fichier source, de l'argument -o et du nom du fichier de destination. Le fichier de destination n'est pas oblig\u00e9 d'exister au moment d'ex\u00e9cuter la commande mais il doit porter l'extension py.</p> <pre><code>pyuic5 masuperfenetre.ui -o MaSuperFenetre.py\n</code></pre>"},{"location":"notes_de_cours/python/qtdesigner/#exemple","title":"Exemple","text":"<p>Au d\u00e9marrage de l'application Qt Designer la fen\u00eatre nouveau formulaire va s'afficher. S\u00e9lectionnez Main Window dans la section templates\\forms et cliquez sur cr\u00e9er.</p> <p></p> <p>Une fen\u00eatre vide va \u00eatre cr\u00e9\u00e9 avec une barre de menu dans le haut et une barre de statut dans le bas. Enregistrez cette fen\u00eatre dans le r\u00e9pertoire de votre application. (Dans mon exemple j'ai nomm\u00e9 mon fichier exemple.ui). Vous voil\u00e0 pr\u00eat \u00e0 cr\u00e9er votre interface. On va recr\u00e9er l'interface de l'exercice 09.</p> <p></p> <p>Commencez par supprimer le menu et la barre de statut. Dans l'inspecteur d'objet s\u00e9lectionnez menubar et statusbar et avec un clique droit choisissez supprimer.</p> <p></p> <p>Dans la section de gauche vous avez une liste de widgets \u00e0 utiliser. Glissez un Vertical Layout dans la fen\u00eatre principale. Cliquez ensuite sur la fen\u00eatre principale \u00e0 l'ext\u00e9rieur du widget que vous venez d'ajouter et dans la barre de menu du haut de l'\u00e9diteur cliquez sur le bouton mettre en forme verticalement. Le widget Vertical Layout devrait s'\u00e9tendre \u00e0 la totalit\u00e9 de la fen\u00eatre.</p> <p></p> <p>Ensuite dans l'ordre on va ajouter un Label, un Line Edit, un Push Button et un autre Label.</p> <p></p> <p>En s\u00e9lectionnant chaque widget, modifiez la propri\u00e9t\u00e9 objectName dans l'\u00e9diteur de propri\u00e9t\u00e9s. Je n'ai pas renomm\u00e9 le premier label, mais pour les suivants j'ai utilis\u00e9 les noms suivants : </p> <ul> <li>Line Edit = editCitoyenId</li> <li>Push Button = btnRechercher</li> <li>Label = lblResultat</li> </ul> <p></p> <p>Vous pouvez modifier le texte affich\u00e9 sur un widget avec la propri\u00e9t\u00e9 text. Vous pouvez ajuter le format du texte avec plusieurs propri\u00e9t\u00e9s, dont font et alignment.</p> <p></p> <p>Derni\u00e8re chose, on va associer une fonction \u00e0 un \u00e9v\u00e9nement, ici un clique de la souris sur le bouton. On peut le faire depuis l'interface de Qt Designer ou dans notre script python. Pour le faire depuis Qt Designer, dDans le menu principal, sous \u00c9dition s\u00e9lectionnez \u00c9diter signaux/slots. Ensuite cliquez sur le bouton et sans rel\u00e2cher le bouton glisser la souris vers la fen\u00eatre principale (attention on cible la fen\u00eatre principale et non le widget layout). Vous devriez avoir une ligne rouge avec \u00e0 son bout une fl\u00e8che compos\u00e9e de barre rouge. Rel\u00e2cher maintenant le bouton de la souris et la fen\u00eatre Configurer connexion va s'afficher.</p> <p></p> <p>S\u00e9lectionnez clicked() et cliquez sur \u00c9diter. Dans la fen\u00eatre qui va appara\u00eetre cliquez sur le bouton avec une croix verte dans la section Slots. Modifier ensuite le nom de la fonction (slot1() par d\u00e9faut) pour le nom que vous allez donner \u00e0 votre fonction. Cliquez ensuite sur ok. Dans la fen\u00eatre pr\u00e9c\u00e9dente vous avez maintenant votre fonction dans la section de droite, s\u00e9lectionnez la et cliquez sur ok.</p> <p></p> <p></p> <p>Pour connecter un \u00e9v\u00e9nement depuis le script python, voir plus bas dans l'exemble du fichier app.py.</p> <p>Voila le travail pour notre interface vous pouvez sauvegarder le tout et ouvrir un terminal dans le r\u00e9pertoire o\u00f9 le fichier se trouve.  Utilisez la commande qu'on a vu plus haut pour convertir le fichier ui et fichier python.</p> <pre><code>pyuic5 exemple.ui -o MainWindow.py\n</code></pre> <p>Si on regarde dans le fichier python qu'on a cr\u00e9\u00e9 on peut voir qu'il y a une classe Ui_MainWindow qui contient toute notre interface. Maintenant on va cr\u00e9er un fichier python qui va \u00eatre le script principal et qui ont va appeler cette classe et l'afficher.</p> <p>app.py</p> <pre><code>import sys\nfrom PyQt5.QtWidgets import QApplication, QMainWindow\n# Importer la classe Ui_MainWindow du fichier MainWindow.py\nfrom demo import Ui_MainWindow\n# En param\u00eatre de la classe MainWindow on va h\u00e9riter des fonctionnalit\u00e9s\n# de QMainWindow et de notre interface Ui_MainWindow\nclass MainWindow(QMainWindow, Ui_MainWindow):\ndef __init__(self, *args, obj=None, **kwargs):\nsuper(MainWindow, self).__init__(*args, **kwargs)\n# On va cr\u00e9er la fen\u00eatre avec cette commande\nself.setupUi(self)\n# On connecter un \u00e9v\u00e9nement sur le line edit\nself.editIdCitoyen.returnPressed.connect(self.test)\n# On d\u00e9fini la fonction qu'on avait d\u00e9clar\u00e9 pour le clique sur le bouton\ndef recherche_citoyen(self):\n# On r\u00e9cup\u00e8re la valeur du line edit\ncitoyen_id = self.editIdCitoyen.text()\n# Ensuite on pourrait lancer une fonction qui interroge la BD\n# Pour l'exemple on va simplement afficher la valeur dans le label \n# lblResultat\nself.lblResultat.setText(citoyen_id)\n# editIdCitoyen et lblResultat sont les noms qu'on a donn\u00e9 au widget\n# dans l'\u00e9diteur Qt Designer\ndef test(self):\nself.lblResultat.setText('Tu as appuy\u00e9 sur Enter')\napp = QApplication(sys.argv)\nwindow = MainWindow()\nwindow.show()\napp.exec()\n</code></pre> <p>Finalement ex\u00e9cutez le script app.py pour afficher le r\u00e9sultat.</p> <p></p>"},{"location":"notes_de_cours/python/qtdesigner/#ressources","title":"Ressources","text":"<ul> <li>https://realpython.com/qt-designer-python/</li> <li>https://www.pythonguis.com/tutorials/qt-designer-gui-layout/</li> <li>https://doc.qt.io/qt-5/qtdesigner-manual.html</li> </ul>"}]}